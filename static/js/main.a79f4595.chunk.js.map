{"version":3,"sources":["services/timerService.js","features/timers/TimerStatus.js","features/timers/timersSlice.js","services/localStorage.js","features/timers/Timer.jsx","features/timers/TimerList.jsx","features/timers/TimerCountdown.jsx","hooks/useInterval.js","audio/timesup.mp3","features/timers/TimerMain.jsx","components/ControlPanel.jsx","features/settings/settingsSlice.js","features/settings/Settings.jsx","audio/Muay_Thai_Sarama_ROUND_1.mp3","components/MusicPlayer.jsx","components/TimerApp.jsx","App.js","serviceWorkerRegistration.js","reportWebVitals.js","store.js","index.js"],"names":["calcTimerRemainTime","params","minute","second","isInteger","createTimer","timer","id","timerId","uuidv4","label","remainTime","music","isValidTimeInput","value","timeUnit","Number","parseInt","getInvalidTimeInputMessage","TimerStatus","RUNNING","PAUSED","STOPPED","timersAdapter","createEntityAdapter","timersSlice","createSlice","name","initialState","loadedState","savedStateJson","localStorage","getItem","savedState","JSON","parse","savedTotalLoop","totalLoop","savedTimers","entities","Object","values","forEach","ids","err","loadState","state","showCountdown","delay","activeTimerId","activeTimerMusic","status","loop","current","total","mute","alarm","getInitialState","reducers","timersInitialized","addMany","timerAdded","addOne","timerDeleted","removeOne","timerSetLabel","action","payload","timerSetTime","reducer","prepare","timerSetMusic","timerDeductTime","timerStatusUpdated","timerSetNextTimer","timers","entries","index","length","timerDelayUpdated","timerResetTimers","timerResetRemainTime","timerSetShowCountdown","timerSetCurrentLoop","timerSetTotalLoop","console","log","timerToggledMute","muteType","actions","getSelectors","selectTimers","selectAll","selectTimerById","selectById","selectTotal","selectShowCountdown","selectTimerDelay","selectActiveTimerId","selectTimerStatus","selectLastTimerId","createSelector","selectTimerLoopCurrentCount","selectTimerLoopTotalCount","selectTimerIsMuted","selectActiveTimerMusic","useStyles","makeStyles","theme","musicInput","minWidth","timerContainer","borderRadius","padding","breakpoints","up","spacing","timerToolbar","justifyContent","timerInput","deleteButton","opacity","position","top","right","transition","zIndex","Timer","dispatch","useDispatch","classes","useSelector","handleTimeChange","event","target","Paper","variant","className","style","IconButton","onClick","size","fontSize","Box","m","display","TextField","onChange","e","handleLabelChange","inputProps","textAlign","alignItems","type","InputLabelProps","shrink","min","max","inputMode","error","FormControl","InputLabel","Select","labelId","MenuItem","TimerList","map","digits","margin","millisecond","bottom","mainDisplay","width","TimerCountdown","convertMillisec","alarmPlayer","timerStatus","lastTimerId","loopCurrent","loopTotal","timePerUnit","millisec","Math","floor","showTimerDigits","digit","callback","savedCallback","useRef","useEffect","setInterval","clearInterval","useInterval","play","height","flexDirection","Typography","component","marginTop","marginBottom","mainSection","overflowY","TimerMain","heightOfMainSection","Container","maxWidth","src","timesUpSfx","playing","html5","ref","formControl","controlPanelContainer","addButton","toolbar","ControlPanel","setHeightOfControlPanel","handleModalStatus","isMuted","document","getElementById","clientHeight","elevation","disabled","color","Button","isNaN","darkMode","savedPreference","window","matchMedia","matches","initDarkMode","settingsSlice","toggleDarkMode","selectIsDarkMode","settings","Settings","open","handleOpen","isDarkMode","Dialog","onClose","fullWidth","DialogTitle","marginLeft","DialogContent","paddingBottom","Grid","container","item","xs","handleDelayChange","FormControlLabel","control","Switch","checked","setItem","MusicPlayer","musicPlayer","seek","muayThaiBgMusic","app","overflow","appBar","left","boxSizing","TimerApp","useState","heightOfControlPanel","setHeightOfMainSection","modalIsOpen","openModal","setHeight","innerHeight","useCallback","addEventListener","removeEventListener","App","React","useMemo","createMuiTheme","palette","primary","main","blue","ThemeProvider","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","timersReducer","settingsReducer","subscribe","throttle","timerState","newEntities","cloneDeep","entity","saveState","stringify","getState","ReactDOM","render","StrictMode","URL","process","href","origin","fetch","headers","response","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.a79f4595.chunk.js","sourcesContent":["import { isInteger } from \"lodash\"\r\nimport { v4 as uuidv4 } from \"uuid\"\r\n\r\nconst defaultTimerMinute = 0\r\nconst defaultTimerSecond = 3\r\n\r\nexport const calcTimerRemainTime = (params) => {\r\n\tconst { minute, second } = params\r\n\r\n\tif (isInteger(minute) && isInteger(second)) {\r\n\t\treturn (minute * 60 + second) * 1000\r\n\t}\r\n\treturn 0\r\n}\r\n\r\nexport const createTimer = (params) => {\r\n\tconst id = params && params.timerId ? params.timerId : uuidv4()\r\n\tconst timer = {\r\n\t\tid: id,\r\n\t\tlabel: params && params.label ? params.label : \"timer label\",\r\n\t\tminute: params && params.minute ? params.minute : defaultTimerMinute,\r\n\t\tsecond: params && params.second ? params.second : defaultTimerSecond,\r\n\t\tremainTime: 0,\r\n\t\tmusic:\r\n\t\t\tparams && params.music ? params.music : \"Muay_Thai_Sarama_ROUND_1.mp3\",\r\n\t}\r\n\ttimer.remainTime = calcTimerRemainTime({\r\n\t\tminute: timer.minute,\r\n\t\tsecond: timer.second,\r\n\t})\r\n\r\n\treturn timer\r\n}\r\n\r\nexport const initTimers = () => {\r\n\tconst timers = []\r\n\tfor (let i = 0; i < 3; i++) {\r\n\t\tconst timer = createTimer()\r\n\t\ttimers.push(timer)\r\n\t}\r\n\treturn timers\r\n}\r\n\r\nexport const convertTimeFormatForDisplay = (convertMillisec) => {\r\n\tif (!isInteger(convertMillisec) || convertMillisec <= 0) {\r\n\t\treturn {\r\n\t\t\tmillisec: 0,\r\n\t\t\tsecond: 0,\r\n\t\t\tminute: 0,\r\n\t\t}\r\n\t}\r\n\r\n\tconst millisec = (convertMillisec % 1000) / 10\r\n\tconst second = Math.floor(convertMillisec / 1000) % 60\r\n\tconst minute = Math.floor(convertMillisec / 1000 / 60) % 60\r\n\r\n\treturn {\r\n\t\tmillisec,\r\n\t\tsecond,\r\n\t\tminute,\r\n\t}\r\n}\r\n\r\nexport const getInvalidTimeInputMessage = ({ value, timeUnit }) => {\r\n\tif (timeUnit !== \"minute\" && timeUnit !== \"second\") {\r\n\t\t// console.log(\"Time unit must be either 'minute' or 'second'\")\r\n\t\treturn \"Time unit must be either 'minute' or 'second'\"\r\n\t}\r\n\tif (!Number.isInteger(parseInt(value))) {\r\n\t\t// console.log(\"Time value must be an integer\")\r\n\t\treturn \"Time value must be an integer\"\r\n\t}\r\n\tif (parseInt(value) < 0 || parseInt(value) > 59) {\r\n\t\t// console.log(\"Time value must be between 0 and 59\")\r\n\t\treturn \"Time value must be between 0 and 59\"\r\n\t}\r\n\treturn \"\"\r\n}\r\n\r\nexport const isValidTimeInput = ({ value, timeUnit }) => {\r\n\treturn getInvalidTimeInputMessage({ value, timeUnit }) === \"\"\r\n}\r\n","const TimerStatus = {\r\n\tRUNNING: \"RUNNING\",\r\n\tPAUSED: \"PAUSED\",\r\n\tSTOPPED: \"STOPPED\",\r\n}\r\n\r\nexport default TimerStatus\r\n","import {\r\n\tcreateEntityAdapter,\r\n\tcreateSelector,\r\n\tcreateSlice,\r\n} from \"@reduxjs/toolkit\"\r\nimport {\r\n\tcalcTimerRemainTime,\r\n\tisValidTimeInput,\r\n} from \"../../services/timerService\"\r\nimport TimerStatus from \"./TimerStatus\"\r\nimport { isInteger } from \"lodash\"\r\nimport { loadState } from \"../../services/localStorage\"\r\n\r\nconst timersAdapter = createEntityAdapter()\r\n\r\nconst getInitialState = () => {\r\n\tconst loadedState = loadState()\r\n\r\n\tlet state = {\r\n\t\tshowCountdown: false,\r\n\t\tdelay: 1000,\r\n\t\tactiveTimerId: null,\r\n\t\tactiveTimerMusic: \"\",\r\n\t\tstatus: TimerStatus.STOPPED,\r\n\t\tloop: {\r\n\t\t\tcurrent: 1,\r\n\t\t\ttotal: 1,\r\n\t\t},\r\n\t\tmute: {\r\n\t\t\talarm: false,\r\n\t\t\tmusic: false,\r\n\t\t},\r\n\t}\r\n\r\n\tif (\r\n\t\tloadedState &&\r\n\t\tloadedState.entities &&\r\n\t\tloadedState.ids &&\r\n\t\tloadedState.totalLoop\r\n\t) {\r\n\t\tstate = {\r\n\t\t\t...state,\r\n\t\t\tentities: loadedState.entities,\r\n\t\t\tids: loadedState.ids,\r\n\t\t\tloop: {\r\n\t\t\t\t...state.loop,\r\n\t\t\t\ttotal: loadedState.totalLoop,\r\n\t\t\t},\r\n\t\t}\r\n\t}\r\n\r\n\treturn timersAdapter.getInitialState(state)\r\n}\r\n\r\n/**\r\n * {\r\n *  id: string,\r\n * \tlabel: string,\r\n * \tminute: number,\r\n * \tsecond: number,\r\n *  remainTime: number,\r\n * \tmusic: string,\r\n * }\r\n */\r\n\r\nconst timersSlice = createSlice({\r\n\tname: \"timers\",\r\n\tinitialState: getInitialState(),\r\n\treducers: {\r\n\t\ttimersInitialized: timersAdapter.addMany,\r\n\t\ttimerAdded: timersAdapter.addOne,\r\n\t\ttimerDeleted: timersAdapter.removeOne,\r\n\t\ttimerSetLabel(state, action) {\r\n\t\t\tconst { timerId, label } = action.payload\r\n\t\t\tconst timer = state.entities[timerId]\r\n\r\n\t\t\ttimer.label = label\r\n\t\t},\r\n\t\ttimerSetTime: {\r\n\t\t\treducer(state, action) {\r\n\t\t\t\tconst { timerId, value, timeUnit } = action.payload\r\n\t\t\t\tconst timer = state.entities[timerId]\r\n\r\n\t\t\t\tif (timeUnit === \"minute\" || timeUnit === \"second\") {\r\n\t\t\t\t\ttimer[timeUnit] = Number.isInteger(parseInt(value))\r\n\t\t\t\t\t\t? parseInt(value)\r\n\t\t\t\t\t\t: \"\"\r\n\r\n\t\t\t\t\ttimer.remainTime = isValidTimeInput({ value, timeUnit })\r\n\t\t\t\t\t\t? (timer.minute * 60 + timer.second) * 1000\r\n\t\t\t\t\t\t: 0\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tprepare(timerId, value, timeUnit) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tpayload: { timerId, value, timeUnit },\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\ttimerSetMusic(state, action) {\r\n\t\t\tconst { timerId, music } = action.payload\r\n\t\t\tconst timer = state.entities[timerId]\r\n\r\n\t\t\ttimer.music = music\r\n\t\t},\r\n\t\ttimerDeductTime: {\r\n\t\t\treducer(state, action) {\r\n\t\t\t\tconst { timerId, delay } = action.payload\r\n\t\t\t\tconst timer = state.entities[timerId]\r\n\r\n\t\t\t\ttimer.remainTime -= delay\r\n\t\t\t},\r\n\t\t\tprepare({ timerId, delay }) {\r\n\t\t\t\tif (!delay) {\r\n\t\t\t\t\tdelay = 1000\r\n\t\t\t\t}\r\n\t\t\t\treturn { payload: { timerId, delay } }\r\n\t\t\t},\r\n\t\t},\r\n\t\ttimerStatusUpdated(state, action) {\r\n\t\t\tconst { status } = action.payload\r\n\t\t\tstate.status = status\r\n\t\t},\r\n\t\ttimerSetNextTimer(state) {\r\n\t\t\tconst timers = Object.values(state.entities)\r\n\t\t\tfor (const [index, timer] of timers.entries()) {\r\n\t\t\t\tif (timer.remainTime > 0) {\r\n\t\t\t\t\tstate.activeTimerId = timer.id\r\n\t\t\t\t\tstate.activeTimerMusic = timer.music\r\n\t\t\t\t\tbreak\r\n\t\t\t\t}\r\n\t\t\t\t// reset if the last timer is over\r\n\t\t\t\tif (index === timers.length - 1) {\r\n\t\t\t\t\tstate.status = TimerStatus.STOPPED\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\ttimerDelayUpdated(state, action) {\r\n\t\t\tconst { delay } = action.payload\r\n\t\t\tstate.delay = delay\r\n\t\t},\r\n\t\ttimerResetTimers(state) {\r\n\t\t\tstate.activeTimerId = null\r\n\t\t\tstate.activeTimerMusic = \"\"\r\n\t\t\tstate.status = TimerStatus.STOPPED\r\n\t\t\tObject.values(state.entities).forEach((timer) => {\r\n\t\t\t\ttimer.remainTime = calcTimerRemainTime({\r\n\t\t\t\t\tminute: timer.minute,\r\n\t\t\t\t\tsecond: timer.second,\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t\tstate.loop.current = 1\r\n\t\t},\r\n\t\ttimerResetRemainTime(state) {\r\n\t\t\tObject.values(state.entities).forEach((timer) => {\r\n\t\t\t\ttimer.remainTime = calcTimerRemainTime({\r\n\t\t\t\t\tminute: timer.minute,\r\n\t\t\t\t\tsecond: timer.second,\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t},\r\n\t\ttimerSetShowCountdown(state, action) {\r\n\t\t\tconst { showCountdown } = action.payload\r\n\t\t\tstate.showCountdown = showCountdown\r\n\t\t},\r\n\t\ttimerSetCurrentLoop(state, action) {\r\n\t\t\tconst current = action.payload\r\n\r\n\t\t\tif (current && isInteger(current)) {\r\n\t\t\t\tstate.loop.current = current\r\n\t\t\t}\r\n\t\t},\r\n\t\ttimerSetTotalLoop(state, action) {\r\n\t\t\tconst total = action.payload\r\n\r\n\t\t\tif (total || total === \"\") {\r\n\t\t\t\tconsole.log(Number.isInteger(parseInt(total)))\r\n\r\n\t\t\t\tstate.loop.total = Number.isInteger(parseInt(total))\r\n\t\t\t\t\t? parseInt(total)\r\n\t\t\t\t\t: \"\"\r\n\t\t\t}\r\n\t\t},\r\n\t\ttimerToggledMute(state, action) {\r\n\t\t\tconst { muteType } = action.payload\r\n\r\n\t\t\tif (muteType === \"alarm\") {\r\n\t\t\t\tstate.mute.alarm = !state.mute.alarm\r\n\t\t\t}\r\n\t\t\tif (muteType === \"music\") {\r\n\t\t\t\tstate.mute.music = !state.mute.music\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n})\r\n\r\nexport default timersSlice.reducer\r\n\r\nexport const {\r\n\ttimersInitialized,\r\n\ttimerAdded,\r\n\ttimerDeleted,\r\n\ttimerSetLabel,\r\n\ttimerSetTime,\r\n\ttimerSetMusic,\r\n\ttimerDeductTime,\r\n\ttimerStatusUpdated,\r\n\ttimerSetNextTimer,\r\n\ttimerDelayUpdated,\r\n\ttimerResetTimers,\r\n\ttimerResetRemainTime,\r\n\ttimerSetShowCountdown,\r\n\ttimerSetCurrentLoop,\r\n\ttimerSetTotalLoop,\r\n\ttimerToggledMute,\r\n} = timersSlice.actions\r\n\r\nexport const {\r\n\tselectAll: selectTimers,\r\n\tselectById: selectTimerById,\r\n\tselectTotal,\r\n} = timersAdapter.getSelectors((state) => state.timers)\r\n\r\nexport const selectShowCountdown = (state) => state.timers.showCountdown\r\n\r\nexport const selectTimerDelay = (state) => state.timers.delay\r\n\r\nexport const selectActiveTimerId = (state) => state.timers.activeTimerId\r\n\r\nexport const selectTimerStatus = (state) => state.timers.status\r\n\r\nexport const selectLastTimerId = createSelector(\r\n\tselectTimers,\r\n\tselectTotal,\r\n\t(timers, total) => {\r\n\t\tconst lastTimer = Object.values(timers)[total - 1]\r\n\t\treturn lastTimer.id\r\n\t}\r\n)\r\n\r\nexport const selectTimerLoopCurrentCount = (state) => state.timers.loop.current\r\n\r\nexport const selectTimerLoopTotalCount = (state) => state.timers.loop.total\r\n\r\nexport const selectTimerIsMuted = (state) => state.timers.mute.music\r\n\r\nexport const selectActiveTimerMusic = (state) => state.timers.activeTimerMusic\r\n","import { calcTimerRemainTime } from \"./timerService\"\r\nimport { cloneDeep } from \"lodash\"\r\n\r\nexport const loadState = () => {\r\n\ttry {\r\n\t\tconst savedStateJson = localStorage.getItem(\"timers\")\r\n\r\n\t\tif (savedStateJson === null) {\r\n\t\t\treturn undefined\r\n\t\t}\r\n\r\n\t\tconst savedState = JSON.parse(savedStateJson)\r\n\t\tconst savedTotalLoop =\r\n\t\t\tsavedState.totalLoop !== \"\" ? savedState.totalLoop : 1\r\n\r\n\t\tconst savedTimers = savedState.entities\r\n\r\n\t\t// calculate remain time\r\n\t\tObject.values(savedTimers).forEach((timer) => {\r\n\t\t\ttimer.remainTime = calcTimerRemainTime({\r\n\t\t\t\tminute: timer.minute,\r\n\t\t\t\tsecond: timer.second,\r\n\t\t\t})\r\n\t\t})\r\n\r\n\t\treturn {\r\n\t\t\tids: savedState.ids,\r\n\t\t\tentities: savedTimers,\r\n\t\t\ttotalLoop: savedTotalLoop,\r\n\t\t}\r\n\t} catch (err) {\r\n\t\treturn undefined\r\n\t}\r\n}\r\n\r\nexport const saveState = ({ timers: timerState }) => {\r\n\ttry {\r\n\t\tconst totalLoop = timerState.loop.total ?? 1\r\n\t\tconst ids = timerState.ids\r\n\t\tconst newEntities = cloneDeep(timerState.entities)\r\n\r\n\t\tObject.values(newEntities).forEach((entity) => {\r\n\t\t\tif (entity.remainTime) {\r\n\t\t\t\tdelete entity.remainTime\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tconst saveState = {\r\n\t\t\tids,\r\n\t\t\tentities: newEntities,\r\n\t\t\ttotalLoop,\r\n\t\t}\r\n\r\n\t\tlocalStorage.setItem(\"timers\", JSON.stringify(saveState))\r\n\t} catch {\r\n\t\t// ignore write errors\r\n\t}\r\n}\r\n","import React from \"react\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport { isValidTimeInput } from \"../../services/timerService\"\r\nimport {\r\n\tselectTimerById,\r\n\ttimerSetTime,\r\n\ttimerSetLabel,\r\n\ttimerSetMusic,\r\n\ttimerDeleted,\r\n} from \"./timersSlice\"\r\nimport {\r\n\tBox,\r\n\tPaper,\r\n\tFormControl,\r\n\tInputLabel,\r\n\tmakeStyles,\r\n\tMenuItem,\r\n\tSelect,\r\n\tTextField,\r\n\tIconButton,\r\n} from \"@material-ui/core\"\r\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tmusicInput: {\r\n\t\tminWidth: 200,\r\n\t},\r\n\ttimerContainer: {\r\n\t\tborderRadius: 30,\r\n\t\tpadding: \"10px 20px\",\r\n\t\t[theme.breakpoints.up(\"sm\")]: {\r\n\t\t\tpadding: \"20px 40px\",\r\n\t\t},\r\n\t\tmarginTop: theme.spacing(2),\r\n\t\tmarginBottom: theme.spacing(2),\r\n\t},\r\n\ttimerToolbar: {\r\n\t\tjustifyContent: \"center\",\r\n\t\t[theme.breakpoints.up(\"sm\")]: {\r\n\t\t\tjustifyContent: \"flex-start\",\r\n\t\t},\r\n\t},\r\n\ttimerInput: {\r\n\t\tminWidth: 60,\r\n\t},\r\n\tdeleteButton: {\r\n\t\topacity: 0.2,\r\n\t\tposition: \"absolute\",\r\n\t\ttop: 15,\r\n\t\tright: 20,\r\n\t\ttransition: \"opacity 0.5s ease\",\r\n\t\tzIndex: 2,\r\n\t\t\"&:hover\": {\r\n\t\t\topacity: 1,\r\n\t\t},\r\n\t},\r\n}))\r\n\r\nconst Timer = ({ id }) => {\r\n\tconst dispatch = useDispatch()\r\n\tconst classes = useStyles()\r\n\tconst timer = useSelector((state) => selectTimerById(state, id))\r\n\r\n\tconst handleTimeChange = (params) => {\r\n\t\tconst {\r\n\t\t\tevent: {\r\n\t\t\t\ttarget: { value },\r\n\t\t\t},\r\n\t\t\ttimeUnit,\r\n\t\t} = params\r\n\r\n\t\tdispatch(timerSetTime(timer.id, value, timeUnit))\r\n\t}\r\n\r\n\tconst handleLabelChange = (e) =>\r\n\t\tdispatch(timerSetLabel({ timerId: timer.id, label: e.target.value }))\r\n\r\n\tconst handleMusicChange = (e) =>\r\n\t\tdispatch(timerSetMusic({ timerId: timer.id, music: e.target.value }))\r\n\r\n\tconst handleDeleteTimer = () => dispatch(timerDeleted(timer.id))\r\n\r\n\treturn (\r\n\t\t<Paper\r\n\t\t\tvariant=\"outlined\"\r\n\t\t\tclassName={classes.timerContainer}\r\n\t\t\tstyle={{ position: \"relative\" }}\r\n\t\t>\r\n\t\t\t<IconButton\r\n\t\t\t\tonClick={handleDeleteTimer}\r\n\t\t\t\tclassName={classes.deleteButton}\r\n\t\t\t\tsize=\"small\"\r\n\t\t\t>\r\n\t\t\t\t<HighlightOffIcon fontSize=\"small\" />\r\n\t\t\t</IconButton>\r\n\r\n\t\t\t<Box m={1} display=\"flex\" justifyContent=\"center\">\r\n\t\t\t\t<TextField\r\n\t\t\t\t\tvalue={timer.label ?? \"\"}\r\n\t\t\t\t\tonChange={(e) => handleLabelChange(e)}\r\n\t\t\t\t\tinputProps={{ style: { textAlign: \"center\" } }}\r\n\t\t\t\t/>\r\n\t\t\t</Box>\r\n\r\n\t\t\t<Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\r\n\t\t\t\t<Box m={1}>\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\tid={`timer-${id}-min`}\r\n\t\t\t\t\t\tlabel=\"Minute\"\r\n\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\tInputLabelProps={{\r\n\t\t\t\t\t\t\tshrink: true,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tinputProps={{\r\n\t\t\t\t\t\t\tmin: 0,\r\n\t\t\t\t\t\t\tmax: 59,\r\n\t\t\t\t\t\t\tinputMode: \"numeric\",\r\n\t\t\t\t\t\t\tclassName: classes.timerInput,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\tonChange={(e) => handleTimeChange({ event: e, timeUnit: \"minute\" })}\r\n\t\t\t\t\t\tvalue={timer.minute}\r\n\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t!isValidTimeInput({\r\n\t\t\t\t\t\t\t\tvalue: timer.minute,\r\n\t\t\t\t\t\t\t\ttimeUnit: \"minute\",\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Box>\r\n\r\n\t\t\t\t<Box m={1}>:</Box>\r\n\r\n\t\t\t\t<Box m={1}>\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\tid={`timer-${id}-sec`}\r\n\t\t\t\t\t\tlabel=\"Second\"\r\n\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\tInputLabelProps={{\r\n\t\t\t\t\t\t\tshrink: true,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\tinputProps={{\r\n\t\t\t\t\t\t\tmin: 0,\r\n\t\t\t\t\t\t\tmax: 59,\r\n\t\t\t\t\t\t\tinputMode: \"numeric\",\r\n\t\t\t\t\t\t\tclassName: classes.timerInput,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonChange={(e) => handleTimeChange({ event: e, timeUnit: \"second\" })}\r\n\t\t\t\t\t\tvalue={timer.second}\r\n\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t!isValidTimeInput({\r\n\t\t\t\t\t\t\t\tvalue: timer.second,\r\n\t\t\t\t\t\t\t\ttimeUnit: \"second\",\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Box>\r\n\t\t\t</Box>\r\n\r\n\t\t\t<Box display=\"flex\" className={classes.timerToolbar}>\r\n\t\t\t\t<FormControl>\r\n\t\t\t\t\t<InputLabel id={`timer-music-${timer.id}-label`}>\r\n\t\t\t\t\t\tTimer Music\r\n\t\t\t\t\t</InputLabel>\r\n\t\t\t\t\t<Select\r\n\t\t\t\t\t\tlabelId={`timer-music-${timer.id}-label`}\r\n\t\t\t\t\t\tid={`timer-music-${timer.id}`}\r\n\t\t\t\t\t\tvalue={timer.music ?? \"\"}\r\n\t\t\t\t\t\tonChange={handleMusicChange}\r\n\t\t\t\t\t\tclassName={classes.musicInput}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<MenuItem value=\"\">No Music</MenuItem>\r\n\t\t\t\t\t\t<MenuItem value=\"Muay_Thai_Sarama_ROUND_1.mp3\">\r\n\t\t\t\t\t\t\tMuay Thai Music\r\n\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t</Select>\r\n\t\t\t\t</FormControl>\r\n\t\t\t</Box>\r\n\t\t</Paper>\r\n\t)\r\n}\r\n\r\nexport default Timer\r\n","import React from \"react\"\r\nimport Timer from \"./Timer\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { selectTimers } from \"./timersSlice\"\r\n\r\nconst TimerList = () => {\r\n\tconst timers = useSelector((state) => selectTimers(state))\r\n\r\n\treturn (\r\n\t\t<main>\r\n\t\t\t{timers.map((timer) => (\r\n\t\t\t\t<Timer id={timer.id} key={timer.id} />\r\n\t\t\t))}\r\n\t\t</main>\r\n\t)\r\n}\r\n\r\nexport default TimerList\r\n","import React from \"react\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport {\r\n\tselectTimerById,\r\n\tselectActiveTimerId,\r\n\tselectTimerDelay,\r\n\ttimerDeductTime,\r\n\ttimerSetNextTimer,\r\n\tselectTimerStatus,\r\n\tselectLastTimerId,\r\n\ttimerStatusUpdated,\r\n\tselectTimerLoopCurrentCount,\r\n\tselectTimerLoopTotalCount,\r\n\ttimerSetCurrentLoop,\r\n\ttimerResetRemainTime,\r\n} from \"./timersSlice\"\r\nimport useInterval from \"../../hooks/useInterval\"\r\nimport TimerStatus from \"./TimerStatus\"\r\nimport { convertTimeFormatForDisplay } from \"../../services/timerService\"\r\n\r\nimport { Box, Typography, makeStyles } from \"@material-ui/core\"\r\n\r\nconst useStyles = makeStyles({\r\n\tdigits: {\r\n\t\tmargin: 10,\r\n\t},\r\n\tmillisecond: {\r\n\t\tposition: \"absolute\",\r\n\t\tbottom: 5,\r\n\t\tright: -40,\r\n\t},\r\n\tmainDisplay: {\r\n\t\tposition: \"relative\",\r\n\t\twidth: \"fit-content\",\r\n\t\tmargin: \"0 auto\",\r\n\t},\r\n})\r\n\r\nconst TimerCountdown = ({ alarmPlayer }) => {\r\n\tconst dispatch = useDispatch()\r\n\tconst classes = useStyles()\r\n\r\n\tconst activeTimerId = useSelector(selectActiveTimerId)\r\n\tconst timer = useSelector((state) => selectTimerById(state, activeTimerId))\r\n\tconst delay = useSelector((state) => selectTimerDelay(state))\r\n\tconst timerStatus = useSelector(selectTimerStatus)\r\n\tconst lastTimerId = useSelector(selectLastTimerId)\r\n\tconst loopCurrent = useSelector(selectTimerLoopCurrentCount)\r\n\tconst loopTotal = useSelector(selectTimerLoopTotalCount)\r\n\r\n\tconst timePerUnit = convertTimeFormatForDisplay(timer.remainTime)\r\n\r\n\tconst showTimerDigits = (digit) => (digit < 10 ? \"0\" + digit : digit)\r\n\r\n\tuseInterval(\r\n\t\t() => {\r\n\t\t\tdispatch(timerDeductTime({ timerId: timer.id, delay }))\r\n\r\n\t\t\tif (timer.remainTime - delay <= 0) {\r\n\t\t\t\talarmPlayer.current.play()\r\n\r\n\t\t\t\t/**\r\n\t\t\t\t * if it's the last timer, check if the loop count reaches total\r\n\t\t\t\t * if yes, update the status to be stopped\r\n\t\t\t\t * else dispatch count++ and set next timer\r\n\t\t\t\t */\r\n\r\n\t\t\t\tif (activeTimerId === lastTimerId) {\r\n\t\t\t\t\t// if loop count has reached the end\r\n\t\t\t\t\tif (loopCurrent < loopTotal) {\r\n\t\t\t\t\t\tdispatch(timerSetCurrentLoop({ current: loopCurrent + 1 }))\r\n\t\t\t\t\t\t// reset remain time of every timer\r\n\t\t\t\t\t\tdispatch(timerResetRemainTime())\r\n\t\t\t\t\t\tdispatch(timerSetNextTimer())\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tdispatch(timerStatusUpdated({ status: TimerStatus.STOPPED }))\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdispatch(timerSetNextTimer())\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\ttimerStatus === TimerStatus.RUNNING &&\r\n\t\t\tactiveTimerId &&\r\n\t\t\ttimer.id === activeTimerId\r\n\t\t\t? delay\r\n\t\t\t: null\r\n\t)\r\n\r\n\treturn (\r\n\t\t<Box textAlign=\"center\" height=\"100%\" display=\"flex\" flexDirection=\"column\">\r\n\t\t\t<Typography variant=\"h4\" component=\"div\" style={{ marginTop: 10 }}>\r\n\t\t\t\tRound: {loopCurrent} / {loopTotal}\r\n\t\t\t</Typography>\r\n\t\t\t<Box\r\n\t\t\t\tdisplay=\"flex\"\r\n\t\t\t\tjustifyContent=\"center\"\r\n\t\t\t\tflexDirection=\"column\"\r\n\t\t\t\theight=\"100%\"\r\n\t\t\t>\r\n\t\t\t\t<Typography variant=\"h4\" component=\"div\" style={{ marginBottom: 10 }}>\r\n\t\t\t\t\t{timer.label}\r\n\t\t\t\t</Typography>\r\n\r\n\t\t\t\t<Box\r\n\t\t\t\t\tdisplay=\"flex\"\r\n\t\t\t\t\tjustifyContent=\"center\"\r\n\t\t\t\t\talignItems=\"center\"\r\n\t\t\t\t\tclassName={classes.mainDisplay}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Typography\r\n\t\t\t\t\t\tvariant=\"h2\"\r\n\t\t\t\t\t\tcomponent=\"div\"\r\n\t\t\t\t\t\tclassName={`${classes.digits}`}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{showTimerDigits(timePerUnit.minute)}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Typography variant=\"h3\">:</Typography>\r\n\t\t\t\t\t<Typography\r\n\t\t\t\t\t\tvariant=\"h2\"\r\n\t\t\t\t\t\tcomponent=\"div\"\r\n\t\t\t\t\t\tclassName={`${classes.digits}`}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{showTimerDigits(timePerUnit.second)}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t{delay < 1000 && (\r\n\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\tvariant=\"h5\"\r\n\t\t\t\t\t\t\tclassName={`${classes.millisecond} ${classes.digits}`}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{showTimerDigits(timePerUnit.millisec)}\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Box>\r\n\t\t\t</Box>\r\n\t\t</Box>\r\n\t)\r\n}\r\n\r\nexport default TimerCountdown\r\n","import { useEffect, useRef } from \"react\"\r\n\r\nexport default function useInterval(callback, delay) {\r\n\tconst savedCallback = useRef()\r\n\r\n\t// Remember the latest callback.\r\n\tuseEffect(() => {\r\n\t\tsavedCallback.current = callback\r\n\t}, [callback])\r\n\r\n\t// Set up the interval.\r\n\tuseEffect(() => {\r\n\t\tfunction tick() {\r\n\t\t\tsavedCallback.current()\r\n\t\t}\r\n\t\tif (delay !== null) {\r\n\t\t\tlet id = setInterval(tick, delay)\r\n\t\t\treturn () => clearInterval(id)\r\n\t\t}\r\n\t}, [delay])\r\n}\r\n","export default __webpack_public_path__ + \"static/media/timesup.e69d4f91.mp3\";","import React, { useRef } from \"react\"\r\nimport TimerList from \"./TimerList\"\r\nimport TimerCountdown from \"./TimerCountdown\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { selectShowCountdown, selectTimerStatus } from \"./timersSlice\"\r\nimport TimerStatus from \"./TimerStatus\"\r\nimport timesUpSfx from \"../../audio/timesup.mp3\"\r\nimport ReactHowler from \"react-howler\"\r\nimport { Box, Container, makeStyles } from \"@material-ui/core\"\r\n\r\nconst useStyles = makeStyles({\r\n\tmainSection: {\r\n\t\toverflowY: \"scroll\",\r\n\t},\r\n})\r\n\r\nconst TimerMain = ({ heightOfMainSection }) => {\r\n\tconst classes = useStyles()\r\n\r\n\tconst timerStatus = useSelector(selectTimerStatus)\r\n\tconst showCountdown = useSelector(selectShowCountdown)\r\n\tconst alarmPlayer = useRef(null)\r\n\r\n\tif (timerStatus === TimerStatus.RUNNING || showCountdown) {\r\n\t\treturn (\r\n\t\t\t<Container maxWidth=\"sm\" style={{ height: heightOfMainSection }}>\r\n\t\t\t\t<TimerCountdown alarmPlayer={alarmPlayer}></TimerCountdown>\r\n\t\t\t\t<ReactHowler\r\n\t\t\t\t\tsrc={timesUpSfx}\r\n\t\t\t\t\tplaying={false}\r\n\t\t\t\t\thtml5={true}\r\n\t\t\t\t\tref={alarmPlayer}\r\n\t\t\t\t/>\r\n\t\t\t</Container>\r\n\t\t)\r\n\t} else {\r\n\t\treturn (\r\n\t\t\t<Box\r\n\t\t\t\tstyle={{ height: heightOfMainSection }}\r\n\t\t\t\tclassName={classes.mainSection}\r\n\t\t\t>\r\n\t\t\t\t<Container maxWidth=\"sm\">\r\n\t\t\t\t\t<TimerList />\r\n\t\t\t\t</Container>\r\n\t\t\t</Box>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default TimerMain\r\n","import React, { useEffect } from \"react\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport {\r\n\ttimerStatusUpdated,\r\n\tselectActiveTimerId,\r\n\ttimerSetNextTimer,\r\n\tselectTimerStatus,\r\n\ttimerResetTimers,\r\n\ttimerSetShowCountdown,\r\n\tselectTimerLoopTotalCount,\r\n\ttimerSetTotalLoop,\r\n\ttimerToggledMute,\r\n\tselectTimerIsMuted,\r\n\ttimerAdded,\r\n\tselectShowCountdown,\r\n} from \"../features/timers/timersSlice\"\r\nimport TimerStatus from \"../features/timers/TimerStatus\"\r\n\r\nimport {\r\n\tButton,\r\n\tIconButton,\r\n\tBox,\r\n\tContainer,\r\n\tPaper,\r\n\tFormControl,\r\n\tmakeStyles,\r\n\tTextField,\r\n} from \"@material-ui/core\"\r\nimport VolumeOffRoundedIcon from \"@material-ui/icons/VolumeOffRounded\"\r\nimport VolumeUpRoundedIcon from \"@material-ui/icons/VolumeUpRounded\"\r\nimport AddCircleSharpIcon from \"@material-ui/icons/AddCircleSharp\"\r\nimport SettingsIcon from \"@material-ui/icons/Settings\"\r\n\r\nimport { createTimer } from \"../services/timerService\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tformControl: {\r\n\t\twidth: 125,\r\n\t},\r\n\tcontrolPanelContainer: {\r\n\t\tposition: \"relative\",\r\n\t\tpadding: theme.spacing(1),\r\n\t\t[theme.breakpoints.up(\"sm\")]: {\r\n\t\t\tpadding: theme.spacing(3),\r\n\t\t},\r\n\t},\r\n\taddButton: {\r\n\t\tposition: \"absolute\",\r\n\t\ttop: 0,\r\n\t\tright: 0,\r\n\t\tzIndex: 2,\r\n\t\t[theme.breakpoints.up(\"sm\")]: {\r\n\t\t\tright: 50,\r\n\t\t},\r\n\t},\r\n\ttoolbar: {\r\n\t\tmarginTop: 16,\r\n\t},\r\n}))\r\n\r\nconst ControlPanel = ({ setHeightOfControlPanel, handleModalStatus }) => {\r\n\tconst classes = useStyles()\r\n\tconst dispatch = useDispatch()\r\n\r\n\tconst timerStatus = useSelector(selectTimerStatus)\r\n\tconst activeTimerId = useSelector(selectActiveTimerId)\r\n\tconst loopTotal = useSelector(selectTimerLoopTotalCount)\r\n\tconst isMuted = useSelector(selectTimerIsMuted)\r\n\tconst showCountdown = useSelector(selectShowCountdown)\r\n\r\n\tconst handleStart = () => {\r\n\t\tif (!activeTimerId) {\r\n\t\t\tdispatch(timerSetNextTimer())\r\n\t\t}\r\n\t\tconst newStatus =\r\n\t\t\ttimerStatus === TimerStatus.RUNNING\r\n\t\t\t\t? TimerStatus.PAUSED\r\n\t\t\t\t: TimerStatus.RUNNING\r\n\t\tdispatch(\r\n\t\t\ttimerStatusUpdated({\r\n\t\t\t\tstatus: newStatus,\r\n\t\t\t})\r\n\t\t)\r\n\t\tdispatch(timerSetShowCountdown({ showCountdown: true }))\r\n\t}\r\n\r\n\tconst handleReset = () => {\r\n\t\tdispatch(timerSetShowCountdown({ showCountdown: false }))\r\n\t\tdispatch(timerResetTimers())\r\n\t}\r\n\r\n\tconst handleToggleMusicMuted = () =>\r\n\t\tdispatch(timerToggledMute({ muteType: \"music\" }))\r\n\r\n\tconst handleLoopChanged = (e) => dispatch(timerSetTotalLoop(e.target.value))\r\n\r\n\tconst handleAddTimer = () => dispatch(timerAdded(createTimer()))\r\n\r\n\t// get the height of control panel to render the height of main section\r\n\tuseEffect(() => {\r\n\t\tconst height = document.getElementById(\"control-panel\").clientHeight\r\n\t\tsetHeightOfControlPanel(height)\r\n\t})\r\n\r\n\treturn (\r\n\t\t<Paper elevation={10} id=\"control-panel\">\r\n\t\t\t<Container maxWidth=\"md\" className={classes.controlPanelContainer}>\r\n\t\t\t\t<IconButton\r\n\t\t\t\t\tsize=\"medium\"\r\n\t\t\t\t\tonClick={handleAddTimer}\r\n\t\t\t\t\tdisabled={showCountdown}\r\n\t\t\t\t\tclassName={classes.addButton}\r\n\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<AddCircleSharpIcon />\r\n\t\t\t\t</IconButton>\r\n\r\n\t\t\t\t<Box display=\"flex\" justifyContent=\"center\">\r\n\t\t\t\t\t<Box m={1}>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tonClick={handleStart}\r\n\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\tsize=\"large\"\r\n\t\t\t\t\t\t\tdisabled={showCountdown && timerStatus === TimerStatus.STOPPED}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{timerStatus === TimerStatus.RUNNING ? \"Pause\" : \"Start\"}\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t<Box m={1}>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tonClick={handleReset}\r\n\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\tcolor=\"secondary\"\r\n\t\t\t\t\t\t\tsize=\"large\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tReset\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Box>\r\n\r\n\t\t\t\t<Box\r\n\t\t\t\t\tdisplay=\"flex\"\r\n\t\t\t\t\tjustifyContent=\"space-around\"\r\n\t\t\t\t\tclassName={classes.toolbar}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Box display=\"flex\" justifyContent=\"space-between\">\r\n\t\t\t\t\t\t<IconButton onClick={(e) => handleModalStatus(e, true)}>\r\n\t\t\t\t\t\t\t<SettingsIcon />\r\n\t\t\t\t\t\t</IconButton>\r\n\r\n\t\t\t\t\t\t<IconButton onClick={handleToggleMusicMuted}>\r\n\t\t\t\t\t\t\t{isMuted ? <VolumeOffRoundedIcon /> : <VolumeUpRoundedIcon />}\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t</Box>\r\n\r\n\t\t\t\t\t<FormControl className={classes.formControl}>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tid=\"loop\"\r\n\t\t\t\t\t\t\tlabel=\"No. of rounds\"\r\n\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\tInputLabelProps={{\r\n\t\t\t\t\t\t\t\tshrink: true,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\tvalue={loopTotal}\r\n\t\t\t\t\t\t\tinputProps={{ inputMode: \"numeric\" }}\r\n\t\t\t\t\t\t\tonChange={handleLoopChanged}\r\n\t\t\t\t\t\t\tdisabled={showCountdown}\r\n\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\tNumber.isNaN(parseInt(loopTotal)) || parseInt(loopTotal) < 1\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</FormControl>\r\n\t\t\t\t</Box>\r\n\t\t\t</Container>\r\n\t\t</Paper>\r\n\t)\r\n}\r\n\r\nexport default ControlPanel\r\n","import { createSlice } from \"@reduxjs/toolkit\"\r\n\r\nconst initDarkMode = () => {\r\n\tconst savedPreference = localStorage.getItem(\"darkMode\")\r\n\r\n\tif (savedPreference !== null) {\r\n\t\treturn savedPreference === \"true\"\r\n\t}\r\n\r\n\tconst systemPreference =\r\n\t\twindow.matchMedia &&\r\n\t\twindow.matchMedia(\"(prefers-color-scheme: dark)\").matches\r\n\r\n\treturn systemPreference\r\n}\r\n\r\nconst initialState = {\r\n\tdarkMode: initDarkMode(),\r\n}\r\n\r\nconst settingsSlice = createSlice({\r\n\tname: \"settings\",\r\n\tinitialState,\r\n\treducers: {\r\n\t\ttoggleDarkMode(state) {\r\n\t\t\tstate.darkMode = !state.darkMode\r\n\t\t},\r\n\t},\r\n})\r\n\r\nexport default settingsSlice.reducer\r\n\r\nexport const { toggleDarkMode } = settingsSlice.actions\r\n\r\nexport const selectIsDarkMode = (state) => state.settings.darkMode\r\n","import React from \"react\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport { selectTimerDelay, timerDelayUpdated } from \"../timers/timersSlice\"\r\nimport { toggleDarkMode, selectIsDarkMode } from \"../settings/settingsSlice\"\r\n\r\nimport {\r\n\tBox,\r\n\tDialog,\r\n\tDialogTitle,\r\n\tDialogContent,\r\n\tFormControl,\r\n\tFormControlLabel,\r\n\tGrid,\r\n\tInputLabel,\r\n\tSelect,\r\n\tSwitch,\r\n\tMenuItem,\r\n\tmakeStyles,\r\n\tTypography,\r\n} from \"@material-ui/core\"\r\nimport SettingsIcon from \"@material-ui/icons/Settings\"\r\n\r\nconst useStyles = makeStyles({\r\n\tformControl: {\r\n\t\twidth: 125,\r\n\t},\r\n})\r\n\r\nconst Settings = ({ open, handleOpen }) => {\r\n\tconst dispatch = useDispatch()\r\n\tconst classes = useStyles()\r\n\r\n\tconst delay = useSelector(selectTimerDelay)\r\n\tconst isDarkMode = useSelector(selectIsDarkMode)\r\n\r\n\tconst handleDarkModeToggle = () => {\r\n\t\tdispatch(toggleDarkMode())\r\n\t\tlocalStorage.setItem(\"darkMode\", !isDarkMode)\r\n\t}\r\n\r\n\tconst handleDelayChange = (e) =>\r\n\t\tdispatch(timerDelayUpdated({ delay: e.target.value }))\r\n\r\n\treturn (\r\n\t\t<Dialog\r\n\t\t\tonClose={(e) => handleOpen(e, false)}\r\n\t\t\taria-labelledby=\"settings-dialog-title\"\r\n\t\t\topen={open}\r\n\t\t\tmaxWidth=\"sm\"\r\n\t\t\tfullWidth={true}\r\n\t\t>\r\n\t\t\t<DialogTitle id=\"settings-dialog-title\">\r\n\t\t\t\t<Box display=\"flex\" alignItems=\"center\">\r\n\t\t\t\t\t<SettingsIcon />\r\n\t\t\t\t\t<Typography component=\"span\" style={{ marginLeft: 10 }}>\r\n\t\t\t\t\t\tSettings\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</Box>\r\n\t\t\t</DialogTitle>\r\n\t\t\t<DialogContent style={{ paddingBottom: 16 }}>\r\n\t\t\t\t<Grid container>\r\n\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t<FormControl className={classes.formControl}>\r\n\t\t\t\t\t\t\t<InputLabel>Refresh rate</InputLabel>\r\n\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\tid=\"updateFreq\"\r\n\t\t\t\t\t\t\t\tvalue={delay}\r\n\t\t\t\t\t\t\t\tonChange={(e) => handleDelayChange(e)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<MenuItem value={10}>10</MenuItem>\r\n\t\t\t\t\t\t\t\t<MenuItem value={100}>100</MenuItem>\r\n\t\t\t\t\t\t\t\t<MenuItem value={1000}>1000</MenuItem>\r\n\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\tcontrol={\r\n\t\t\t\t\t\t\t\t<Switch\r\n\t\t\t\t\t\t\t\t\tchecked={isDarkMode ?? false}\r\n\t\t\t\t\t\t\t\t\tonChange={handleDarkModeToggle}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tlabel=\"Dark Theme\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</DialogContent>\r\n\t\t</Dialog>\r\n\t)\r\n}\r\n\r\nexport default Settings\r\n","export default __webpack_public_path__ + \"static/media/Muay_Thai_Sarama_ROUND_1.d86445b7.mp3\";","import React, { useEffect, useRef } from \"react\"\r\nimport TimerStatus from \"../features/timers/TimerStatus\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport {\r\n\tselectTimerStatus,\r\n\tselectTimerIsMuted,\r\n\tselectActiveTimerId,\r\n\tselectActiveTimerMusic,\r\n\ttimerStatusUpdated,\r\n} from \"../features/timers/timersSlice\"\r\nimport ReactHowler from \"react-howler\"\r\nimport muayThaiBgMusic from \"../audio/Muay_Thai_Sarama_ROUND_1.mp3\"\r\n\r\nconst MusicPlayer = () => {\r\n\tconst dispatch = useDispatch()\r\n\r\n\tconst timerStatus = useSelector(selectTimerStatus)\r\n\tconst isMuted = useSelector(selectTimerIsMuted)\r\n\tconst activeTimerId = useSelector(selectActiveTimerId)\r\n\tconst music = useSelector(selectActiveTimerMusic)\r\n\r\n\tconst musicPlayer = useRef(null)\r\n\r\n\tuseEffect(() => {\r\n\t\t// play the music from the beginning once timer is changed\r\n\t\tmusicPlayer.current.seek(0)\r\n\r\n\t\tif (activeTimerId) {\r\n\t\t\tdispatch(timerStatusUpdated({ status: TimerStatus.RUNNING }))\r\n\t\t}\r\n\t}, [activeTimerId, dispatch])\r\n\r\n\treturn (\r\n\t\t<ReactHowler\r\n\t\t\tsrc={muayThaiBgMusic}\r\n\t\t\tplaying={timerStatus === TimerStatus.RUNNING && music !== \"\"}\r\n\t\t\tmute={isMuted}\r\n\t\t\tref={musicPlayer}\r\n\t\t\tloop={true}\r\n\t\t\thtml5={true}\r\n\t\t/>\r\n\t)\r\n}\r\n\r\nexport default MusicPlayer\r\n","import React, { useEffect, useState, useCallback } from \"react\"\r\nimport TimerMain from \"../features/timers/TimerMain\"\r\nimport ControlPanel from \"./ControlPanel\"\r\nimport Settings from \"../features/settings/Settings\"\r\nimport { Box, Paper, makeStyles } from \"@material-ui/core\"\r\nimport MusicPlayer from \"./MusicPlayer\"\r\n\r\nconst useStyles = makeStyles({\r\n\tapp: {\r\n\t\toverflow: \"hidden\",\r\n\t\theight: \"100%\",\r\n\t\tborderRadius: 0,\r\n\t},\r\n\tappBar: {\r\n\t\tposition: \"fixed\",\r\n\t\tleft: 0,\r\n\t\tbottom: 0,\r\n\t\tborderRadius: \"5px 5px 0 0\",\r\n\t\tzIndex: 1100,\r\n\t\tboxSizing: \"border-box\",\r\n\t\twidth: \"100%\",\r\n\t},\r\n})\r\n\r\nconst TimerApp = () => {\r\n\tconst classes = useStyles()\r\n\tconst [heightOfControlPanel, setHeightOfControlPanel] = useState(0)\r\n\tconst [heightOfMainSection, setHeightOfMainSection] = useState(0)\r\n\tconst [modalIsOpen, openModal] = useState(false)\r\n\r\n\tconst setHeight = () => {\r\n\t\tconst heightOfMainSection = window.innerHeight - heightOfControlPanel\r\n\t\t// console.log(\"set height is called\", window.innerHeight, heightOfMainSection)\r\n\t\tsetHeightOfMainSection(heightOfMainSection)\r\n\t}\r\n\r\n\tconst handleModalStatus = (e, open) => {\r\n\t\tif (typeof open === \"boolean\") {\r\n\t\t\topenModal(open)\r\n\t\t}\r\n\t}\r\n\r\n\tuseCallback(setHeight, [heightOfControlPanel])\r\n\r\n\tuseEffect(() => {\r\n\t\tsetHeight()\r\n\t\twindow.addEventListener(\"resize\", setHeight)\r\n\r\n\t\treturn () => {\r\n\t\t\twindow.removeEventListener(\"resize\", setHeight)\r\n\t\t}\r\n\t})\r\n\r\n\treturn (\r\n\t\t<Paper elevation={0} className={`App ${classes.app}`}>\r\n\t\t\t<Box className={classes.mainSection}>\r\n\t\t\t\t<TimerMain heightOfMainSection={heightOfMainSection} />\r\n\t\t\t</Box>\r\n\r\n\t\t\t<Box className={classes.appBar}>\r\n\t\t\t\t<ControlPanel\r\n\t\t\t\t\tsetHeightOfControlPanel={setHeightOfControlPanel}\r\n\t\t\t\t\thandleModalStatus={handleModalStatus}\r\n\t\t\t\t/>\r\n\t\t\t</Box>\r\n\r\n\t\t\t<MusicPlayer />\r\n\r\n\t\t\t<Settings open={modalIsOpen} handleOpen={handleModalStatus} />\r\n\t\t</Paper>\r\n\t)\r\n}\r\n\r\nexport default TimerApp\r\n","import React from \"react\"\r\nimport \"./styles/App.scss\"\r\nimport TimerApp from \"./components/TimerApp\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { selectIsDarkMode } from \"./features/settings/settingsSlice\"\r\nimport { ThemeProvider } from \"@material-ui/core\"\r\nimport { unstable_createMuiStrictModeTheme as createMuiTheme } from \"@material-ui/core/styles\"\r\nimport blue from \"@material-ui/core/colors/blue\"\r\n\r\nconst App = () => {\r\n\tconst isDarkMode = useSelector(selectIsDarkMode)\r\n\r\n\tconst theme = React.useMemo(\r\n\t\t() =>\r\n\t\t\tcreateMuiTheme({\r\n\t\t\t\tpalette: {\r\n\t\t\t\t\tprimary: {\r\n\t\t\t\t\t\tmain: blue[500],\r\n\t\t\t\t\t},\r\n\t\t\t\t\ttype: isDarkMode ? \"dark\" : \"light\",\r\n\t\t\t\t},\r\n\t\t\t}),\r\n\t\t[isDarkMode]\r\n\t)\r\n\r\n\treturn (\r\n\t\t<ThemeProvider theme={theme}>\r\n\t\t\t<TimerApp />\r\n\t\t</ThemeProvider>\r\n\t)\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n\twindow.location.hostname === \"localhost\" ||\r\n\t\t// [::1] is the IPv6 localhost address.\r\n\t\twindow.location.hostname === \"[::1]\" ||\r\n\t\t// 127.0.0.0/8 are considered localhost for IPv4.\r\n\t\twindow.location.hostname.match(\r\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n\t\t)\r\n)\r\n\r\nexport function register(config) {\r\n\tif (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n\t\t// The URL constructor is available in all browsers that support SW.\r\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\r\n\t\tif (publicUrl.origin !== window.location.origin) {\r\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\r\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\r\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\twindow.addEventListener(\"load\", () => {\r\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n\t\t\tif (isLocalhost) {\r\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\r\n\t\t\t\tcheckValidServiceWorker(swUrl, config)\r\n\r\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\r\n\t\t\t\t// service worker/PWA documentation.\r\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\r\n\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t\"This web app is being served cache-first by a service \" +\r\n\t\t\t\t\t\t\t\"worker. To learn more, visit https://cra.link/PWA\"\r\n\t\t\t\t\t)\r\n\t\t\t\t})\r\n\t\t\t} else {\r\n\t\t\t\t// Is not localhost. Just register service worker\r\n\t\t\t\tregisterValidSW(swUrl, config)\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n\tnavigator.serviceWorker\r\n\t\t.register(swUrl)\r\n\t\t.then((registration) => {\r\n\t\t\tregistration.onupdatefound = () => {\r\n\t\t\t\tconst installingWorker = registration.installing\r\n\t\t\t\tif (installingWorker == null) {\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\t\t\t\tinstallingWorker.onstatechange = () => {\r\n\t\t\t\t\tif (installingWorker.state === \"installed\") {\r\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\r\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\r\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\r\n\t\t\t\t\t\t\t// content until all client tabs are closed.\r\n\t\t\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t\t\t\"New content is available and will be used when all \" +\r\n\t\t\t\t\t\t\t\t\t\"tabs for this page are closed. See https://cra.link/PWA.\"\r\n\t\t\t\t\t\t\t)\r\n\r\n\t\t\t\t\t\t\t// Execute callback\r\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\r\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// At this point, everything has been precached.\r\n\t\t\t\t\t\t\t// It's the perfect time to display a\r\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\r\n\t\t\t\t\t\t\tconsole.log(\"Content is cached for offline use.\")\r\n\r\n\t\t\t\t\t\t\t// Execute callback\r\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\r\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch((error) => {\r\n\t\t\tconsole.error(\"Error during service worker registration:\", error)\r\n\t\t})\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n\t// Check if the service worker can be found. If it can't reload the page.\r\n\tfetch(swUrl, {\r\n\t\theaders: { \"Service-Worker\": \"script\" },\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\r\n\t\t\tconst contentType = response.headers.get(\"content-type\")\r\n\t\t\tif (\r\n\t\t\t\tresponse.status === 404 ||\r\n\t\t\t\t(contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n\t\t\t) {\r\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\r\n\t\t\t\tnavigator.serviceWorker.ready.then((registration) => {\r\n\t\t\t\t\tregistration.unregister().then(() => {\r\n\t\t\t\t\t\twindow.location.reload()\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t} else {\r\n\t\t\t\t// Service worker found. Proceed as normal.\r\n\t\t\t\tregisterValidSW(swUrl, config)\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch(() => {\r\n\t\t\tconsole.log(\r\n\t\t\t\t\"No internet connection found. App is running in offline mode.\"\r\n\t\t\t)\r\n\t\t})\r\n}\r\n\r\nexport function unregister() {\r\n\tif (\"serviceWorker\" in navigator) {\r\n\t\tnavigator.serviceWorker.ready\r\n\t\t\t.then((registration) => {\r\n\t\t\t\tregistration.unregister()\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tconsole.error(error.message)\r\n\t\t\t})\r\n\t}\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from \"@reduxjs/toolkit\"\r\nimport timersReducer from \"./features/timers/timersSlice\"\r\nimport settingsReducer from \"./features/settings/settingsSlice\"\r\nimport { saveState } from \"./services/localStorage\"\r\nimport { throttle } from \"lodash\"\r\n\r\nconst store = configureStore({\r\n\treducer: {\r\n\t\ttimers: timersReducer,\r\n\t\tsettings: settingsReducer,\r\n\t},\r\n})\r\n\r\nstore.subscribe(\r\n\t// throttle to save resources\r\n\tthrottle(() => {\r\n\t\tsaveState({\r\n\t\t\ttimers: store.getState().timers,\r\n\t\t})\r\n\t}, 1000)\r\n)\r\n\r\nexport default store\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport \"./index.css\"\r\nimport App from \"./App\"\r\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\"\r\nimport reportWebVitals from \"./reportWebVitals\"\r\n\r\nimport store from \"./store\"\r\nimport { Provider } from \"react-redux\"\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<Provider store={store}>\r\n\t\t\t<App />\r\n\t\t</Provider>\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.register()\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n"],"sourceRoot":""}