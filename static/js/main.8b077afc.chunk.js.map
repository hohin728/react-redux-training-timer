{"version":3,"sources":["services/timerService.js","features/timers/TimerStatus.js","features/timers/timersSlice.js","features/timers/Timer.jsx","features/timers/TimerList.jsx","features/timers/TimerCountdown.jsx","hooks/useInterval.js","audio/timesup.mp3","features/timers/TimerMain.jsx","components/ControlPanel.jsx","features/settings/settingsSlice.js","features/settings/Settings.jsx","audio/Muay_Thai_Sarama_ROUND_1.mp3","components/MusicPlayer.jsx","components/TimerApp.jsx","App.js","serviceWorkerRegistration.js","reportWebVitals.js","store.js","index.js"],"names":["calcTimerRemainTime","params","minute","second","isInteger","createTimer","id","timerId","uniqueId","timer","label","remainTime","music","TimerStatus","RUNNING","PAUSED","STOPPED","timersAdapter","createEntityAdapter","initialState","getInitialState","showCountdown","delay","activeTimerId","activeTimerMusic","status","loop","current","total","mute","alarm","timersSlice","createSlice","name","reducers","timersInitialized","addMany","timerAdded","addOne","timerDeleted","removeOne","timerSetLabel","state","action","payload","entities","timerSetTime","reducer","value","timeUnit","prepare","timerSetMusic","timerDeductTime","timerStatusUpdated","timerSetNextTimer","timers","Object","values","entries","index","length","timerDelayUpdated","timerResetTimers","forEach","timerResetRemainTime","timerSetShowCountdown","timerSetLoop","timerToggledMute","muteType","actions","getSelectors","selectTimers","selectAll","selectTimerById","selectById","selectTotal","selectShowCountdown","selectTimerDelay","selectActiveTimerId","selectTimerStatus","selectLastTimerId","createSelector","selectTimerLoopCurrentCount","selectTimerLoopTotalCount","selectTimerIsMuted","selectActiveTimerMusic","useStyles","makeStyles","theme","musicInput","minWidth","timerContainer","borderRadius","padding","breakpoints","up","spacing","timerToolbar","justifyContent","timerInput","deleteButton","opacity","position","top","right","transition","zIndex","Timer","dispatch","useDispatch","classes","useSelector","handleTimeChange","event","target","parseInt","Paper","variant","className","style","IconButton","onClick","size","fontSize","Box","m","display","TextField","onChange","e","handleLabelChange","inputProps","textAlign","alignItems","type","InputLabelProps","shrink","min","max","FormControl","InputLabel","Select","labelId","MenuItem","TimerList","map","digits","margin","millisecond","bottom","mainDisplay","width","TimerCountdown","convertMillisec","alarmPlayer","timerStatus","lastTimerId","loopCurrent","loopTotal","timePerUnit","millisec","Math","floor","showTimerDigits","digit","callback","savedCallback","useRef","useEffect","setInterval","clearInterval","useInterval","play","height","flexDirection","Typography","component","marginTop","marginBottom","mainSection","overflowY","TimerMain","heightOfMainSection","Container","maxWidth","src","timesUpSfx","playing","html5","ref","formControl","controlPanelContainer","addButton","toolbar","ControlPanel","setHeightOfControlPanel","handleModalStatus","isMuted","document","getElementById","clientHeight","elevation","disabled","color","Button","handleLoopChanged","darkMode","savedPreference","localStorage","getItem","window","matchMedia","matches","initDarkMode","settingsSlice","toggleDarkMode","selectIsDarkMode","settings","Settings","open","handleOpen","isDarkMode","Dialog","onClose","fullWidth","DialogTitle","marginLeft","DialogContent","paddingBottom","Grid","container","item","xs","handleDelayChange","FormControlLabel","control","Switch","checked","setItem","MusicPlayer","musicPlayer","seek","muayThaiBgMusic","app","overflow","appBar","left","boxSizing","TimerApp","useState","heightOfControlPanel","setHeightOfMainSection","modalIsOpen","openModal","setHeight","innerHeight","addEventListener","removeEventListener","App","React","useMemo","createMuiTheme","palette","primary","main","blue","ThemeProvider","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","timersReducer","settingsReducer","i","push","initTimers","ReactDOM","render","StrictMode","URL","process","href","origin","fetch","headers","response","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.8b077afc.chunk.js","sourcesContent":["import { isInteger, uniqueId } from \"lodash\"\r\n\r\nconst defaultTimerMinute = 0\r\nconst defaultTimerSecond = 3\r\n\r\nexport const calcTimerRemainTime = (params) => {\r\n\tconst { minute, second } = params\r\n\r\n\tif (isInteger(minute) && isInteger(second)) {\r\n\t\treturn (minute * 60 + second) * 1000\r\n\t}\r\n\treturn 0\r\n}\r\n\r\nexport const createTimer = (params) => {\r\n\tconst id = params && params.timerId ? params.timerId : uniqueId()\r\n\tconst timer = {\r\n\t\tid: id,\r\n\t\tlabel: params && params.label ? params.label : \"timer label \" + id,\r\n\t\tminute: params && params.minute ? params.minute : defaultTimerMinute,\r\n\t\tsecond: params && params.second ? params.second : defaultTimerSecond,\r\n\t\tremainTime: 0,\r\n\t\tmusic:\r\n\t\t\tparams && params.music ? params.music : \"Muay_Thai_Sarama_ROUND_1.mp3\",\r\n\t}\r\n\ttimer.remainTime = calcTimerRemainTime({\r\n\t\tminute: timer.minute,\r\n\t\tsecond: timer.second,\r\n\t})\r\n\r\n\treturn timer\r\n}\r\n\r\nexport const initTimers = () => {\r\n\tconst timers = []\r\n\tfor (let i = 0; i < 3; i++) {\r\n\t\tconst timer = createTimer()\r\n\t\ttimers.push(timer)\r\n\t}\r\n\treturn timers\r\n}\r\n\r\nexport const convertTimeFormatForDisplay = (convertMillisec) => {\r\n\tif (!isInteger(convertMillisec) || convertMillisec <= 0) {\r\n\t\treturn {\r\n\t\t\tmillisec: 0,\r\n\t\t\tsecond: 0,\r\n\t\t\tminute: 0,\r\n\t\t}\r\n\t}\r\n\r\n\tconst millisec = (convertMillisec % 1000) / 10\r\n\tconst second = Math.floor(convertMillisec / 1000) % 60\r\n\tconst minute = Math.floor(convertMillisec / 1000 / 60) % 60\r\n\r\n\treturn {\r\n\t\tmillisec,\r\n\t\tsecond,\r\n\t\tminute,\r\n\t}\r\n}\r\n","const TimerStatus = {\r\n\tRUNNING: \"RUNNING\",\r\n\tPAUSED: \"PAUSED\",\r\n\tSTOPPED: \"STOPPED\",\r\n}\r\n\r\nexport default TimerStatus\r\n","import {\r\n\tcreateEntityAdapter,\r\n\tcreateSelector,\r\n\tcreateSlice,\r\n} from \"@reduxjs/toolkit\"\r\nimport { calcTimerRemainTime } from \"../../services/timerService\"\r\nimport TimerStatus from \"./TimerStatus\"\r\nimport { isInteger } from \"lodash\"\r\n\r\nconst timersAdapter = createEntityAdapter()\r\n\r\nconst initialState = timersAdapter.getInitialState({\r\n\tshowCountdown: false,\r\n\tdelay: 1000,\r\n\tactiveTimerId: null,\r\n\tactiveTimerMusic: \"\",\r\n\tstatus: TimerStatus.STOPPED,\r\n\tloop: {\r\n\t\tcurrent: 1,\r\n\t\ttotal: 1,\r\n\t},\r\n\tmute: {\r\n\t\talarm: false,\r\n\t\tmusic: false,\r\n\t},\r\n})\r\n\r\n/**\r\n * {\r\n *  id: string,\r\n * \tlabel: string,\r\n * \tminute: number,\r\n * \tsecond: number,\r\n *  remainTime: number,\r\n * \tmusic: string,\r\n * }\r\n */\r\n\r\nconst timersSlice = createSlice({\r\n\tname: \"timers\",\r\n\tinitialState,\r\n\treducers: {\r\n\t\ttimersInitialized: timersAdapter.addMany,\r\n\t\ttimerAdded: timersAdapter.addOne,\r\n\t\ttimerDeleted: timersAdapter.removeOne,\r\n\t\ttimerSetLabel(state, action) {\r\n\t\t\tconst { timerId, label } = action.payload\r\n\t\t\tconst timer = state.entities[timerId]\r\n\r\n\t\t\ttimer.label = label\r\n\t\t},\r\n\t\ttimerSetTime: {\r\n\t\t\treducer(state, action) {\r\n\t\t\t\tconst { timerId, value, timeUnit } = action.payload\r\n\t\t\t\tconst timer = state.entities[timerId]\r\n\r\n\t\t\t\tif (timeUnit === \"minute\" || timeUnit === \"second\") {\r\n\t\t\t\t\ttimer[timeUnit] = value\r\n\t\t\t\t\ttimer.remainTime = (timer.minute * 60 + timer.second) * 1000\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tprepare(timerId, value, timeUnit) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tpayload: { timerId, value, timeUnit },\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\ttimerSetMusic(state, action) {\r\n\t\t\tconst { timerId, music } = action.payload\r\n\t\t\tconst timer = state.entities[timerId]\r\n\r\n\t\t\ttimer.music = music\r\n\t\t},\r\n\t\ttimerDeductTime: {\r\n\t\t\treducer(state, action) {\r\n\t\t\t\tconst { timerId, delay } = action.payload\r\n\t\t\t\tconst timer = state.entities[timerId]\r\n\r\n\t\t\t\ttimer.remainTime -= delay\r\n\t\t\t},\r\n\t\t\tprepare({ timerId, delay }) {\r\n\t\t\t\tif (!delay) {\r\n\t\t\t\t\tdelay = 1000\r\n\t\t\t\t}\r\n\t\t\t\treturn { payload: { timerId, delay } }\r\n\t\t\t},\r\n\t\t},\r\n\t\ttimerStatusUpdated(state, action) {\r\n\t\t\tconst { status } = action.payload\r\n\t\t\tstate.status = status\r\n\t\t},\r\n\t\ttimerSetNextTimer(state) {\r\n\t\t\tconst timers = Object.values(state.entities)\r\n\t\t\tfor (const [index, timer] of timers.entries()) {\r\n\t\t\t\tif (timer.remainTime > 0) {\r\n\t\t\t\t\tstate.activeTimerId = timer.id\r\n\t\t\t\t\tstate.activeTimerMusic = timer.music\r\n\t\t\t\t\tbreak\r\n\t\t\t\t}\r\n\t\t\t\t// reset if the last timer is over\r\n\t\t\t\tif (index === timers.length - 1) {\r\n\t\t\t\t\tstate.status = TimerStatus.STOPPED\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\ttimerDelayUpdated(state, action) {\r\n\t\t\tconst { delay } = action.payload\r\n\t\t\tstate.delay = delay\r\n\t\t},\r\n\t\ttimerResetTimers(state) {\r\n\t\t\tstate.activeTimerId = null\r\n\t\t\tstate.activeTimerMusic = \"\"\r\n\t\t\tstate.status = TimerStatus.STOPPED\r\n\t\t\tObject.values(state.entities).forEach((timer) => {\r\n\t\t\t\ttimer.remainTime = calcTimerRemainTime({\r\n\t\t\t\t\tminute: timer.minute,\r\n\t\t\t\t\tsecond: timer.second,\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t\tstate.loop.current = 1\r\n\t\t},\r\n\t\ttimerResetRemainTime(state) {\r\n\t\t\tObject.values(state.entities).forEach((timer) => {\r\n\t\t\t\ttimer.remainTime = calcTimerRemainTime({\r\n\t\t\t\t\tminute: timer.minute,\r\n\t\t\t\t\tsecond: timer.second,\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t},\r\n\t\ttimerSetShowCountdown(state, action) {\r\n\t\t\tconst { showCountdown } = action.payload\r\n\t\t\tstate.showCountdown = showCountdown\r\n\t\t},\r\n\t\ttimerSetLoop(state, action) {\r\n\t\t\tconst { current, total } = action.payload\r\n\r\n\t\t\tif (current && isInteger(current)) {\r\n\t\t\t\tstate.loop.current = current\r\n\t\t\t}\r\n\t\t\tif (total && isInteger(total)) {\r\n\t\t\t\tstate.loop.total = total\r\n\t\t\t}\r\n\t\t},\r\n\t\ttimerToggledMute(state, action) {\r\n\t\t\tconst { muteType } = action.payload\r\n\r\n\t\t\tif (muteType === \"alarm\") {\r\n\t\t\t\tstate.mute.alarm = !state.mute.alarm\r\n\t\t\t}\r\n\t\t\tif (muteType === \"music\") {\r\n\t\t\t\tstate.mute.music = !state.mute.music\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n})\r\n\r\nexport default timersSlice.reducer\r\n\r\nexport const {\r\n\ttimersInitialized,\r\n\ttimerAdded,\r\n\ttimerDeleted,\r\n\ttimerSetLabel,\r\n\ttimerSetTime,\r\n\ttimerSetMusic,\r\n\ttimerDeductTime,\r\n\ttimerStatusUpdated,\r\n\ttimerSetNextTimer,\r\n\ttimerDelayUpdated,\r\n\ttimerResetTimers,\r\n\ttimerResetRemainTime,\r\n\ttimerSetShowCountdown,\r\n\ttimerSetLoop,\r\n\ttimerToggledMute,\r\n} = timersSlice.actions\r\n\r\nexport const {\r\n\tselectAll: selectTimers,\r\n\tselectById: selectTimerById,\r\n\tselectTotal,\r\n} = timersAdapter.getSelectors((state) => state.timers)\r\n\r\nexport const selectShowCountdown = (state) => state.timers.showCountdown\r\n\r\nexport const selectTimerDelay = (state) => state.timers.delay\r\n\r\nexport const selectActiveTimerId = (state) => state.timers.activeTimerId\r\n\r\nexport const selectTimerStatus = (state) => state.timers.status\r\n\r\nexport const selectLastTimerId = createSelector(\r\n\tselectTimers,\r\n\tselectTotal,\r\n\t(timers, total) => {\r\n\t\tconst lastTimer = Object.values(timers)[total - 1]\r\n\t\treturn lastTimer.id\r\n\t}\r\n)\r\n\r\nexport const selectTimerLoopCurrentCount = (state) => state.timers.loop.current\r\n\r\nexport const selectTimerLoopTotalCount = (state) => state.timers.loop.total\r\n\r\nexport const selectTimerIsMuted = (state) => state.timers.mute.music\r\n\r\nexport const selectActiveTimerMusic = (state) => state.timers.activeTimerMusic\r\n","import React from \"react\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport {\r\n\tselectTimerById,\r\n\ttimerSetTime,\r\n\ttimerSetLabel,\r\n\ttimerSetMusic,\r\n\ttimerDeleted,\r\n} from \"./timersSlice\"\r\nimport {\r\n\tBox,\r\n\tPaper,\r\n\tFormControl,\r\n\tInputLabel,\r\n\tmakeStyles,\r\n\tMenuItem,\r\n\tSelect,\r\n\tTextField,\r\n\tIconButton,\r\n} from \"@material-ui/core\"\r\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tmusicInput: {\r\n\t\tminWidth: 200,\r\n\t},\r\n\ttimerContainer: {\r\n\t\tborderRadius: 30,\r\n\t\tpadding: \"10px 20px\",\r\n\t\t[theme.breakpoints.up(\"sm\")]: {\r\n\t\t\tpadding: \"20px 40px\",\r\n\t\t},\r\n\t\tmarginTop: theme.spacing(2),\r\n\t\tmarginBottom: theme.spacing(2),\r\n\t},\r\n\ttimerToolbar: {\r\n\t\tjustifyContent: \"center\",\r\n\t\t[theme.breakpoints.up(\"sm\")]: {\r\n\t\t\tjustifyContent: \"flex-start\",\r\n\t\t},\r\n\t},\r\n\ttimerInput: {\r\n\t\tminWidth: 60,\r\n\t},\r\n\tdeleteButton: {\r\n\t\topacity: 0.2,\r\n\t\tposition: \"absolute\",\r\n\t\ttop: 15,\r\n\t\tright: 20,\r\n\t\ttransition: \"opacity 0.5s ease\",\r\n\t\tzIndex: 2,\r\n\t\t\"&:hover\": {\r\n\t\t\topacity: 1,\r\n\t\t},\r\n\t},\r\n}))\r\n\r\nconst Timer = ({ id }) => {\r\n\tconst dispatch = useDispatch()\r\n\tconst classes = useStyles()\r\n\tconst timer = useSelector((state) => selectTimerById(state, id))\r\n\r\n\tconst handleTimeChange = (params) => {\r\n\t\tconst {\r\n\t\t\tevent: {\r\n\t\t\t\ttarget: { value },\r\n\t\t\t},\r\n\t\t\ttimeUnit,\r\n\t\t} = params\r\n\r\n\t\tdispatch(timerSetTime(timer.id, parseInt(value), timeUnit))\r\n\t}\r\n\r\n\tconst handleLabelChange = (e) =>\r\n\t\tdispatch(timerSetLabel({ timerId: timer.id, label: e.target.value }))\r\n\r\n\tconst handleMusicChange = (e) =>\r\n\t\tdispatch(timerSetMusic({ timerId: timer.id, music: e.target.value }))\r\n\r\n\tconst handleDeleteTimer = () => dispatch(timerDeleted(timer.id))\r\n\r\n\treturn (\r\n\t\t<Paper\r\n\t\t\tvariant=\"outlined\"\r\n\t\t\tclassName={classes.timerContainer}\r\n\t\t\tstyle={{ position: \"relative\" }}\r\n\t\t>\r\n\t\t\t<IconButton\r\n\t\t\t\tonClick={handleDeleteTimer}\r\n\t\t\t\tclassName={classes.deleteButton}\r\n\t\t\t\tsize=\"small\"\r\n\t\t\t>\r\n\t\t\t\t<HighlightOffIcon fontSize=\"small\" />\r\n\t\t\t</IconButton>\r\n\r\n\t\t\t<Box m={1} display=\"flex\" justifyContent=\"center\">\r\n\t\t\t\t<TextField\r\n\t\t\t\t\tvalue={timer.label ?? \"\"}\r\n\t\t\t\t\tonChange={(e) => handleLabelChange(e)}\r\n\t\t\t\t\tinputProps={{ style: { textAlign: \"center\" } }}\r\n\t\t\t\t/>\r\n\t\t\t</Box>\r\n\r\n\t\t\t<Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\r\n\t\t\t\t<Box m={1}>\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\tid={`timer-${id}-min`}\r\n\t\t\t\t\t\tlabel=\"Minute\"\r\n\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\tInputLabelProps={{\r\n\t\t\t\t\t\t\tshrink: true,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tinputProps={{ min: 0, max: 59, className: classes.timerInput }}\r\n\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\tonChange={(e) => handleTimeChange({ event: e, timeUnit: \"minute\" })}\r\n\t\t\t\t\t\tvalue={timer.minute}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Box>\r\n\r\n\t\t\t\t<Box m={1}>:</Box>\r\n\r\n\t\t\t\t<Box m={1}>\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\tid={`timer-${id}-sec`}\r\n\t\t\t\t\t\tlabel=\"Second\"\r\n\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\tInputLabelProps={{\r\n\t\t\t\t\t\t\tshrink: true,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\tinputProps={{ min: 0, max: 59, className: classes.timerInput }}\r\n\t\t\t\t\t\tonChange={(e) => handleTimeChange({ event: e, timeUnit: \"second\" })}\r\n\t\t\t\t\t\tvalue={timer.second}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Box>\r\n\t\t\t</Box>\r\n\r\n\t\t\t<Box display=\"flex\" className={classes.timerToolbar}>\r\n\t\t\t\t<FormControl>\r\n\t\t\t\t\t<InputLabel id={`timer-music-${timer.id}-label`}>\r\n\t\t\t\t\t\tTimer Music\r\n\t\t\t\t\t</InputLabel>\r\n\t\t\t\t\t<Select\r\n\t\t\t\t\t\tlabelId={`timer-music-${timer.id}-label`}\r\n\t\t\t\t\t\tid={`timer-music-${timer.id}`}\r\n\t\t\t\t\t\tvalue={timer.music ?? \"\"}\r\n\t\t\t\t\t\tonChange={handleMusicChange}\r\n\t\t\t\t\t\tclassName={classes.musicInput}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<MenuItem value=\"\">No Music</MenuItem>\r\n\t\t\t\t\t\t<MenuItem value=\"Muay_Thai_Sarama_ROUND_1.mp3\">\r\n\t\t\t\t\t\t\tMuay Thai Music\r\n\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t</Select>\r\n\t\t\t\t</FormControl>\r\n\t\t\t</Box>\r\n\t\t</Paper>\r\n\t)\r\n}\r\n\r\nexport default Timer\r\n","import React from \"react\"\r\nimport Timer from \"./Timer\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { selectTimers } from \"./timersSlice\"\r\n\r\nconst TimerList = () => {\r\n\tconst timers = useSelector((state) => selectTimers(state))\r\n\r\n\treturn (\r\n\t\t<main>\r\n\t\t\t{timers.map((timer) => (\r\n\t\t\t\t<Timer id={timer.id} key={timer.id} />\r\n\t\t\t))}\r\n\t\t</main>\r\n\t)\r\n}\r\n\r\nexport default TimerList\r\n","import React from \"react\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport {\r\n\tselectTimerById,\r\n\tselectActiveTimerId,\r\n\tselectTimerDelay,\r\n\ttimerDeductTime,\r\n\ttimerSetNextTimer,\r\n\tselectTimerStatus,\r\n\tselectLastTimerId,\r\n\ttimerStatusUpdated,\r\n\tselectTimerLoopCurrentCount,\r\n\tselectTimerLoopTotalCount,\r\n\ttimerSetLoop,\r\n\ttimerResetRemainTime,\r\n} from \"./timersSlice\"\r\nimport useInterval from \"../../hooks/useInterval\"\r\nimport TimerStatus from \"./TimerStatus\"\r\nimport { convertTimeFormatForDisplay } from \"../../services/timerService\"\r\n\r\nimport { Box, Typography, makeStyles } from \"@material-ui/core\"\r\n\r\nconst useStyles = makeStyles({\r\n\tdigits: {\r\n\t\tmargin: 10,\r\n\t},\r\n\tmillisecond: {\r\n\t\tposition: \"absolute\",\r\n\t\tbottom: 5,\r\n\t\tright: -40,\r\n\t},\r\n\tmainDisplay: {\r\n\t\tposition: \"relative\",\r\n\t\twidth: \"fit-content\",\r\n\t\tmargin: \"0 auto\",\r\n\t},\r\n})\r\n\r\nconst TimerCountdown = ({ alarmPlayer }) => {\r\n\tconst dispatch = useDispatch()\r\n\tconst classes = useStyles()\r\n\r\n\tconst activeTimerId = useSelector(selectActiveTimerId)\r\n\tconst timer = useSelector((state) => selectTimerById(state, activeTimerId))\r\n\tconst delay = useSelector((state) => selectTimerDelay(state))\r\n\tconst timerStatus = useSelector(selectTimerStatus)\r\n\tconst lastTimerId = useSelector(selectLastTimerId)\r\n\tconst loopCurrent = useSelector(selectTimerLoopCurrentCount)\r\n\tconst loopTotal = useSelector(selectTimerLoopTotalCount)\r\n\r\n\tconst timePerUnit = convertTimeFormatForDisplay(timer.remainTime)\r\n\r\n\tconst showTimerDigits = (digit) => (digit < 10 ? \"0\" + digit : digit)\r\n\r\n\tuseInterval(\r\n\t\t() => {\r\n\t\t\tif (timer.remainTime > 0) {\r\n\t\t\t\tdispatch(timerDeductTime({ timerId: timer.id, delay }))\r\n\t\t\t} else {\r\n\t\t\t\talarmPlayer.current.play()\r\n\r\n\t\t\t\t/**\r\n\t\t\t\t * if it's the last timer, check if the loop count reaches total\r\n\t\t\t\t * if yes, update the status to be stopped\r\n\t\t\t\t * else dispatch count++ and set next timer\r\n\t\t\t\t */\r\n\r\n\t\t\t\tif (activeTimerId === lastTimerId) {\r\n\t\t\t\t\t// if loop count has reached the end\r\n\t\t\t\t\tif (loopCurrent < loopTotal) {\r\n\t\t\t\t\t\tdispatch(timerSetLoop({ current: loopCurrent + 1 }))\r\n\t\t\t\t\t\t// reset remain time of every timer\r\n\t\t\t\t\t\tdispatch(timerResetRemainTime())\r\n\t\t\t\t\t\tdispatch(timerSetNextTimer())\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tdispatch(timerStatusUpdated({ status: TimerStatus.STOPPED }))\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdispatch(timerSetNextTimer())\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\ttimerStatus === TimerStatus.RUNNING &&\r\n\t\t\tactiveTimerId &&\r\n\t\t\ttimer.id === activeTimerId\r\n\t\t\t? delay\r\n\t\t\t: null\r\n\t)\r\n\r\n\treturn (\r\n\t\t<Box textAlign=\"center\" height=\"100%\" display=\"flex\" flexDirection=\"column\">\r\n\t\t\t<Typography variant=\"h4\" component=\"div\" style={{ marginTop: 10 }}>\r\n\t\t\t\tRound: {loopCurrent} / {loopTotal}\r\n\t\t\t</Typography>\r\n\t\t\t<Box\r\n\t\t\t\tdisplay=\"flex\"\r\n\t\t\t\tjustifyContent=\"center\"\r\n\t\t\t\tflexDirection=\"column\"\r\n\t\t\t\theight=\"100%\"\r\n\t\t\t>\r\n\t\t\t\t<Typography variant=\"h4\" component=\"div\" style={{ marginBottom: 10 }}>\r\n\t\t\t\t\t{timer.label}\r\n\t\t\t\t</Typography>\r\n\r\n\t\t\t\t<Box\r\n\t\t\t\t\tdisplay=\"flex\"\r\n\t\t\t\t\tjustifyContent=\"center\"\r\n\t\t\t\t\talignItems=\"center\"\r\n\t\t\t\t\tclassName={classes.mainDisplay}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Typography\r\n\t\t\t\t\t\tvariant=\"h2\"\r\n\t\t\t\t\t\tcomponent=\"div\"\r\n\t\t\t\t\t\tclassName={`${classes.digits}`}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{showTimerDigits(timePerUnit.minute)}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Typography variant=\"h3\">:</Typography>\r\n\t\t\t\t\t<Typography\r\n\t\t\t\t\t\tvariant=\"h2\"\r\n\t\t\t\t\t\tcomponent=\"div\"\r\n\t\t\t\t\t\tclassName={`${classes.digits}`}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{showTimerDigits(timePerUnit.second)}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t{delay < 1000 && (\r\n\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\tvariant=\"h5\"\r\n\t\t\t\t\t\t\tclassName={`${classes.millisecond} ${classes.digits}`}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{showTimerDigits(timePerUnit.millisec)}\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Box>\r\n\t\t\t</Box>\r\n\t\t</Box>\r\n\t)\r\n}\r\n\r\nexport default TimerCountdown\r\n","import { useEffect, useRef } from \"react\"\r\n\r\nexport default function useInterval(callback, delay) {\r\n\tconst savedCallback = useRef()\r\n\r\n\t// Remember the latest callback.\r\n\tuseEffect(() => {\r\n\t\tsavedCallback.current = callback\r\n\t}, [callback])\r\n\r\n\t// Set up the interval.\r\n\tuseEffect(() => {\r\n\t\tfunction tick() {\r\n\t\t\tsavedCallback.current()\r\n\t\t}\r\n\t\tif (delay !== null) {\r\n\t\t\tlet id = setInterval(tick, delay)\r\n\t\t\treturn () => clearInterval(id)\r\n\t\t}\r\n\t}, [delay])\r\n}\r\n","export default __webpack_public_path__ + \"static/media/timesup.e69d4f91.mp3\";","import React, { useRef } from \"react\"\r\nimport TimerList from \"./TimerList\"\r\nimport TimerCountdown from \"./TimerCountdown\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { selectShowCountdown, selectTimerStatus } from \"./timersSlice\"\r\nimport TimerStatus from \"./TimerStatus\"\r\nimport timesUpSfx from \"../../audio/timesup.mp3\"\r\nimport ReactHowler from \"react-howler\"\r\nimport { Box, Container, makeStyles } from \"@material-ui/core\"\r\n\r\nconst useStyles = makeStyles({\r\n\tmainSection: {\r\n\t\toverflowY: \"scroll\",\r\n\t},\r\n})\r\n\r\nconst TimerMain = ({ heightOfMainSection }) => {\r\n\tconst classes = useStyles()\r\n\r\n\tconst timerStatus = useSelector(selectTimerStatus)\r\n\tconst showCountdown = useSelector(selectShowCountdown)\r\n\tconst alarmPlayer = useRef(null)\r\n\r\n\tif (timerStatus === TimerStatus.RUNNING || showCountdown) {\r\n\t\treturn (\r\n\t\t\t<Container maxWidth=\"sm\" style={{ height: heightOfMainSection }}>\r\n\t\t\t\t<TimerCountdown alarmPlayer={alarmPlayer}></TimerCountdown>\r\n\t\t\t\t<ReactHowler\r\n\t\t\t\t\tsrc={timesUpSfx}\r\n\t\t\t\t\tplaying={false}\r\n\t\t\t\t\thtml5={true}\r\n\t\t\t\t\tref={alarmPlayer}\r\n\t\t\t\t/>\r\n\t\t\t</Container>\r\n\t\t)\r\n\t} else {\r\n\t\treturn (\r\n\t\t\t<Box\r\n\t\t\t\tstyle={{ height: heightOfMainSection }}\r\n\t\t\t\tclassName={classes.mainSection}\r\n\t\t\t>\r\n\t\t\t\t<Container maxWidth=\"sm\">\r\n\t\t\t\t\t<TimerList />\r\n\t\t\t\t</Container>\r\n\t\t\t</Box>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default TimerMain\r\n","import React, { useEffect } from \"react\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport {\r\n\ttimerStatusUpdated,\r\n\tselectActiveTimerId,\r\n\ttimerSetNextTimer,\r\n\tselectTimerStatus,\r\n\ttimerResetTimers,\r\n\ttimerSetShowCountdown,\r\n\tselectTimerLoopTotalCount,\r\n\ttimerSetLoop,\r\n\ttimerToggledMute,\r\n\tselectTimerIsMuted,\r\n\ttimerAdded,\r\n\tselectShowCountdown,\r\n} from \"../features/timers/timersSlice\"\r\nimport TimerStatus from \"../features/timers/TimerStatus\"\r\n\r\nimport {\r\n\tButton,\r\n\tIconButton,\r\n\tBox,\r\n\tContainer,\r\n\tPaper,\r\n\tFormControl,\r\n\tmakeStyles,\r\n\tTextField,\r\n} from \"@material-ui/core\"\r\nimport VolumeOffRoundedIcon from \"@material-ui/icons/VolumeOffRounded\"\r\nimport VolumeUpRoundedIcon from \"@material-ui/icons/VolumeUpRounded\"\r\nimport AddCircleSharpIcon from \"@material-ui/icons/AddCircleSharp\"\r\nimport SettingsIcon from \"@material-ui/icons/Settings\"\r\n\r\nimport { createTimer } from \"../services/timerService\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tformControl: {\r\n\t\twidth: 125,\r\n\t},\r\n\tcontrolPanelContainer: {\r\n\t\tposition: \"relative\",\r\n\t\tpadding: theme.spacing(1),\r\n\t\t[theme.breakpoints.up(\"sm\")]: {\r\n\t\t\tpadding: theme.spacing(3),\r\n\t\t},\r\n\t},\r\n\taddButton: {\r\n\t\tposition: \"absolute\",\r\n\t\ttop: 0,\r\n\t\tright: 0,\r\n\t\tzIndex: 2,\r\n\t\t[theme.breakpoints.up(\"sm\")]: {\r\n\t\t\tright: 50,\r\n\t\t},\r\n\t},\r\n\ttoolbar: {\r\n\t\tmarginTop: 16,\r\n\t},\r\n}))\r\n\r\nconst ControlPanel = ({ setHeightOfControlPanel, handleModalStatus }) => {\r\n\tconst classes = useStyles()\r\n\tconst dispatch = useDispatch()\r\n\r\n\tconst timerStatus = useSelector(selectTimerStatus)\r\n\tconst activeTimerId = useSelector(selectActiveTimerId)\r\n\tconst loopTotal = useSelector(selectTimerLoopTotalCount)\r\n\tconst isMuted = useSelector(selectTimerIsMuted)\r\n\tconst showCountdown = useSelector(selectShowCountdown)\r\n\r\n\tconst handleStart = () => {\r\n\t\tif (!activeTimerId) {\r\n\t\t\tdispatch(timerSetNextTimer())\r\n\t\t}\r\n\t\tconst newStatus =\r\n\t\t\ttimerStatus === TimerStatus.RUNNING\r\n\t\t\t\t? TimerStatus.PAUSED\r\n\t\t\t\t: TimerStatus.RUNNING\r\n\t\tdispatch(\r\n\t\t\ttimerStatusUpdated({\r\n\t\t\t\tstatus: newStatus,\r\n\t\t\t})\r\n\t\t)\r\n\t\tdispatch(timerSetShowCountdown({ showCountdown: true }))\r\n\t}\r\n\r\n\tconst handleReset = () => {\r\n\t\tdispatch(timerSetShowCountdown({ showCountdown: false }))\r\n\t\tdispatch(timerResetTimers())\r\n\t}\r\n\r\n\tconst handleToggleMusicMuted = () =>\r\n\t\tdispatch(timerToggledMute({ muteType: \"music\" }))\r\n\r\n\tconst handleLoopChanged = (e) => {\r\n\t\tdispatch(timerSetLoop({ total: parseInt(e.target.value) }))\r\n\t}\r\n\r\n\tconst handleAddTimer = () => dispatch(timerAdded(createTimer()))\r\n\r\n\t// get the height of control panel to render the height of main section\r\n\tuseEffect(() => {\r\n\t\tconst height = document.getElementById(\"control-panel\").clientHeight\r\n\t\tsetHeightOfControlPanel(height)\r\n\t})\r\n\r\n\treturn (\r\n\t\t<Paper elevation={10} id=\"control-panel\">\r\n\t\t\t<Container maxWidth=\"md\" className={classes.controlPanelContainer}>\r\n\t\t\t\t<IconButton\r\n\t\t\t\t\tsize=\"medium\"\r\n\t\t\t\t\tonClick={handleAddTimer}\r\n\t\t\t\t\tdisabled={showCountdown}\r\n\t\t\t\t\tclassName={classes.addButton}\r\n\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<AddCircleSharpIcon />\r\n\t\t\t\t</IconButton>\r\n\r\n\t\t\t\t<Box display=\"flex\" justifyContent=\"center\">\r\n\t\t\t\t\t<Box m={1}>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tonClick={handleStart}\r\n\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\tsize=\"large\"\r\n\t\t\t\t\t\t\tdisabled={showCountdown && timerStatus === TimerStatus.STOPPED}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{timerStatus === TimerStatus.RUNNING ? \"Pause\" : \"Start\"}\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t<Box m={1}>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tonClick={handleReset}\r\n\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\tcolor=\"secondary\"\r\n\t\t\t\t\t\t\tsize=\"large\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tReset\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Box>\r\n\r\n\t\t\t\t<Box\r\n\t\t\t\t\tdisplay=\"flex\"\r\n\t\t\t\t\tjustifyContent=\"space-around\"\r\n\t\t\t\t\tclassName={classes.toolbar}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Box display=\"flex\" justifyContent=\"space-between\">\r\n\t\t\t\t\t\t<IconButton onClick={(e) => handleModalStatus(e, true)}>\r\n\t\t\t\t\t\t\t<SettingsIcon />\r\n\t\t\t\t\t\t</IconButton>\r\n\r\n\t\t\t\t\t\t<IconButton onClick={handleToggleMusicMuted}>\r\n\t\t\t\t\t\t\t{isMuted ? <VolumeOffRoundedIcon /> : <VolumeUpRoundedIcon />}\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t</Box>\r\n\r\n\t\t\t\t\t<FormControl className={classes.formControl}>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tid=\"loop\"\r\n\t\t\t\t\t\t\tlabel=\"No. of rounds\"\r\n\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\tvalue={loopTotal}\r\n\t\t\t\t\t\t\tonChange={(e) => handleLoopChanged(e)}\r\n\t\t\t\t\t\t\tdisabled={showCountdown}\r\n\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</FormControl>\r\n\t\t\t\t</Box>\r\n\t\t\t</Container>\r\n\t\t</Paper>\r\n\t)\r\n}\r\n\r\nexport default ControlPanel\r\n","import { createSlice } from \"@reduxjs/toolkit\"\r\n\r\nconst initDarkMode = () => {\r\n\tconst savedPreference = localStorage.getItem(\"darkMode\")\r\n\r\n\tif (savedPreference !== null) {\r\n\t\treturn savedPreference === \"true\"\r\n\t}\r\n\r\n\tconst systemPreference =\r\n\t\twindow.matchMedia &&\r\n\t\twindow.matchMedia(\"(prefers-color-scheme: dark)\").matches\r\n\r\n\treturn systemPreference\r\n}\r\n\r\nconst initialState = {\r\n\tdarkMode: initDarkMode(),\r\n}\r\n\r\nconst settingsSlice = createSlice({\r\n\tname: \"settings\",\r\n\tinitialState,\r\n\treducers: {\r\n\t\ttoggleDarkMode(state) {\r\n\t\t\tstate.darkMode = !state.darkMode\r\n\t\t},\r\n\t},\r\n})\r\n\r\nexport default settingsSlice.reducer\r\n\r\nexport const { toggleDarkMode } = settingsSlice.actions\r\n\r\nexport const selectIsDarkMode = (state) => state.settings.darkMode\r\n","import React from \"react\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport { selectTimerDelay, timerDelayUpdated } from \"../timers/timersSlice\"\r\nimport { toggleDarkMode, selectIsDarkMode } from \"../settings/settingsSlice\"\r\n\r\nimport {\r\n\tBox,\r\n\tDialog,\r\n\tDialogTitle,\r\n\tDialogContent,\r\n\tFormControl,\r\n\tFormControlLabel,\r\n\tGrid,\r\n\tInputLabel,\r\n\tSelect,\r\n\tSwitch,\r\n\tMenuItem,\r\n\tmakeStyles,\r\n\tTypography,\r\n} from \"@material-ui/core\"\r\nimport SettingsIcon from \"@material-ui/icons/Settings\"\r\n\r\nconst useStyles = makeStyles({\r\n\tformControl: {\r\n\t\twidth: 125,\r\n\t},\r\n})\r\n\r\nconst Settings = ({ open, handleOpen }) => {\r\n\tconst dispatch = useDispatch()\r\n\tconst classes = useStyles()\r\n\r\n\tconst delay = useSelector(selectTimerDelay)\r\n\tconst isDarkMode = useSelector(selectIsDarkMode)\r\n\r\n\tconst handleDarkModeToggle = () => {\r\n\t\tdispatch(toggleDarkMode())\r\n\t\tlocalStorage.setItem(\"darkMode\", !isDarkMode)\r\n\t}\r\n\r\n\tconst handleDelayChange = (e) =>\r\n\t\tdispatch(timerDelayUpdated({ delay: e.target.value }))\r\n\r\n\treturn (\r\n\t\t<Dialog\r\n\t\t\tonClose={(e) => handleOpen(e, false)}\r\n\t\t\taria-labelledby=\"settings-dialog-title\"\r\n\t\t\topen={open}\r\n\t\t\tmaxWidth=\"sm\"\r\n\t\t\tfullWidth={true}\r\n\t\t>\r\n\t\t\t<DialogTitle id=\"settings-dialog-title\">\r\n\t\t\t\t<Box display=\"flex\" alignItems=\"center\">\r\n\t\t\t\t\t<SettingsIcon />\r\n\t\t\t\t\t<Typography component=\"span\" style={{ marginLeft: 10 }}>\r\n\t\t\t\t\t\tSettings\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</Box>\r\n\t\t\t</DialogTitle>\r\n\t\t\t<DialogContent style={{ paddingBottom: 16 }}>\r\n\t\t\t\t<Grid container>\r\n\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t<FormControl className={classes.formControl}>\r\n\t\t\t\t\t\t\t<InputLabel>Refresh rate</InputLabel>\r\n\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\tid=\"updateFreq\"\r\n\t\t\t\t\t\t\t\tvalue={delay}\r\n\t\t\t\t\t\t\t\tonChange={(e) => handleDelayChange(e)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<MenuItem value={10}>10</MenuItem>\r\n\t\t\t\t\t\t\t\t<MenuItem value={100}>100</MenuItem>\r\n\t\t\t\t\t\t\t\t<MenuItem value={1000}>1000</MenuItem>\r\n\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\tcontrol={\r\n\t\t\t\t\t\t\t\t<Switch\r\n\t\t\t\t\t\t\t\t\tchecked={isDarkMode ?? false}\r\n\t\t\t\t\t\t\t\t\tonChange={handleDarkModeToggle}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tlabel=\"Dark Theme\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</DialogContent>\r\n\t\t</Dialog>\r\n\t)\r\n}\r\n\r\nexport default Settings\r\n","export default __webpack_public_path__ + \"static/media/Muay_Thai_Sarama_ROUND_1.d86445b7.mp3\";","import React, { useEffect, useRef } from \"react\"\r\nimport TimerStatus from \"../features/timers/TimerStatus\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport {\r\n\tselectTimerStatus,\r\n\tselectTimerIsMuted,\r\n\tselectActiveTimerId,\r\n\tselectActiveTimerMusic,\r\n\ttimerStatusUpdated,\r\n} from \"../features/timers/timersSlice\"\r\nimport ReactHowler from \"react-howler\"\r\nimport muayThaiBgMusic from \"../audio/Muay_Thai_Sarama_ROUND_1.mp3\"\r\n\r\nconst MusicPlayer = () => {\r\n\tconst dispatch = useDispatch()\r\n\r\n\tconst timerStatus = useSelector(selectTimerStatus)\r\n\tconst isMuted = useSelector(selectTimerIsMuted)\r\n\tconst activeTimerId = useSelector(selectActiveTimerId)\r\n\tconst music = useSelector(selectActiveTimerMusic)\r\n\r\n\tconst musicPlayer = useRef(null)\r\n\r\n\tuseEffect(() => {\r\n\t\t// play the music from the beginning once timer is changed\r\n\t\tmusicPlayer.current.seek(0)\r\n\r\n\t\tif (activeTimerId) {\r\n\t\t\tdispatch(timerStatusUpdated({ status: TimerStatus.RUNNING }))\r\n\t\t}\r\n\t}, [activeTimerId, dispatch])\r\n\r\n\treturn (\r\n\t\t<ReactHowler\r\n\t\t\tsrc={muayThaiBgMusic}\r\n\t\t\tplaying={timerStatus === TimerStatus.RUNNING && music !== \"\"}\r\n\t\t\tmute={isMuted}\r\n\t\t\tref={musicPlayer}\r\n\t\t\tloop={true}\r\n\t\t\thtml5={true}\r\n\t\t/>\r\n\t)\r\n}\r\n\r\nexport default MusicPlayer\r\n","import React, { useEffect, useState } from \"react\"\r\nimport TimerMain from \"../features/timers/TimerMain\"\r\nimport ControlPanel from \"./ControlPanel\"\r\nimport Settings from \"../features/settings/Settings\"\r\nimport { Box, Paper, makeStyles } from \"@material-ui/core\"\r\nimport MusicPlayer from \"./MusicPlayer\"\r\n\r\nconst useStyles = makeStyles({\r\n\tapp: {\r\n\t\toverflow: \"hidden\",\r\n\t\theight: \"100%\",\r\n\t\tborderRadius: 0,\r\n\t},\r\n\tappBar: {\r\n\t\tposition: \"fixed\",\r\n\t\tleft: 0,\r\n\t\tbottom: 0,\r\n\t\tborderRadius: \"5px 5px 0 0\",\r\n\t\tzIndex: 1100,\r\n\t\tboxSizing: \"border-box\",\r\n\t\twidth: \"100%\",\r\n\t},\r\n})\r\n\r\nconst TimerApp = () => {\r\n\tconst classes = useStyles()\r\n\tconst [heightOfControlPanel, setHeightOfControlPanel] = useState(0)\r\n\tconst [heightOfMainSection, setHeightOfMainSection] = useState(0)\r\n\tconst [modalIsOpen, openModal] = useState(false)\r\n\r\n\tconst setHeight = () => {\r\n\t\tconst heightOfMainSection = window.innerHeight - heightOfControlPanel\r\n\t\t// console.log(\"set height is called\", window.innerHeight, heightOfMainSection)\r\n\t\tsetHeightOfMainSection(heightOfMainSection)\r\n\t}\r\n\r\n\tconst handleModalStatus = (e, open) => {\r\n\t\tif (typeof open === \"boolean\") {\r\n\t\t\topenModal(open)\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tsetHeight()\r\n\t}, [heightOfControlPanel])\r\n\r\n\tuseEffect(() => {\r\n\t\tsetHeight()\r\n\t\twindow.addEventListener(\"resize\", setHeight)\r\n\r\n\t\treturn () => {\r\n\t\t\twindow.removeEventListener(\"resize\", setHeight)\r\n\t\t}\r\n\t})\r\n\r\n\treturn (\r\n\t\t<Paper elevation={0} className={`App ${classes.app}`}>\r\n\t\t\t<Box className={classes.mainSection}>\r\n\t\t\t\t<TimerMain heightOfMainSection={heightOfMainSection} />\r\n\t\t\t</Box>\r\n\r\n\t\t\t<Box className={classes.appBar}>\r\n\t\t\t\t<ControlPanel\r\n\t\t\t\t\tsetHeightOfControlPanel={setHeightOfControlPanel}\r\n\t\t\t\t\thandleModalStatus={handleModalStatus}\r\n\t\t\t\t/>\r\n\t\t\t</Box>\r\n\r\n\t\t\t<MusicPlayer />\r\n\r\n\t\t\t<Settings open={modalIsOpen} handleOpen={handleModalStatus} />\r\n\t\t</Paper>\r\n\t)\r\n}\r\n\r\nexport default TimerApp\r\n","import React from \"react\"\r\nimport \"./styles/App.scss\"\r\nimport TimerApp from \"./components/TimerApp\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { selectIsDarkMode } from \"./features/settings/settingsSlice\"\r\nimport { ThemeProvider } from \"@material-ui/core\"\r\nimport { unstable_createMuiStrictModeTheme as createMuiTheme } from \"@material-ui/core/styles\"\r\nimport blue from \"@material-ui/core/colors/blue\"\r\n\r\nconst App = () => {\r\n\tconst isDarkMode = useSelector(selectIsDarkMode)\r\n\r\n\tconst theme = React.useMemo(\r\n\t\t() =>\r\n\t\t\tcreateMuiTheme({\r\n\t\t\t\tpalette: {\r\n\t\t\t\t\tprimary: {\r\n\t\t\t\t\t\tmain: blue[500],\r\n\t\t\t\t\t},\r\n\t\t\t\t\ttype: isDarkMode ? \"dark\" : \"light\",\r\n\t\t\t\t},\r\n\t\t\t}),\r\n\t\t[isDarkMode]\r\n\t)\r\n\r\n\treturn (\r\n\t\t<ThemeProvider theme={theme}>\r\n\t\t\t<TimerApp />\r\n\t\t</ThemeProvider>\r\n\t)\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n\twindow.location.hostname === \"localhost\" ||\r\n\t\t// [::1] is the IPv6 localhost address.\r\n\t\twindow.location.hostname === \"[::1]\" ||\r\n\t\t// 127.0.0.0/8 are considered localhost for IPv4.\r\n\t\twindow.location.hostname.match(\r\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n\t\t)\r\n)\r\n\r\nexport function register(config) {\r\n\tif (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n\t\t// The URL constructor is available in all browsers that support SW.\r\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\r\n\t\tif (publicUrl.origin !== window.location.origin) {\r\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\r\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\r\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\twindow.addEventListener(\"load\", () => {\r\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n\t\t\tif (isLocalhost) {\r\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\r\n\t\t\t\tcheckValidServiceWorker(swUrl, config)\r\n\r\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\r\n\t\t\t\t// service worker/PWA documentation.\r\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\r\n\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t\"This web app is being served cache-first by a service \" +\r\n\t\t\t\t\t\t\t\"worker. To learn more, visit https://cra.link/PWA\"\r\n\t\t\t\t\t)\r\n\t\t\t\t})\r\n\t\t\t} else {\r\n\t\t\t\t// Is not localhost. Just register service worker\r\n\t\t\t\tregisterValidSW(swUrl, config)\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n\tnavigator.serviceWorker\r\n\t\t.register(swUrl)\r\n\t\t.then((registration) => {\r\n\t\t\tregistration.onupdatefound = () => {\r\n\t\t\t\tconst installingWorker = registration.installing\r\n\t\t\t\tif (installingWorker == null) {\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\t\t\t\tinstallingWorker.onstatechange = () => {\r\n\t\t\t\t\tif (installingWorker.state === \"installed\") {\r\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\r\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\r\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\r\n\t\t\t\t\t\t\t// content until all client tabs are closed.\r\n\t\t\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t\t\t\"New content is available and will be used when all \" +\r\n\t\t\t\t\t\t\t\t\t\"tabs for this page are closed. See https://cra.link/PWA.\"\r\n\t\t\t\t\t\t\t)\r\n\r\n\t\t\t\t\t\t\t// Execute callback\r\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\r\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// At this point, everything has been precached.\r\n\t\t\t\t\t\t\t// It's the perfect time to display a\r\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\r\n\t\t\t\t\t\t\tconsole.log(\"Content is cached for offline use.\")\r\n\r\n\t\t\t\t\t\t\t// Execute callback\r\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\r\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch((error) => {\r\n\t\t\tconsole.error(\"Error during service worker registration:\", error)\r\n\t\t})\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n\t// Check if the service worker can be found. If it can't reload the page.\r\n\tfetch(swUrl, {\r\n\t\theaders: { \"Service-Worker\": \"script\" },\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\r\n\t\t\tconst contentType = response.headers.get(\"content-type\")\r\n\t\t\tif (\r\n\t\t\t\tresponse.status === 404 ||\r\n\t\t\t\t(contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n\t\t\t) {\r\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\r\n\t\t\t\tnavigator.serviceWorker.ready.then((registration) => {\r\n\t\t\t\t\tregistration.unregister().then(() => {\r\n\t\t\t\t\t\twindow.location.reload()\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t} else {\r\n\t\t\t\t// Service worker found. Proceed as normal.\r\n\t\t\t\tregisterValidSW(swUrl, config)\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch(() => {\r\n\t\t\tconsole.log(\r\n\t\t\t\t\"No internet connection found. App is running in offline mode.\"\r\n\t\t\t)\r\n\t\t})\r\n}\r\n\r\nexport function unregister() {\r\n\tif (\"serviceWorker\" in navigator) {\r\n\t\tnavigator.serviceWorker.ready\r\n\t\t\t.then((registration) => {\r\n\t\t\t\tregistration.unregister()\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tconsole.error(error.message)\r\n\t\t\t})\r\n\t}\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from \"@reduxjs/toolkit\"\r\nimport timersReducer from \"./features/timers/timersSlice\"\r\nimport settingsReducer from \"./features/settings/settingsSlice\"\r\n\r\nconst store = configureStore({\r\n\treducer: {\r\n\t\ttimers: timersReducer,\r\n\t\tsettings: settingsReducer,\r\n\t},\r\n})\r\n\r\nexport default store\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport \"./index.css\"\r\nimport App from \"./App\"\r\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\"\r\nimport reportWebVitals from \"./reportWebVitals\"\r\n\r\nimport store from \"./store\"\r\nimport { Provider } from \"react-redux\"\r\nimport { timersInitialized } from \"./features/timers/timersSlice\"\r\nimport { initTimers } from \"./services/timerService\"\r\n\r\nstore.dispatch(timersInitialized(initTimers()))\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<Provider store={store}>\r\n\t\t\t<App />\r\n\t\t</Provider>\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.register()\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n"],"sourceRoot":""}