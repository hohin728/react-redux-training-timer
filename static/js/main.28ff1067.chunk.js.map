{"version":3,"sources":["services/timerService.js","features/timers/TimerStatus.js","features/timers/timersSlice.js","features/timers/Timer.jsx","features/timers/TimerList.jsx","audio/Muay_Thai_Sarama_ROUND_1.mp3","features/timers/TimerCountdown.jsx","hooks/useInterval.js","audio/timesup.mp3","features/timers/TimerMain.jsx","components/ControlPanel.jsx","components/TimerApp.jsx","theme.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","store.js","index.js"],"names":["calcTimerRemainTime","params","minute","second","isInteger","createTimer","id","timerId","uniqueId","timer","label","remainTime","music","TimerStatus","RUNNING","PAUSED","STOPPED","timersAdapter","createEntityAdapter","initialState","getInitialState","showCountdown","delay","activeTimerId","status","loop","current","total","mute","alarm","timersSlice","createSlice","name","reducers","timersInitialized","addMany","timerAdded","addOne","timerDeleted","removeOne","timerSetLabel","state","action","payload","entities","timerSetTime","reducer","value","timeUnit","prepare","timerSetMusic","timerDeductTime","timerStatusUpdated","timerSetNextTimer","timers","Object","values","entries","index","length","timerDelayUpdated","timerResetTimers","forEach","timerResetRemainTime","timerSetShowCountdown","timerSetLoop","timerToggledMute","muteType","actions","getSelectors","selectTimers","selectAll","selectTimerById","selectById","selectTotal","selectShowCountdown","selectTimerDelay","selectActiveTimerId","selectTimerStatus","selectLastTimerId","createSelector","selectTimerLoopCurrentCount","selectTimerLoopTotalCount","selectTimerIsMuted","useStyles","makeStyles","theme","musicInput","minWidth","timerContainer","borderRadius","padding","breakpoints","up","timerToolbar","justifyContent","deleteButton","opacity","position","top","right","transition","zIndex","Timer","dispatch","useDispatch","classes","useSelector","handleTimeChange","event","target","parseInt","Box","my","Paper","elevation","variant","className","style","IconButton","onClick","size","fontSize","m","display","TextField","onChange","e","handleLabelChange","inputProps","textAlign","alignItems","FormControl","type","InputLabelProps","shrink","min","max","InputLabel","Select","labelId","MenuItem","TimerList","map","digits","margin","millisecond","bottom","mainDisplay","width","TimerCountdown","convertMillisec","alarmPlayer","musicPlayer","useRef","timerStatus","lastTimerId","loopCurrent","loopTotal","isMuted","timePerUnit","millisec","Math","floor","showTimerDigits","digit","callback","savedCallback","useEffect","setInterval","clearInterval","useInterval","play","seek","height","flexDirection","Typography","component","marginTop","marginBottom","src","muayThaiBgMusic","playing","ref","html5","mainSection","overflowY","TimerMain","heightOfMainSection","Container","maxWidth","timesUpSfx","formControl","controlPanelContainer","spacing","addButton","toolbar","ControlPanel","setHeightOfControlPanel","document","getElementById","clientHeight","disabled","Button","color","handleDelayChange","handleLoopChanged","app","overflow","appBar","left","boxSizing","TimerApp","useState","heightOfControlPanel","setHeightOfMainSection","setHeight","window","innerHeight","debouncedSetHeight","fn","ms","clearTimeout","setTimeout","apply","arguments","debounce","addEventListener","removeEventListener","createMuiTheme","palette","primary","main","blue","App","ThemeProvider","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","timersReducer","i","push","initTimers","ReactDOM","render","StrictMode","URL","process","href","origin","fetch","headers","response","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.28ff1067.chunk.js","sourcesContent":["import { isInteger, uniqueId } from \"lodash\"\n\nconst defaultTimerMinute = 0\nconst defaultTimerSecond = 3\n\nexport const calcTimerRemainTime = (params) => {\n\tconst { minute, second } = params\n\n\tif (isInteger(minute) && isInteger(second)) {\n\t\treturn (minute * 60 + second) * 1000\n\t}\n\treturn 0\n}\n\nexport const createTimer = (params) => {\n\tconst id = params && params.timerId ? params.timerId : uniqueId()\n\tconst timer = {\n\t\tid: id,\n\t\tlabel: params && params.label ? params.label : \"timer label \" + id,\n\t\tminute: params && params.minute ? params.minute : defaultTimerMinute,\n\t\tsecond: params && params.second ? params.second : defaultTimerSecond,\n\t\tremainTime: 0,\n\t\tmusic: params && params.music ? params.music : \"\",\n\t}\n\ttimer.remainTime = calcTimerRemainTime({\n\t\tminute: timer.minute,\n\t\tsecond: timer.second,\n\t})\n\n\treturn timer\n}\n\nexport const initTimers = () => {\n\tconst timers = []\n\tfor (let i = 0; i < 3; i++) {\n\t\tconst timer = createTimer()\n\t\ttimers.push(timer)\n\t}\n\treturn timers\n}\n\nexport const convertTimeFormatForDisplay = (convertMillisec) => {\n\tif (!isInteger(convertMillisec) || convertMillisec <= 0) {\n\t\treturn {\n\t\t\tmillisec: 0,\n\t\t\tsecond: 0,\n\t\t\tminute: 0,\n\t\t}\n\t}\n\n\tconst millisec = (convertMillisec % 1000) / 10\n\tconst second = Math.floor(convertMillisec / 1000) % 60\n\tconst minute = Math.floor(convertMillisec / 1000 / 60) % 60\n\n\treturn {\n\t\tmillisec,\n\t\tsecond,\n\t\tminute,\n\t}\n}\n","const TimerStatus = {\n\tRUNNING: \"RUNNING\",\n\tPAUSED: \"PAUSED\",\n\tSTOPPED: \"STOPPED\",\n}\n\nexport default TimerStatus\n","import {\n\tcreateEntityAdapter,\n\tcreateSelector,\n\tcreateSlice,\n} from \"@reduxjs/toolkit\"\nimport { calcTimerRemainTime } from \"../../services/timerService\"\nimport TimerStatus from \"./TimerStatus\"\nimport { isInteger } from \"lodash\"\n\nconst timersAdapter = createEntityAdapter()\n\nconst initialState = timersAdapter.getInitialState({\n\tshowCountdown: false,\n\tdelay: 10,\n\tactiveTimerId: null,\n\tstatus: TimerStatus.STOPPED,\n\tloop: {\n\t\tcurrent: 1,\n\t\ttotal: 1,\n\t},\n\tmute: {\n\t\talarm: false,\n\t\tmusic: false,\n\t},\n})\n\n/**\n * {\n *  id: string,\n * \tlabel: string,\n * \tminute: number,\n * \tsecond: number,\n *  remainTime: number,\n * \tmusic: string,\n * }\n */\n\nconst timersSlice = createSlice({\n\tname: \"timers\",\n\tinitialState,\n\treducers: {\n\t\ttimersInitialized: timersAdapter.addMany,\n\t\ttimerAdded: timersAdapter.addOne,\n\t\ttimerDeleted: timersAdapter.removeOne,\n\t\ttimerSetLabel(state, action) {\n\t\t\tconst { timerId, label } = action.payload\n\t\t\tconst timer = state.entities[timerId]\n\n\t\t\ttimer.label = label\n\t\t},\n\t\ttimerSetTime: {\n\t\t\treducer(state, action) {\n\t\t\t\tconst { timerId, value, timeUnit } = action.payload\n\t\t\t\tconst timer = state.entities[timerId]\n\n\t\t\t\tif (timeUnit === \"minute\" || timeUnit === \"second\") {\n\t\t\t\t\ttimer[timeUnit] = value\n\t\t\t\t\ttimer.remainTime = (timer.minute * 60 + timer.second) * 1000\n\t\t\t\t}\n\t\t\t},\n\t\t\tprepare(timerId, value, timeUnit) {\n\t\t\t\treturn {\n\t\t\t\t\tpayload: { timerId, value, timeUnit },\n\t\t\t\t}\n\t\t\t},\n\t\t},\n\t\ttimerSetMusic(state, action) {\n\t\t\tconst { timerId, music } = action.payload\n\t\t\tconst timer = state.entities[timerId]\n\n\t\t\ttimer.music = music\n\t\t},\n\t\ttimerDeductTime: {\n\t\t\treducer(state, action) {\n\t\t\t\tconst { timerId, delay } = action.payload\n\t\t\t\tconst timer = state.entities[timerId]\n\n\t\t\t\ttimer.remainTime -= delay\n\t\t\t},\n\t\t\tprepare({ timerId, delay }) {\n\t\t\t\tif (!delay) {\n\t\t\t\t\tdelay = 1000\n\t\t\t\t}\n\t\t\t\treturn { payload: { timerId, delay } }\n\t\t\t},\n\t\t},\n\t\ttimerStatusUpdated(state, action) {\n\t\t\tconst { status } = action.payload\n\t\t\tstate.status = status\n\t\t},\n\t\ttimerSetNextTimer(state) {\n\t\t\tconst timers = Object.values(state.entities)\n\t\t\tfor (const [index, timer] of timers.entries()) {\n\t\t\t\tif (timer.remainTime > 0) {\n\t\t\t\t\tstate.activeTimerId = timer.id\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t\t// reset if the last timer is over\n\t\t\t\tif (index === timers.length - 1) {\n\t\t\t\t\tstate.status = TimerStatus.STOPPED\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\ttimerDelayUpdated(state, action) {\n\t\t\tconst { delay } = action.payload\n\t\t\tstate.delay = delay\n\t\t},\n\t\ttimerResetTimers(state) {\n\t\t\tstate.activeTimerId = null\n\t\t\tstate.status = TimerStatus.STOPPED\n\t\t\tObject.values(state.entities).forEach((timer) => {\n\t\t\t\ttimer.remainTime = calcTimerRemainTime({\n\t\t\t\t\tminute: timer.minute,\n\t\t\t\t\tsecond: timer.second,\n\t\t\t\t})\n\t\t\t})\n\t\t\tstate.loop.current = 1\n\t\t},\n\t\ttimerResetRemainTime(state) {\n\t\t\tObject.values(state.entities).forEach((timer) => {\n\t\t\t\ttimer.remainTime = calcTimerRemainTime({\n\t\t\t\t\tminute: timer.minute,\n\t\t\t\t\tsecond: timer.second,\n\t\t\t\t})\n\t\t\t})\n\t\t},\n\t\ttimerSetShowCountdown(state, action) {\n\t\t\tconst { showCountdown } = action.payload\n\t\t\tstate.showCountdown = showCountdown\n\t\t},\n\t\ttimerSetLoop(state, action) {\n\t\t\tconst { current, total } = action.payload\n\n\t\t\tif (current && isInteger(current)) {\n\t\t\t\tstate.loop.current = current\n\t\t\t}\n\t\t\tif (total && isInteger(total)) {\n\t\t\t\tstate.loop.total = total\n\t\t\t}\n\t\t},\n\t\ttimerToggledMute(state, action) {\n\t\t\tconst { muteType } = action.payload\n\n\t\t\tif (muteType === \"alarm\") {\n\t\t\t\tstate.mute.alarm = !state.mute.alarm\n\t\t\t}\n\t\t\tif (muteType === \"music\") {\n\t\t\t\tstate.mute.music = !state.mute.music\n\t\t\t}\n\t\t},\n\t},\n})\n\nexport default timersSlice.reducer\n\nexport const {\n\ttimersInitialized,\n\ttimerAdded,\n\ttimerDeleted,\n\ttimerSetLabel,\n\ttimerSetTime,\n\ttimerSetMusic,\n\ttimerDeductTime,\n\ttimerStatusUpdated,\n\ttimerSetNextTimer,\n\ttimerDelayUpdated,\n\ttimerResetTimers,\n\ttimerResetRemainTime,\n\ttimerSetShowCountdown,\n\ttimerSetLoop,\n\ttimerToggledMute,\n} = timersSlice.actions\n\nexport const {\n\tselectAll: selectTimers,\n\tselectById: selectTimerById,\n\tselectTotal,\n} = timersAdapter.getSelectors((state) => state.timers)\n\nexport const selectShowCountdown = (state) => state.timers.showCountdown\n\nexport const selectTimerDelay = (state) => state.timers.delay\n\nexport const selectActiveTimerId = (state) => state.timers.activeTimerId\n\nexport const selectTimerStatus = (state) => state.timers.status\n\nexport const selectLastTimerId = createSelector(\n\tselectTimers,\n\tselectTotal,\n\t(timers, total) => {\n\t\tconst lastTimer = Object.values(timers)[total - 1]\n\t\treturn lastTimer.id\n\t}\n)\n\nexport const selectTimerLoopCurrentCount = (state) => state.timers.loop.current\n\nexport const selectTimerLoopTotalCount = (state) => state.timers.loop.total\n\nexport const selectTimerIsMuted = (state) => state.timers.mute.music\n","import React from \"react\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport {\n\tselectTimerById,\n\ttimerSetTime,\n\ttimerSetLabel,\n\ttimerSetMusic,\n\ttimerDeleted,\n} from \"./timersSlice\"\nimport {\n\tBox,\n\tPaper,\n\tFormControl,\n\tInputLabel,\n\tmakeStyles,\n\tMenuItem,\n\tSelect,\n\tTextField,\n\tIconButton,\n} from \"@material-ui/core\"\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\"\n\nconst useStyles = makeStyles((theme) => ({\n\tmusicInput: {\n\t\tminWidth: 200,\n\t},\n\ttimerContainer: {\n\t\tborderRadius: 30,\n\t\tpadding: \"10px 20px\",\n\t\t[theme.breakpoints.up(\"sm\")]: {\n\t\t\tpadding: \"20px 40px\",\n\t\t},\n\t},\n\ttimerToolbar: {\n\t\tjustifyContent: \"center\",\n\t\t[theme.breakpoints.up(\"sm\")]: {\n\t\t\tjustifyContent: \"flex-start\",\n\t\t},\n\t},\n\tdeleteButton: {\n\t\topacity: 0.2,\n\t\tposition: \"absolute\",\n\t\ttop: 15,\n\t\tright: 20,\n\t\ttransition: \"opacity 0.5s ease\",\n\t\tzIndex: 2,\n\t\t\"&:hover\": {\n\t\t\topacity: 1,\n\t\t},\n\t},\n}))\n\nconst Timer = ({ id }) => {\n\tconst dispatch = useDispatch()\n\tconst classes = useStyles()\n\tconst timer = useSelector((state) => selectTimerById(state, id))\n\n\tconst handleTimeChange = (params) => {\n\t\tconst {\n\t\t\tevent: {\n\t\t\t\ttarget: { value },\n\t\t\t},\n\t\t\ttimeUnit,\n\t\t} = params\n\n\t\tdispatch(timerSetTime(timer.id, parseInt(value), timeUnit))\n\t}\n\n\tconst handleLabelChange = (e) =>\n\t\tdispatch(timerSetLabel({ timerId: timer.id, label: e.target.value }))\n\n\tconst handleMusicChange = (e) =>\n\t\tdispatch(timerSetMusic({ timerId: timer.id, music: e.target.value }))\n\n\tconst handleDeleteTimer = () => dispatch(timerDeleted(timer.id))\n\n\treturn (\n\t\t<Box my={2}>\n\t\t\t<Paper\n\t\t\t\televation={1}\n\t\t\t\tvariant=\"outlined\"\n\t\t\t\tclassName={classes.timerContainer}\n\t\t\t\tstyle={{ position: \"relative\" }}\n\t\t\t>\n\t\t\t\t<IconButton\n\t\t\t\t\tonClick={handleDeleteTimer}\n\t\t\t\t\tclassName={classes.deleteButton}\n\t\t\t\t\tsize=\"small\"\n\t\t\t\t>\n\t\t\t\t\t<HighlightOffIcon fontSize=\"small\" />\n\t\t\t\t</IconButton>\n\n\t\t\t\t<Box m={1} display=\"flex\" justifyContent=\"center\">\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tvalue={timer.label ?? \"\"}\n\t\t\t\t\t\tonChange={(e) => handleLabelChange(e)}\n\t\t\t\t\t\tinputProps={{ style: { textAlign: \"center\" } }}\n\t\t\t\t\t/>\n\t\t\t\t</Box>\n\n\t\t\t\t<Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\n\t\t\t\t\t<Box m={1}>\n\t\t\t\t\t\t<FormControl>\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tid={`timer-${id}-min`}\n\t\t\t\t\t\t\t\tlabel=\"Minute\"\n\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\tInputLabelProps={{\n\t\t\t\t\t\t\t\t\tshrink: true,\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tinputProps={{ min: 0, max: 59 }}\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\t\t\thandleTimeChange({ event: e, timeUnit: \"minute\" })\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tvalue={timer.minute}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t</Box>\n\n\t\t\t\t\t<Box m={1}>:</Box>\n\n\t\t\t\t\t<Box m={1}>\n\t\t\t\t\t\t<FormControl>\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tid={`timer-${id}-sec`}\n\t\t\t\t\t\t\t\tlabel=\"Second\"\n\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\tInputLabelProps={{\n\t\t\t\t\t\t\t\t\tshrink: true,\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tinputProps={{ min: 0, max: 59 }}\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\t\t\thandleTimeChange({ event: e, timeUnit: \"second\" })\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tvalue={timer.second}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t</Box>\n\t\t\t\t</Box>\n\n\t\t\t\t<Box display=\"flex\" className={classes.timerToolbar}>\n\t\t\t\t\t<FormControl>\n\t\t\t\t\t\t<InputLabel id={`timer-music-${timer.id}-label`}>\n\t\t\t\t\t\t\tTimer Music\n\t\t\t\t\t\t</InputLabel>\n\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\tlabelId={`timer-music-${timer.id}-label`}\n\t\t\t\t\t\t\tid={`timer-music-${timer.id}`}\n\t\t\t\t\t\t\tvalue={timer.music ?? \"\"}\n\t\t\t\t\t\t\tonChange={handleMusicChange}\n\t\t\t\t\t\t\tclassName={classes.musicInput}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<MenuItem value=\"\">No Music</MenuItem>\n\t\t\t\t\t\t\t<MenuItem value=\"Muay_Thai_Sarama_ROUND_1.mp3\">\n\t\t\t\t\t\t\t\tMuay Thai Music\n\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t</Select>\n\t\t\t\t\t</FormControl>\n\t\t\t\t</Box>\n\t\t\t</Paper>\n\t\t</Box>\n\t)\n}\n\nexport default Timer\n","import React from \"react\"\nimport Timer from \"./Timer\"\nimport { useSelector } from \"react-redux\"\nimport { selectTimers } from \"./timersSlice\"\n\nconst TimerList = () => {\n\tconst timers = useSelector((state) => selectTimers(state))\n\n\treturn (\n\t\t<main>\n\t\t\t{timers.map((timer) => (\n\t\t\t\t<Timer id={timer.id} key={timer.id} />\n\t\t\t))}\n\t\t</main>\n\t)\n}\n\nexport default TimerList\n","export default __webpack_public_path__ + \"static/media/Muay_Thai_Sarama_ROUND_1.d86445b7.mp3\";","import React, { useEffect, useRef } from \"react\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport {\n\tselectTimerById,\n\tselectActiveTimerId,\n\tselectTimerDelay,\n\ttimerDeductTime,\n\ttimerSetNextTimer,\n\tselectTimerStatus,\n\tselectLastTimerId,\n\ttimerStatusUpdated,\n\tselectTimerLoopCurrentCount,\n\tselectTimerLoopTotalCount,\n\ttimerSetLoop,\n\ttimerResetRemainTime,\n\tselectTimerIsMuted,\n} from \"./timersSlice\"\nimport useInterval from \"../../hooks/useInterval\"\nimport TimerStatus from \"./TimerStatus\"\nimport { convertTimeFormatForDisplay } from \"../../services/timerService\"\nimport muayThaiBgMusic from \"../../audio/Muay_Thai_Sarama_ROUND_1.mp3\"\nimport ReactHowler from \"react-howler\"\n\nimport { Box, Typography, makeStyles } from \"@material-ui/core\"\n\nconst useStyles = makeStyles({\n\tdigits: {\n\t\tmargin: 10,\n\t},\n\tmillisecond: {\n\t\tposition: \"absolute\",\n\t\tbottom: 5,\n\t\tright: -40,\n\t},\n\tmainDisplay: {\n\t\tposition: \"relative\",\n\t\twidth: \"fit-content\",\n\t\tmargin: \"0 auto\",\n\t},\n})\n\nconst TimerCountdown = ({ alarmPlayer }) => {\n\tconst dispatch = useDispatch()\n\tconst classes = useStyles()\n\tconst musicPlayer = useRef(null)\n\n\tconst activeTimerId = useSelector(selectActiveTimerId)\n\tconst timer = useSelector((state) => selectTimerById(state, activeTimerId))\n\tconst delay = useSelector((state) => selectTimerDelay(state))\n\tconst timerStatus = useSelector(selectTimerStatus)\n\tconst lastTimerId = useSelector(selectLastTimerId)\n\tconst loopCurrent = useSelector(selectTimerLoopCurrentCount)\n\tconst loopTotal = useSelector(selectTimerLoopTotalCount)\n\tconst isMuted = useSelector(selectTimerIsMuted)\n\n\tconst timePerUnit = convertTimeFormatForDisplay(timer.remainTime)\n\n\tconst showTimerDigits = (digit) => (digit < 10 ? \"0\" + digit : digit)\n\n\tuseInterval(\n\t\t() => {\n\t\t\tif (timer.remainTime > 0) {\n\t\t\t\tdispatch(timerDeductTime({ timerId: timer.id, delay }))\n\t\t\t} else {\n\t\t\t\talarmPlayer.current.play()\n\n\t\t\t\t/**\n\t\t\t\t * if it's the last timer, check if the loop count reaches total\n\t\t\t\t * if yes, update the status to be stopped\n\t\t\t\t * else dispatch count++ and set next timer\n\t\t\t\t */\n\n\t\t\t\tif (activeTimerId === lastTimerId) {\n\t\t\t\t\t// if loop count has reached the end\n\t\t\t\t\tif (loopCurrent < loopTotal) {\n\t\t\t\t\t\tdispatch(timerSetLoop({ current: loopCurrent + 1 }))\n\t\t\t\t\t\t// reset remain time of every timer\n\t\t\t\t\t\tdispatch(timerResetRemainTime())\n\t\t\t\t\t\tdispatch(timerSetNextTimer())\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdispatch(timerStatusUpdated({ status: TimerStatus.STOPPED }))\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tdispatch(timerSetNextTimer())\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\ttimerStatus === TimerStatus.RUNNING &&\n\t\t\tactiveTimerId &&\n\t\t\ttimer.id === activeTimerId\n\t\t\t? delay\n\t\t\t: null\n\t)\n\n\tuseEffect(() => {\n\t\tif (activeTimerId) {\n\t\t\t// play the music again once timer is changed\n\t\t\tmusicPlayer.current.seek(0)\n\t\t\tdispatch(timerStatusUpdated({ status: TimerStatus.RUNNING }))\n\t\t}\n\t}, [activeTimerId, dispatch])\n\n\tuseEffect(() => {\n\t\t// reset timers if status changed to STOPPED\n\t\tif (timerStatus === TimerStatus.STOPPED) {\n\t\t\tmusicPlayer.current.seek(0)\n\t\t}\n\t}, [timerStatus, dispatch])\n\n\treturn (\n\t\t<Box textAlign=\"center\" height=\"100%\" display=\"flex\" flexDirection=\"column\">\n\t\t\t<Typography variant=\"h4\" component=\"div\" style={{ marginTop: 10 }}>\n\t\t\t\tRound: {loopCurrent} / {loopTotal}\n\t\t\t</Typography>\n\t\t\t<Box\n\t\t\t\tdisplay=\"flex\"\n\t\t\t\tjustifyContent=\"center\"\n\t\t\t\tflexDirection=\"column\"\n\t\t\t\theight=\"100%\"\n\t\t\t>\n\t\t\t\t<Typography variant=\"h4\" component=\"div\" style={{ marginBottom: 10 }}>\n\t\t\t\t\t{timer.label}\n\t\t\t\t</Typography>\n\n\t\t\t\t<Box\n\t\t\t\t\tdisplay=\"flex\"\n\t\t\t\t\tjustifyContent=\"center\"\n\t\t\t\t\talignItems=\"center\"\n\t\t\t\t\tclassName={classes.mainDisplay}\n\t\t\t\t>\n\t\t\t\t\t<Typography\n\t\t\t\t\t\tvariant=\"h2\"\n\t\t\t\t\t\tcomponent=\"div\"\n\t\t\t\t\t\tclassName={`${classes.digits}`}\n\t\t\t\t\t>\n\t\t\t\t\t\t{showTimerDigits(timePerUnit.minute)}\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Typography variant=\"h3\">:</Typography>\n\t\t\t\t\t<Typography\n\t\t\t\t\t\tvariant=\"h2\"\n\t\t\t\t\t\tcomponent=\"div\"\n\t\t\t\t\t\tclassName={`${classes.digits}`}\n\t\t\t\t\t>\n\t\t\t\t\t\t{showTimerDigits(timePerUnit.second)}\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Typography\n\t\t\t\t\t\tvariant=\"h5\"\n\t\t\t\t\t\tclassName={`${classes.millisecond} ${classes.digits}`}\n\t\t\t\t\t>\n\t\t\t\t\t\t{showTimerDigits(timePerUnit.millisec)}\n\t\t\t\t\t</Typography>\n\t\t\t\t</Box>\n\t\t\t</Box>\n\t\t\t<ReactHowler\n\t\t\t\tsrc={muayThaiBgMusic}\n\t\t\t\tplaying={timerStatus === TimerStatus.RUNNING && timer.music !== \"\"}\n\t\t\t\tmute={isMuted}\n\t\t\t\tref={musicPlayer}\n\t\t\t\tloop={true}\n\t\t\t\thtml5={true}\n\t\t\t/>\n\t\t</Box>\n\t)\n}\n\nexport default TimerCountdown\n","import { useEffect, useRef } from \"react\"\n\nexport default function useInterval(callback, delay) {\n\tconst savedCallback = useRef()\n\n\t// Remember the latest callback.\n\tuseEffect(() => {\n\t\tsavedCallback.current = callback\n\t}, [callback])\n\n\t// Set up the interval.\n\tuseEffect(() => {\n\t\tfunction tick() {\n\t\t\tsavedCallback.current()\n\t\t}\n\t\tif (delay !== null) {\n\t\t\tlet id = setInterval(tick, delay)\n\t\t\treturn () => clearInterval(id)\n\t\t}\n\t}, [delay])\n}\n","export default __webpack_public_path__ + \"static/media/timesup.e69d4f91.mp3\";","import React, { useRef } from \"react\"\nimport TimerList from \"./TimerList\"\nimport TimerCountdown from \"./TimerCountdown\"\nimport { useSelector } from \"react-redux\"\nimport { selectShowCountdown, selectTimerStatus } from \"./timersSlice\"\nimport TimerStatus from \"./TimerStatus\"\nimport timesUpSfx from \"../../audio/timesup.mp3\"\nimport ReactHowler from \"react-howler\"\nimport { Box, Container, makeStyles } from \"@material-ui/core\"\n\nconst useStyles = makeStyles({\n\tmainSection: {\n\t\toverflowY: \"scroll\",\n\t},\n})\n\nconst TimerMain = ({ heightOfMainSection }) => {\n\tconst classes = useStyles()\n\n\tconst timerStatus = useSelector(selectTimerStatus)\n\tconst showCountdown = useSelector(selectShowCountdown)\n\tconst alarmPlayer = useRef(null)\n\n\tif (timerStatus === TimerStatus.RUNNING || showCountdown) {\n\t\treturn (\n\t\t\t<Container maxWidth=\"sm\" style={{ height: heightOfMainSection }}>\n\t\t\t\t<TimerCountdown alarmPlayer={alarmPlayer}></TimerCountdown>\n\t\t\t\t<ReactHowler\n\t\t\t\t\tsrc={timesUpSfx}\n\t\t\t\t\tplaying={false}\n\t\t\t\t\thtml5={true}\n\t\t\t\t\tref={alarmPlayer}\n\t\t\t\t/>\n\t\t\t</Container>\n\t\t)\n\t} else {\n\t\treturn (\n\t\t\t<Box\n\t\t\t\tstyle={{ height: heightOfMainSection }}\n\t\t\t\tclassName={classes.mainSection}\n\t\t\t>\n\t\t\t\t<Container maxWidth=\"sm\">\n\t\t\t\t\t<TimerList />\n\t\t\t\t</Container>\n\t\t\t</Box>\n\t\t)\n\t}\n}\n\nexport default TimerMain\n","import React, { useEffect } from \"react\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport {\n\ttimerStatusUpdated,\n\tselectTimerDelay,\n\ttimerDelayUpdated,\n\tselectActiveTimerId,\n\ttimerSetNextTimer,\n\tselectTimerStatus,\n\ttimerResetTimers,\n\ttimerSetShowCountdown,\n\tselectTimerLoopTotalCount,\n\ttimerSetLoop,\n\ttimerToggledMute,\n\tselectTimerIsMuted,\n\ttimerAdded,\n\tselectShowCountdown,\n} from \"../features/timers/timersSlice\"\nimport TimerStatus from \"../features/timers/TimerStatus\"\n\nimport {\n\tButton,\n\tIconButton,\n\tBox,\n\tContainer,\n\tPaper,\n\tInputLabel,\n\tMenuItem,\n\tFormControl,\n\tmakeStyles,\n\tTextField,\n} from \"@material-ui/core\"\nimport VolumeOffRoundedIcon from \"@material-ui/icons/VolumeOffRounded\"\nimport VolumeUpRoundedIcon from \"@material-ui/icons/VolumeUpRounded\"\nimport AddCircleSharpIcon from \"@material-ui/icons/AddCircleSharp\"\nimport { Select } from \"@material-ui/core\"\nimport { createTimer } from \"../services/timerService\"\n\nconst useStyles = makeStyles((theme) => ({\n\tformControl: {\n\t\twidth: 125,\n\t},\n\tcontrolPanelContainer: {\n\t\tposition: \"relative\",\n\t\tpadding: theme.spacing(1),\n\t\t[theme.breakpoints.up(\"sm\")]: {\n\t\t\tpadding: theme.spacing(3),\n\t\t},\n\t},\n\taddButton: {\n\t\tposition: \"absolute\",\n\t\ttop: 0,\n\t\tright: 0,\n\t\tzIndex: 2,\n\t\t[theme.breakpoints.up(\"sm\")]: {\n\t\t\tright: 50,\n\t\t},\n\t},\n\ttoolbar: {\n\t\tmarginTop: 16,\n\t},\n}))\n\nconst ControlPanel = ({ setHeightOfControlPanel }) => {\n\tconst classes = useStyles()\n\tconst dispatch = useDispatch()\n\n\tconst delay = useSelector(selectTimerDelay)\n\tconst timerStatus = useSelector(selectTimerStatus)\n\tconst activeTimerId = useSelector(selectActiveTimerId)\n\tconst loopTotal = useSelector(selectTimerLoopTotalCount)\n\tconst isMuted = useSelector(selectTimerIsMuted)\n\tconst showCountdown = useSelector(selectShowCountdown)\n\n\tconst handleStart = () => {\n\t\tif (!activeTimerId) {\n\t\t\tdispatch(timerSetNextTimer())\n\t\t}\n\t\tconst newStatus =\n\t\t\ttimerStatus === TimerStatus.RUNNING\n\t\t\t\t? TimerStatus.PAUSED\n\t\t\t\t: TimerStatus.RUNNING\n\t\tdispatch(\n\t\t\ttimerStatusUpdated({\n\t\t\t\tstatus: newStatus,\n\t\t\t})\n\t\t)\n\t\tdispatch(timerSetShowCountdown({ showCountdown: true }))\n\t}\n\n\tconst handleDelayChange = (e) =>\n\t\tdispatch(timerDelayUpdated({ delay: e.target.value }))\n\n\tconst handleReset = () => {\n\t\tdispatch(timerSetShowCountdown({ showCountdown: false }))\n\t\tdispatch(timerResetTimers())\n\t}\n\n\tconst handleToggleMusicMuted = () =>\n\t\tdispatch(timerToggledMute({ muteType: \"music\" }))\n\n\tconst handleLoopChanged = (e) => {\n\t\tdispatch(timerSetLoop({ total: parseInt(e.target.value) }))\n\t}\n\n\tconst handleAddTimer = () => dispatch(timerAdded(createTimer()))\n\n\t// get the height of control panel to render the height of main section\n\tuseEffect(() => {\n\t\tconst height = document.getElementById(\"control-panel\").clientHeight\n\t\tsetHeightOfControlPanel(height)\n\t})\n\n\treturn (\n\t\t<Paper elevation={3} id=\"control-panel\">\n\t\t\t<Container maxWidth=\"md\" className={classes.controlPanelContainer}>\n\t\t\t\t<IconButton\n\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\tonClick={handleAddTimer}\n\t\t\t\t\tdisabled={showCountdown}\n\t\t\t\t\tclassName={classes.addButton}\n\t\t\t\t>\n\t\t\t\t\t<AddCircleSharpIcon />\n\t\t\t\t</IconButton>\n\n\t\t\t\t<Box display=\"flex\" justifyContent=\"center\">\n\t\t\t\t\t<Box m={1}>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tonClick={handleStart}\n\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{timerStatus === TimerStatus.RUNNING ? \"Pause\" : \"Start\"}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Box>\n\t\t\t\t\t<Box m={1}>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tonClick={handleReset}\n\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tReset\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Box>\n\t\t\t\t</Box>\n\n\t\t\t\t<Box\n\t\t\t\t\tdisplay=\"flex\"\n\t\t\t\t\tjustifyContent=\"space-around\"\n\t\t\t\t\tclassName={classes.toolbar}\n\t\t\t\t>\n\t\t\t\t\t<IconButton onClick={handleToggleMusicMuted}>\n\t\t\t\t\t\t{isMuted ? <VolumeOffRoundedIcon /> : <VolumeUpRoundedIcon />}\n\t\t\t\t\t</IconButton>\n\n\t\t\t\t\t<FormControl className={classes.formControl}>\n\t\t\t\t\t\t<InputLabel>Refresh rate</InputLabel>\n\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\tid=\"updateFreq\"\n\t\t\t\t\t\t\tvalue={delay}\n\t\t\t\t\t\t\tonChange={(e) => handleDelayChange(e)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<MenuItem value={10}>10</MenuItem>\n\t\t\t\t\t\t\t<MenuItem value={100}>100</MenuItem>\n\t\t\t\t\t\t\t<MenuItem value={1000}>1000</MenuItem>\n\t\t\t\t\t\t</Select>\n\t\t\t\t\t</FormControl>\n\n\t\t\t\t\t<FormControl className={classes.formControl}>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tid=\"loop\"\n\t\t\t\t\t\t\tlabel=\"No. of rounds\"\n\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\tvalue={loopTotal}\n\t\t\t\t\t\t\tonChange={(e) => handleLoopChanged(e)}\n\t\t\t\t\t\t\tdisabled={showCountdown}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</FormControl>\n\t\t\t\t</Box>\n\t\t\t</Container>\n\t\t</Paper>\n\t)\n}\n\nexport default ControlPanel\n","import React, { useEffect, useState } from \"react\"\nimport TimerMain from \"../features/timers/TimerMain\"\nimport ControlPanel from \"./ControlPanel\"\nimport { Box, makeStyles } from \"@material-ui/core\"\n\nconst useStyles = makeStyles({\n\tapp: {\n\t\toverflow: \"hidden\",\n\t},\n\tappBar: {\n\t\tposition: \"fixed\",\n\t\tleft: 0,\n\t\tbottom: 0,\n\t\tborderRadius: \"5px 5px 0 0\",\n\t\tzIndex: 1100,\n\t\tboxSizing: \"border-box\",\n\t\twidth: \"100%\",\n\t},\n})\n\nfunction debounce(fn, ms) {\n\tlet timer = null\n\n\treturn () => {\n\t\tclearTimeout(timer)\n\n\t\ttimer = setTimeout(() => {\n\t\t\ttimer = null\n\t\t\tfn.apply(this, arguments)\n\t\t}, ms)\n\t}\n}\n\nconst TimerApp = () => {\n\tconst classes = useStyles()\n\tconst [heightOfControlPanel, setHeightOfControlPanel] = useState(0)\n\tconst [heightOfMainSection, setHeightOfMainSection] = useState(0)\n\n\tconst setHeight = () => {\n\t\tconst heightOfMainSection = window.innerHeight - heightOfControlPanel\n\t\t// console.log(\"set height is called\", window.innerHeight, heightOfMainSection)\n\t\tsetHeightOfMainSection(heightOfMainSection)\n\t}\n\n\tuseEffect(() => {\n\t\tsetHeight()\n\t}, [heightOfControlPanel])\n\n\tuseEffect(() => {\n\t\tconst debouncedSetHeight = debounce(setHeight, 1000)\n\t\twindow.addEventListener(\"resize\", debouncedSetHeight)\n\n\t\treturn () => {\n\t\t\twindow.removeEventListener(\"resize\", debouncedSetHeight)\n\t\t}\n\t})\n\n\treturn (\n\t\t<Box className={`App ${classes.app}`}>\n\t\t\t<Box className={classes.mainSection}>\n\t\t\t\t<TimerMain heightOfMainSection={heightOfMainSection} />\n\t\t\t</Box>\n\n\t\t\t<Box className={classes.appBar}>\n\t\t\t\t<ControlPanel setHeightOfControlPanel={setHeightOfControlPanel} />\n\t\t\t</Box>\n\t\t</Box>\n\t)\n}\n\nexport default TimerApp\n","import { unstable_createMuiStrictModeTheme as createMuiTheme } from \"@material-ui/core/styles\"\nimport blue from \"@material-ui/core/colors/blue\"\n\nconst theme = createMuiTheme({\n\tpalette: {\n\t\tprimary: {\n\t\t\tmain: blue[500],\n\t\t},\n\t},\n})\n\nexport default theme\n","import React from \"react\"\nimport \"./styles/App.scss\"\nimport TimerApp from \"./components/TimerApp\"\nimport theme from \"./theme\"\nimport { ThemeProvider } from \"@material-ui/core\"\n\nconst App = () => (\n\t<ThemeProvider theme={theme}>\n\t\t<TimerApp />\n\t</ThemeProvider>\n)\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === \"localhost\" ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === \"[::1]\" ||\n\t\t// 127.0.0.0/8 are considered localhost for IPv4.\n\t\twindow.location.hostname.match(\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n\t\t)\n)\n\nexport function register(config) {\n\tif (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn\n\t\t}\n\n\t\twindow.addEventListener(\"load\", () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config)\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\"This web app is being served cache-first by a service \" +\n\t\t\t\t\t\t\t\"worker. To learn more, visit https://cra.link/PWA\"\n\t\t\t\t\t)\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config)\n\t\t\t}\n\t\t})\n\t}\n}\n\nfunction registerValidSW(swUrl, config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then((registration) => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === \"installed\") {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t\"New content is available and will be used when all \" +\n\t\t\t\t\t\t\t\t\t\"tabs for this page are closed. See https://cra.link/PWA.\"\n\t\t\t\t\t\t\t)\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log(\"Content is cached for offline use.\")\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.error(\"Error during service worker registration:\", error)\n\t\t})\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl, {\n\t\theaders: { \"Service-Worker\": \"script\" },\n\t})\n\t\t.then((response) => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get(\"content-type\")\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType != null && contentType.indexOf(\"javascript\") === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload()\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config)\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t\"No internet connection found. App is running in offline mode.\"\n\t\t\t)\n\t\t})\n}\n\nexport function unregister() {\n\tif (\"serviceWorker\" in navigator) {\n\t\tnavigator.serviceWorker.ready\n\t\t\t.then((registration) => {\n\t\t\t\tregistration.unregister()\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.error(error.message)\n\t\t\t})\n\t}\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from \"@reduxjs/toolkit\"\nimport timersReducer from \"./features/timers/timersSlice\"\n\nconst store = configureStore({\n\treducer: {\n\t\ttimers: timersReducer,\n\t},\n})\n\nexport default store\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\"\nimport reportWebVitals from \"./reportWebVitals\"\n\nimport store from \"./store\"\nimport { Provider } from \"react-redux\"\nimport { timersInitialized } from \"./features/timers/timersSlice\"\nimport { initTimers } from \"./services/timerService\"\n\nstore.dispatch(timersInitialized(initTimers()))\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<App />\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register()\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}