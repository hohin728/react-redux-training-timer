{"version":3,"sources":["features/timers/TimerStatus.ts","hooks/hooks.ts","services/timerService.ts","components/TimeInputField.tsx","features/timers/TimeUnit.ts","services/localStorage.ts","features/timers/timersSlice.ts","features/timers/Timer.tsx","features/timers/TimerList.tsx","features/timers/TimerCountdown.tsx","hooks/useInterval.ts","audio/timesup.mp3","features/timers/TimerMain.tsx","features/settings/settingsSlice.ts","components/ControlPanel.tsx","features/settings/Settings.tsx","audio/Muay_Thai_Sarama_ROUND_1.mp3","components/MusicPlayer.tsx","components/TimerApp.tsx","App.tsx","serviceWorkerRegistration.js","reportWebVitals.js","middleware/stateReserver.ts","store.ts","index.tsx"],"names":["TimerStatus","useAppDispatch","useDispatch","useAppSelector","useSelector","calcTimerRemainTime","params","minute","second","isInteger","createTimer","timer","id","uuidv4","label","undefined","remainTime","music","isValidTimeInput","value","getInvalidTimeInputMessage","useStyles","makeStyles","timerInput","minWidth","TimeInputField","handleChange","timeUnit","styles","classes","TextField","style","type","InputLabelProps","shrink","variant","inputProps","min","max","inputMode","className","onChange","e","event","error","TimeUnit","saveState","throttle","timersState","timers","settingsState","settings","totalLoop","loop","total","ids","newEntities","cloneDeep","entities","Object","values","forEach","entity","localStorage","setItem","JSON","stringify","timersAdapter","createEntityAdapter","timersSlice","createSlice","name","initialState","loadedState","savedStateJson","getItem","savedState","parse","savedTotalLoop","savedTimers","err","loadTimersState","state","showCountdown","delay","activeTimerId","activeTimerMusic","status","STOPPED","current","mute","alarm","newTimer","getInitialState","reducers","timersInitialized","addMany","timerAdded","addOne","timerDeleted","removeOne","timerSetLabel","action","payload","timerId","timerSetTime","reducer","prepare","timerSetMusic","timerDeductTime","timerStatusUpdated","timerSetNextTimer","entries","index","length","timerDelayUpdated","timerResetTimers","timerResetRemainTime","timerSetShowCountdown","timerSetCurrentLoop","timerSetTotalLoop","timerToggledMute","muteType","actions","getSelectors","selectTimers","selectAll","selectTimerById","selectById","selectTotal","selectShowCountdown","selectTimerDelay","selectActiveTimerId","selectTimerStatus","selectLastTimerId","createSelector","selectTimerLoopCurrentCount","selectTimerLoopTotalCount","selectTimerIsMuted","selectActiveTimerMusic","theme","musicInput","timerContainer","borderRadius","padding","breakpoints","up","spacing","timerToolbar","justifyContent","deleteButton","opacity","position","top","right","transition","zIndex","Timer","dispatch","handleTimeChange","target","parseInt","Paper","IconButton","onClick","size","fontSize","Box","m","display","textAlign","placeholder","alignItems","MINUTE","SECOND","FormControl","InputLabel","Select","labelId","MenuItem","TimerList","map","digits","margin","millisecond","bottom","mainDisplay","width","TimerCountdown","convertMillisec","alarmPlayer","timerStatus","lastTimerId","loopCurrent","loopTotal","timePerUnit","millisec","Math","floor","showTimerDigits","digit","toString","callback","savedCallback","useRef","useEffect","setInterval","clearInterval","useInterval","howler","play","RUNNING","height","flexDirection","Typography","component","marginTop","marginBottom","mainSection","overflowY","TimerMain","heightOfMainSection","Container","maxWidth","src","timesUpSfx","playing","html5","ref","settingsSlice","loadSettingsState","systemPrefersDark","window","matchMedia","matches","darkMode","defaultTime","toggleDarkMode","setDefaultTime","Number","selectIsDarkMode","selectDefaultMinute","selectDefaultSecond","formControl","controlPanelContainer","addButton","toolbar","ControlPanel","setHeightOfControlPanel","handleModalStatus","isMuted","defaultMinute","defaultSecond","controlPanelElem","document","getElementById","clientHeight","elevation","disabled","color","Button","newStatus","PAUSED","isNaN","Settings","open","handleOpen","isDarkMode","Dialog","onClose","fullWidth","DialogTitle","marginLeft","DialogContent","paddingBottom","Grid","container","item","xs","newDelay","handleDelayChange","FormControlLabel","control","Switch","checked","marginRight","MusicPlayer","musicPlayer","seek","muayThaiBgMusic","app","overflow","appBar","left","boxSizing","TimerApp","useState","heightOfControlPanel","setHeightOfMainSection","modalIsOpen","openModal","setHeight","innerHeight","useCallback","addEventListener","removeEventListener","App","React","useMemo","createMuiTheme","palette","primary","main","blue","ThemeProvider","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","timersActionsToReserve","settingsActionsToReserve","reserver","store","next","currentAction","result","includes","getState","configureStore","timersReducer","settingsReducer","middleware","getDefaultMiddleware","concat","ReactDOM","render","StrictMode","URL","process","href","origin","fetch","headers","response","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.21995109.chunk.js","sourcesContent":["enum TimerStatus {\r\n\tRUNNING = \"RUNNING\",\r\n\tPAUSED = \"PAUSED\",\r\n\tSTOPPED = \"STOPPED\",\r\n}\r\n\r\nexport default TimerStatus\r\n","import { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\"\r\nimport { RootState, AppDispatch } from \"../types/redux\"\r\n\r\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector\r\n","import { isInteger } from \"lodash\"\r\nimport { v4 as uuidv4 } from \"uuid\"\r\nimport TimerType, { TimerInputType, SavingTimeType } from \"../types/Timer\"\r\n\r\n// default time when user's preference is not found\r\nexport const defaultMinuteIfNotSaved = 1\r\nexport const defaultSecondIfNotSaved = 30\r\n\r\nexport const calcTimerRemainTime = (params: TimerInputType): number => {\r\n\tconst { minute, second } = params\r\n\r\n\tif (\r\n\t\tisInteger(minute) &&\r\n\t\tisInteger(second) &&\r\n\t\tminute !== \"\" &&\r\n\t\tsecond !== \"\"\r\n\t) {\r\n\t\treturn (minute * 60 + second) * 1000\r\n\t}\r\n\treturn 0\r\n}\r\n\r\nexport const createTimer = (params?: SavingTimeType): TimerType => {\r\n\tconst id = params && params.id ? params.id : uuidv4()\r\n\tconst timer: TimerType = {\r\n\t\tid: id,\r\n\t\tlabel: params && params.label ? params.label : \"\",\r\n\t\tminute:\r\n\t\t\tparams !== undefined && params.minute !== undefined\r\n\t\t\t\t? params.minute\r\n\t\t\t\t: defaultMinuteIfNotSaved,\r\n\t\tsecond:\r\n\t\t\tparams !== undefined && params.second !== undefined\r\n\t\t\t\t? params.second\r\n\t\t\t\t: defaultSecondIfNotSaved,\r\n\t\tremainTime: 0,\r\n\t\tmusic:\r\n\t\t\tparams && params.music ? params.music : \"Muay_Thai_Sarama_ROUND_1.mp3\",\r\n\t}\r\n\ttimer.remainTime = calcTimerRemainTime({\r\n\t\tminute: timer.minute,\r\n\t\tsecond: timer.second,\r\n\t})\r\n\r\n\treturn timer\r\n}\r\n\r\nexport const convertTimeFormatForDisplay = (\r\n\tconvertMillisec: number\r\n): {\r\n\tmillisec: number\r\n\tsecond: number\r\n\tminute: number\r\n} => {\r\n\tif (!isInteger(convertMillisec) || convertMillisec <= 0) {\r\n\t\treturn {\r\n\t\t\tmillisec: 0,\r\n\t\t\tsecond: 0,\r\n\t\t\tminute: 0,\r\n\t\t}\r\n\t}\r\n\r\n\tconst millisec = (convertMillisec % 1000) / 10\r\n\tconst second = Math.floor(convertMillisec / 1000) % 60\r\n\tconst minute = Math.floor(convertMillisec / 1000 / 60) % 60\r\n\r\n\treturn {\r\n\t\tmillisec,\r\n\t\tsecond,\r\n\t\tminute,\r\n\t}\r\n}\r\n\r\nexport const getInvalidTimeInputMessage = ({\r\n\tvalue,\r\n}: {\r\n\tvalue: number\r\n}): string => {\r\n\tif (value < 0 || value > 59) {\r\n\t\t// console.log(\"Time value must be between 0 and 59\")\r\n\t\treturn \"Time value must be between 0 and 59\"\r\n\t}\r\n\treturn \"\"\r\n}\r\n\r\nexport const isValidTimeInput = ({ value }: { value: number }): boolean =>\r\n\tgetInvalidTimeInputMessage({ value }) === \"\"\r\n","import React from \"react\"\r\nimport { isValidTimeInput } from \"../services/timerService\"\r\n\r\nimport { TextField, makeStyles } from \"@material-ui/core\"\r\nimport TimeUnit from \"../features/timers/TimeUnit\"\r\n\r\nconst useStyles = makeStyles({\r\n\ttimerInput: {\r\n\t\tminWidth: 60,\r\n\t},\r\n})\r\n\r\ntype Props = {\r\n\tid: string\r\n\tlabel: string\r\n\thandleChange: ({\r\n\t\tevent,\r\n\t\ttimeUnit,\r\n\t}: {\r\n\t\tevent: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n\t\ttimeUnit: TimeUnit\r\n\t}) => void\r\n\tvalue: number | \"\"\r\n\ttimeUnit: TimeUnit\r\n\tstyles?: {}\r\n}\r\n\r\nconst TimeInputField = ({\r\n\tid,\r\n\tlabel,\r\n\thandleChange,\r\n\tvalue,\r\n\ttimeUnit,\r\n\tstyles,\r\n}: Props) => {\r\n\tconst classes = useStyles()\r\n\r\n\tconst displayError = () => {\r\n\t\tif (value === \"\") {\r\n\t\t\treturn true\r\n\t\t}\r\n\t\treturn !isValidTimeInput({\r\n\t\t\tvalue,\r\n\t\t})\r\n\t}\r\n\r\n\treturn (\r\n\t\t<TextField\r\n\t\t\tid={id}\r\n\t\t\tlabel={label}\r\n\t\t\tstyle={styles}\r\n\t\t\ttype=\"number\"\r\n\t\t\tInputLabelProps={{\r\n\t\t\t\tshrink: true,\r\n\t\t\t}}\r\n\t\t\tvariant=\"outlined\"\r\n\t\t\tinputProps={{\r\n\t\t\t\tmin: 0,\r\n\t\t\t\tmax: 59,\r\n\t\t\t\tinputMode: \"numeric\",\r\n\t\t\t\tclassName: classes.timerInput,\r\n\t\t\t}}\r\n\t\t\tonChange={(e) => handleChange({ event: e, timeUnit })}\r\n\t\t\tvalue={value}\r\n\t\t\terror={displayError()}\r\n\t\t/>\r\n\t)\r\n}\r\n\r\nexport default TimeInputField\r\n","enum TimeUnit {\r\n\tMINUTE = \"minute\",\r\n\tSECOND = \"second\",\r\n}\r\n\r\nexport default TimeUnit\r\n","import { calcTimerRemainTime } from \"./timerService\"\r\nimport { cloneDeep, throttle } from \"lodash\"\r\nimport TimerType, { SavedTimerType } from \"../types/Timer\"\r\nimport { Dictionary } from \"@reduxjs/toolkit\"\r\n\r\nexport const loadTimersState = ():\r\n\t| undefined\r\n\t| {\r\n\t\t\tids: string[]\r\n\t\t\tentities: Dictionary<TimerType>\r\n\t\t\ttotalLoop: number\r\n\t  } => {\r\n\ttry {\r\n\t\tconst savedStateJson = localStorage.getItem(\"timers\")\r\n\r\n\t\tif (savedStateJson === null) {\r\n\t\t\treturn undefined\r\n\t\t}\r\n\r\n\t\tconst savedState = JSON.parse(savedStateJson)\r\n\t\tconst savedTotalLoop =\r\n\t\t\tsavedState.totalLoop !== \"\" ? savedState.totalLoop : 1\r\n\r\n\t\tconst savedTimers = savedState.entities\r\n\r\n\t\tconst timers: TimerType[] = Object.values(savedTimers)\r\n\t\t// calculate remain time\r\n\t\ttimers.forEach((timer) => {\r\n\t\t\ttimer.remainTime = calcTimerRemainTime({\r\n\t\t\t\tminute: timer.minute,\r\n\t\t\t\tsecond: timer.second,\r\n\t\t\t})\r\n\t\t})\r\n\r\n\t\treturn {\r\n\t\t\tids: savedState.ids,\r\n\t\t\tentities: savedTimers,\r\n\t\t\ttotalLoop: savedTotalLoop,\r\n\t\t}\r\n\t} catch (err) {\r\n\t\treturn undefined\r\n\t}\r\n}\r\n\r\nexport const loadSettingsState = ():\r\n\t| undefined\r\n\t| {\r\n\t\t\tdarkMode: boolean\r\n\t\t\tdefaultTime: {\r\n\t\t\t\tminute: number\r\n\t\t\t\tsecond: number\r\n\t\t\t}\r\n\t  } => {\r\n\ttry {\r\n\t\tconst savedStateJson = localStorage.getItem(\"settings\")\r\n\r\n\t\tif (savedStateJson === null) {\r\n\t\t\treturn undefined\r\n\t\t}\r\n\r\n\t\tconst savedState = JSON.parse(savedStateJson)\r\n\r\n\t\treturn savedState\r\n\t} catch (err) {\r\n\t\treturn undefined\r\n\t}\r\n}\r\n\r\n// Add 2 seconds throttle when saving state to local storage\r\nexport const saveState = throttle(\r\n\t({ timers: timersState, settings: settingsState }) => {\r\n\t\ttry {\r\n\t\t\tif (timersState) {\r\n\t\t\t\tconst totalLoop = timersState.loop.total ?? 1\r\n\t\t\t\tconst ids = timersState.ids\r\n\t\t\t\tconst newEntities = cloneDeep(timersState.entities)\r\n\r\n\t\t\t\tconst newEntitiesItems: SavedTimerType[] = Object.values(newEntities)\r\n\r\n\t\t\t\tnewEntitiesItems.forEach((entity) => {\r\n\t\t\t\t\tif (entity.remainTime) {\r\n\t\t\t\t\t\tdelete entity.remainTime\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\r\n\t\t\t\tconst saveState = {\r\n\t\t\t\t\tids,\r\n\t\t\t\t\tentities: newEntities,\r\n\t\t\t\t\ttotalLoop,\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlocalStorage.setItem(\"timers\", JSON.stringify(saveState))\r\n\t\t\t}\r\n\r\n\t\t\tif (settingsState) {\r\n\t\t\t\tlocalStorage.setItem(\"settings\", JSON.stringify(settingsState))\r\n\t\t\t}\r\n\t\t} catch {\r\n\t\t\t// ignore write errors\r\n\t\t}\r\n\t},\r\n\t2000\r\n)\r\n","import {\r\n\tcreateEntityAdapter,\r\n\tcreateSelector,\r\n\tcreateSlice,\r\n} from \"@reduxjs/toolkit\"\r\nimport {\r\n\tcreateTimer,\r\n\tcalcTimerRemainTime,\r\n\tisValidTimeInput,\r\n} from \"../../services/timerService\"\r\nimport TimerStatus from \"./TimerStatus\"\r\nimport { loadTimersState } from \"../../services/localStorage\"\r\nimport TimerType, { TimersStateType } from \"../../types/Timer\"\r\nimport { PayloadAction } from \"@reduxjs/toolkit\"\r\nimport TimeUnit from \"./TimeUnit\"\r\nimport { RootState } from \"../../types/redux\"\r\n\r\nconst timersAdapter = createEntityAdapter<TimerType>()\r\n\r\nconst getInitialState = () => {\r\n\tconst loadedState = loadTimersState()\r\n\r\n\tlet state: TimersStateType = {\r\n\t\tshowCountdown: false,\r\n\t\tdelay: 1000,\r\n\t\tactiveTimerId: null,\r\n\t\tactiveTimerMusic: \"\",\r\n\t\tstatus: TimerStatus.STOPPED,\r\n\t\tloop: {\r\n\t\t\tcurrent: 1,\r\n\t\t\ttotal: 1,\r\n\t\t},\r\n\t\tmute: {\r\n\t\t\talarm: false,\r\n\t\t\tmusic: false,\r\n\t\t},\r\n\t\tids: [],\r\n\t\tentities: {},\r\n\t}\r\n\r\n\tif (\r\n\t\tloadedState &&\r\n\t\tloadedState.entities &&\r\n\t\tloadedState.ids &&\r\n\t\tloadedState.totalLoop\r\n\t) {\r\n\t\t// read timers from local storage\r\n\t\tstate = {\r\n\t\t\t...state,\r\n\t\t\tentities: loadedState.entities,\r\n\t\t\tids: loadedState.ids,\r\n\t\t\tloop: {\r\n\t\t\t\t...state.loop,\r\n\t\t\t\ttotal: loadedState.totalLoop,\r\n\t\t\t},\r\n\t\t}\r\n\t} else {\r\n\t\t// create a new timer\r\n\t\tconst newTimer = createTimer()\r\n\r\n\t\tstate = {\r\n\t\t\t...state,\r\n\t\t\tids: [...state.ids, newTimer.id],\r\n\t\t\tentities: {\r\n\t\t\t\t...state.entities,\r\n\t\t\t\t[newTimer.id]: newTimer,\r\n\t\t\t},\r\n\t\t}\r\n\t}\r\n\r\n\treturn timersAdapter.getInitialState(state)\r\n}\r\n\r\nconst timersSlice = createSlice({\r\n\tname: \"timers\",\r\n\tinitialState: getInitialState(),\r\n\treducers: {\r\n\t\ttimersInitialized: timersAdapter.addMany,\r\n\t\ttimerAdded: timersAdapter.addOne,\r\n\t\ttimerDeleted: timersAdapter.removeOne,\r\n\t\ttimerSetLabel(\r\n\t\t\tstate,\r\n\t\t\taction: PayloadAction<{ timerId: string; label: string }>\r\n\t\t) {\r\n\t\t\tconst { timerId, label } = action.payload\r\n\t\t\tconst timer = state.entities[timerId]\r\n\r\n\t\t\tif (timer) {\r\n\t\t\t\ttimer.label = label\r\n\t\t\t}\r\n\t\t},\r\n\t\ttimerSetTime: {\r\n\t\t\treducer(\r\n\t\t\t\tstate,\r\n\t\t\t\taction: PayloadAction<{\r\n\t\t\t\t\ttimerId: string\r\n\t\t\t\t\tvalue: number | \"\"\r\n\t\t\t\t\ttimeUnit: TimeUnit\r\n\t\t\t\t}>\r\n\t\t\t) {\r\n\t\t\t\tconst { timerId, value, timeUnit } = action.payload\r\n\t\t\t\tconst timer = state.entities[timerId]\r\n\r\n\t\t\t\tif (timer) {\r\n\t\t\t\t\ttimer[timeUnit] = value\r\n\r\n\t\t\t\t\tif (timer.minute !== \"\" && timer.second !== \"\" && value !== \"\") {\r\n\t\t\t\t\t\ttimer.remainTime = isValidTimeInput({ value })\r\n\t\t\t\t\t\t\t? (timer.minute * 60 + timer.second) * 1000\r\n\t\t\t\t\t\t\t: 0\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tprepare(timerId, value, timeUnit) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tpayload: { timerId, value, timeUnit },\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\ttimerSetMusic(\r\n\t\t\tstate,\r\n\t\t\taction: PayloadAction<{ timerId: string; music: string }>\r\n\t\t) {\r\n\t\t\tconst { timerId, music } = action.payload\r\n\t\t\tconst timer = state.entities[timerId]\r\n\r\n\t\t\tif (timer) {\r\n\t\t\t\ttimer.music = music\r\n\t\t\t}\r\n\t\t},\r\n\t\ttimerDeductTime: {\r\n\t\t\treducer(\r\n\t\t\t\tstate,\r\n\t\t\t\taction: PayloadAction<{ timerId: string; delay: number }>\r\n\t\t\t) {\r\n\t\t\t\tconst { timerId, delay } = action.payload\r\n\t\t\t\tconst timer = state.entities[timerId]\r\n\r\n\t\t\t\tif (timer) {\r\n\t\t\t\t\ttimer.remainTime -= delay\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tprepare({ timerId, delay }: { timerId: string; delay: number }) {\r\n\t\t\t\tif (!delay) {\r\n\t\t\t\t\tdelay = 1000\r\n\t\t\t\t}\r\n\t\t\t\treturn { payload: { timerId, delay } }\r\n\t\t\t},\r\n\t\t},\r\n\t\ttimerStatusUpdated(state, action: PayloadAction<{ status: TimerStatus }>) {\r\n\t\t\tconst { status } = action.payload\r\n\t\t\tstate.status = status\r\n\t\t},\r\n\t\ttimerSetNextTimer(state) {\r\n\t\t\tconst timers = Object.values(state.entities)\r\n\t\t\tfor (const [index, timer] of timers.entries()) {\r\n\t\t\t\tif (timer && timer.remainTime > 0) {\r\n\t\t\t\t\tstate.activeTimerId = timer.id\r\n\t\t\t\t\tstate.activeTimerMusic = timer.music\r\n\t\t\t\t\tbreak\r\n\t\t\t\t}\r\n\t\t\t\t// reset if the last timer is over\r\n\t\t\t\tif (index === timers.length - 1) {\r\n\t\t\t\t\tstate.status = TimerStatus.STOPPED\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\ttimerDelayUpdated(state, action: PayloadAction<{ delay: number }>) {\r\n\t\t\tconst { delay } = action.payload\r\n\t\t\tstate.delay = delay\r\n\t\t},\r\n\t\ttimerResetTimers(state) {\r\n\t\t\tstate.activeTimerId = null\r\n\t\t\tstate.activeTimerMusic = \"\"\r\n\t\t\tstate.status = TimerStatus.STOPPED\r\n\t\t\tObject.values(state.entities).forEach((timer) => {\r\n\t\t\t\tif (timer) {\r\n\t\t\t\t\ttimer.remainTime = calcTimerRemainTime({\r\n\t\t\t\t\t\tminute: timer.minute,\r\n\t\t\t\t\t\tsecond: timer.second,\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tstate.loop.current = 1\r\n\t\t},\r\n\t\ttimerResetRemainTime(state) {\r\n\t\t\tObject.values(state.entities).forEach((timer) => {\r\n\t\t\t\tif (timer) {\r\n\t\t\t\t\ttimer.remainTime = calcTimerRemainTime({\r\n\t\t\t\t\t\tminute: timer.minute,\r\n\t\t\t\t\t\tsecond: timer.second,\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t},\r\n\t\ttimerSetShowCountdown(\r\n\t\t\tstate,\r\n\t\t\taction: PayloadAction<{ showCountdown: boolean }>\r\n\t\t) {\r\n\t\t\tconst { showCountdown } = action.payload\r\n\t\t\tstate.showCountdown = showCountdown\r\n\t\t},\r\n\t\ttimerSetCurrentLoop(state, action: PayloadAction<number>) {\r\n\t\t\tconst current = action.payload\r\n\t\t\tstate.loop.current = current\r\n\t\t},\r\n\t\ttimerSetTotalLoop(state, action: PayloadAction<number | \"\">) {\r\n\t\t\tconst total = action.payload\r\n\t\t\tstate.loop.total = total\r\n\t\t},\r\n\t\ttimerToggledMute(\r\n\t\t\tstate,\r\n\t\t\taction: PayloadAction<{ muteType: \"alarm\" | \"music\" }>\r\n\t\t) {\r\n\t\t\tconst { muteType } = action.payload\r\n\t\t\tstate.mute[muteType] = !state.mute[muteType]\r\n\t\t},\r\n\t},\r\n})\r\n\r\nexport default timersSlice.reducer\r\n\r\nexport const {\r\n\ttimersInitialized,\r\n\ttimerAdded,\r\n\ttimerDeleted,\r\n\ttimerSetLabel,\r\n\ttimerSetTime,\r\n\ttimerSetMusic,\r\n\ttimerDeductTime,\r\n\ttimerStatusUpdated,\r\n\ttimerSetNextTimer,\r\n\ttimerDelayUpdated,\r\n\ttimerResetTimers,\r\n\ttimerResetRemainTime,\r\n\ttimerSetShowCountdown,\r\n\ttimerSetCurrentLoop,\r\n\ttimerSetTotalLoop,\r\n\ttimerToggledMute,\r\n} = timersSlice.actions\r\n\r\nexport const {\r\n\tselectAll: selectTimers,\r\n\tselectById: selectTimerById,\r\n\tselectTotal,\r\n} = timersAdapter.getSelectors((state: RootState) => state.timers)\r\n\r\nexport const selectShowCountdown = (state: RootState) =>\r\n\tstate.timers.showCountdown\r\n\r\nexport const selectTimerDelay = (state: RootState) => state.timers.delay\r\n\r\nexport const selectActiveTimerId = (state: RootState): string | null =>\r\n\tstate.timers.activeTimerId\r\n\r\nexport const selectTimerStatus = (state: RootState) => state.timers.status\r\n\r\nexport const selectLastTimerId = createSelector(\r\n\tselectTimers,\r\n\tselectTotal,\r\n\t(timers, total) => {\r\n\t\tconst lastTimer = Object.values(timers)[total - 1]\r\n\t\treturn lastTimer.id\r\n\t}\r\n)\r\n\r\nexport const selectTimerLoopCurrentCount = (state: RootState) =>\r\n\tstate.timers.loop.current\r\n\r\nexport const selectTimerLoopTotalCount = (state: RootState) =>\r\n\tstate.timers.loop.total\r\n\r\nexport const selectTimerIsMuted = (state: RootState) => state.timers.mute.music\r\n\r\nexport const selectActiveTimerMusic = (state: RootState) =>\r\n\tstate.timers.activeTimerMusic\r\n","import React from \"react\"\r\nimport { useAppSelector, useAppDispatch } from \"../../hooks/hooks\"\r\nimport TimeInputField from \"../../components/TimeInputField\"\r\nimport {\r\n\tselectTimerById,\r\n\ttimerSetTime,\r\n\ttimerSetLabel,\r\n\ttimerSetMusic,\r\n\ttimerDeleted,\r\n} from \"./timersSlice\"\r\nimport {\r\n\tBox,\r\n\tPaper,\r\n\tFormControl,\r\n\tInputLabel,\r\n\tmakeStyles,\r\n\tMenuItem,\r\n\tSelect,\r\n\tTextField,\r\n\tIconButton,\r\n} from \"@material-ui/core\"\r\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\"\r\n\r\nimport TimeUnit from \"./TimeUnit\"\r\n\r\ntype Props = {\r\n\tid: string\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tmusicInput: {\r\n\t\tminWidth: 200,\r\n\t},\r\n\ttimerContainer: {\r\n\t\tborderRadius: 30,\r\n\t\tpadding: \"10px 20px\",\r\n\t\t[theme.breakpoints.up(\"sm\")]: {\r\n\t\t\tpadding: \"20px 40px\",\r\n\t\t},\r\n\t\tmarginTop: theme.spacing(2),\r\n\t\tmarginBottom: theme.spacing(2),\r\n\t},\r\n\ttimerToolbar: {\r\n\t\tjustifyContent: \"center\",\r\n\t\t[theme.breakpoints.up(\"sm\")]: {\r\n\t\t\tjustifyContent: \"flex-start\",\r\n\t\t},\r\n\t},\r\n\tdeleteButton: {\r\n\t\topacity: 0.2,\r\n\t\tposition: \"absolute\",\r\n\t\ttop: 15,\r\n\t\tright: 20,\r\n\t\ttransition: \"opacity 0.5s ease\",\r\n\t\tzIndex: 2,\r\n\t\t\"&:hover\": {\r\n\t\t\topacity: 1,\r\n\t\t},\r\n\t},\r\n}))\r\n\r\nconst Timer = ({ id }: Props) => {\r\n\tconst dispatch = useAppDispatch()\r\n\tconst classes = useStyles()\r\n\tconst timer = useAppSelector((state) => selectTimerById(state, id))\r\n\r\n\tconst handleTimeChange = (params: {\r\n\t\tevent: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n\t\ttimeUnit: TimeUnit\r\n\t}) => {\r\n\t\tconst {\r\n\t\t\tevent: {\r\n\t\t\t\ttarget: { value },\r\n\t\t\t},\r\n\t\t\ttimeUnit,\r\n\t\t} = params\r\n\r\n\t\tif (timer) {\r\n\t\t\tdispatch(timerSetTime(timer.id, parseInt(value), timeUnit))\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleLabelChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tif (timer) {\r\n\t\t\tdispatch(timerSetLabel({ timerId: timer.id, label: e.target.value }))\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleMusicChange = (\r\n\t\te: React.ChangeEvent<{\r\n\t\t\tname?: string | undefined\r\n\t\t\tvalue: unknown\r\n\t\t}>\r\n\t) => {\r\n\t\tif (timer) {\r\n\t\t\tconst value = e.target.value as string\r\n\t\t\tdispatch(timerSetMusic({ timerId: timer.id, music: value }))\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleDeleteTimer = () => {\r\n\t\tif (timer) {\r\n\t\t\tdispatch(timerDeleted(timer.id))\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Paper\r\n\t\t\tvariant=\"outlined\"\r\n\t\t\tclassName={classes.timerContainer}\r\n\t\t\tstyle={{ position: \"relative\" }}\r\n\t\t>\r\n\t\t\t<IconButton\r\n\t\t\t\tonClick={handleDeleteTimer}\r\n\t\t\t\tclassName={classes.deleteButton}\r\n\t\t\t\tsize=\"small\"\r\n\t\t\t>\r\n\t\t\t\t<HighlightOffIcon fontSize=\"small\" />\r\n\t\t\t</IconButton>\r\n\r\n\t\t\t<Box m={1} display=\"flex\" justifyContent=\"center\">\r\n\t\t\t\t<TextField\r\n\t\t\t\t\tvalue={timer ? timer.label : \"\"}\r\n\t\t\t\t\tonChange={handleLabelChange}\r\n\t\t\t\t\tinputProps={{ style: { textAlign: \"center\" } }}\r\n\t\t\t\t\tplaceholder=\"timer label\"\r\n\t\t\t\t/>\r\n\t\t\t</Box>\r\n\r\n\t\t\t<Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\r\n\t\t\t\t<Box m={1}>\r\n\t\t\t\t\t<TimeInputField\r\n\t\t\t\t\t\tid={`timer-${id}-min`}\r\n\t\t\t\t\t\tlabel=\"Minute\"\r\n\t\t\t\t\t\thandleChange={handleTimeChange}\r\n\t\t\t\t\t\tvalue={timer ? timer.minute : 0}\r\n\t\t\t\t\t\ttimeUnit={TimeUnit.MINUTE}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Box>\r\n\r\n\t\t\t\t<Box m={1}>:</Box>\r\n\r\n\t\t\t\t<Box m={1}>\r\n\t\t\t\t\t<TimeInputField\r\n\t\t\t\t\t\tid={`timer-${id}-sec`}\r\n\t\t\t\t\t\tlabel=\"Second\"\r\n\t\t\t\t\t\thandleChange={handleTimeChange}\r\n\t\t\t\t\t\tvalue={timer ? timer.second : 0}\r\n\t\t\t\t\t\ttimeUnit={TimeUnit.SECOND}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Box>\r\n\t\t\t</Box>\r\n\r\n\t\t\t<Box display=\"flex\" className={classes.timerToolbar}>\r\n\t\t\t\t<FormControl>\r\n\t\t\t\t\t<InputLabel\r\n\t\t\t\t\t\tid={timer ? `timer-music-${timer.id}-label` : \"timer-music-label\"}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tTimer Music\r\n\t\t\t\t\t</InputLabel>\r\n\t\t\t\t\t<Select\r\n\t\t\t\t\t\tlabelId={\r\n\t\t\t\t\t\t\ttimer ? `timer-music-${timer.id}-label` : \"timer-music-label\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tid={timer ? `timer-music-${timer.id}` : `timer-music`}\r\n\t\t\t\t\t\tvalue={timer ? timer.music : \"\"}\r\n\t\t\t\t\t\tonChange={handleMusicChange}\r\n\t\t\t\t\t\tclassName={classes.musicInput}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<MenuItem value=\"\">No Music</MenuItem>\r\n\t\t\t\t\t\t<MenuItem value=\"Muay_Thai_Sarama_ROUND_1.mp3\">\r\n\t\t\t\t\t\t\tMuay Thai Music\r\n\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t</Select>\r\n\t\t\t\t</FormControl>\r\n\t\t\t</Box>\r\n\t\t</Paper>\r\n\t)\r\n}\r\n\r\nexport default Timer\r\n","import Timer from \"./Timer\"\r\nimport { selectTimers } from \"./timersSlice\"\r\nimport { useAppSelector } from \"../../hooks/hooks\"\r\n\r\nconst TimerList = () => {\r\n\tconst timers = useAppSelector(selectTimers)\r\n\r\n\treturn (\r\n\t\t<main>\r\n\t\t\t{timers.map((timer) => (\r\n\t\t\t\t<Timer id={timer.id} key={timer.id} />\r\n\t\t\t))}\r\n\t\t</main>\r\n\t)\r\n}\r\n\r\nexport default TimerList\r\n","import React from \"react\"\r\nimport { useAppSelector, useAppDispatch } from \"../../hooks/hooks\"\r\nimport {\r\n\tselectTimerById,\r\n\tselectActiveTimerId,\r\n\tselectTimerDelay,\r\n\ttimerDeductTime,\r\n\ttimerSetNextTimer,\r\n\tselectTimerStatus,\r\n\tselectLastTimerId,\r\n\ttimerStatusUpdated,\r\n\tselectTimerLoopCurrentCount,\r\n\tselectTimerLoopTotalCount,\r\n\ttimerSetCurrentLoop,\r\n\ttimerResetRemainTime,\r\n} from \"./timersSlice\"\r\nimport useInterval from \"../../hooks/useInterval\"\r\nimport TimerStatus from \"./TimerStatus\"\r\nimport { convertTimeFormatForDisplay } from \"../../services/timerService\"\r\n\r\nimport { Box, Typography, makeStyles } from \"@material-ui/core\"\r\n\r\nimport ReactHowler from \"react-howler\"\r\n\r\nconst useStyles = makeStyles({\r\n\tdigits: {\r\n\t\tmargin: 10,\r\n\t},\r\n\tmillisecond: {\r\n\t\tposition: \"absolute\",\r\n\t\tbottom: 5,\r\n\t\tright: -40,\r\n\t},\r\n\tmainDisplay: {\r\n\t\tposition: \"relative\",\r\n\t\twidth: \"fit-content\",\r\n\t\tmargin: \"0 auto\",\r\n\t},\r\n})\r\n\r\ntype Props = {\r\n\talarmPlayer: React.RefObject<ReactHowler>\r\n}\r\n\r\nconst TimerCountdown = ({ alarmPlayer }: Props) => {\r\n\tconst dispatch = useAppDispatch()\r\n\tconst classes = useStyles()\r\n\r\n\tconst activeTimerId = useAppSelector(selectActiveTimerId)\r\n\tconst timer = useAppSelector((state) =>\r\n\t\tselectTimerById(state, activeTimerId ?? \"\")\r\n\t)\r\n\tconst delay = useAppSelector(selectTimerDelay)\r\n\tconst timerStatus = useAppSelector(selectTimerStatus)\r\n\tconst lastTimerId = useAppSelector(selectLastTimerId)\r\n\tconst loopCurrent = useAppSelector(selectTimerLoopCurrentCount)\r\n\tconst loopTotal = useAppSelector(selectTimerLoopTotalCount)\r\n\r\n\tconst timePerUnit = convertTimeFormatForDisplay(timer ? timer.remainTime : 0)\r\n\r\n\tconst showTimerDigits = (digit: number): string =>\r\n\t\tdigit < 10 ? \"0\" + digit : digit.toString()\r\n\r\n\tuseInterval(\r\n\t\t() => {\r\n\t\t\tif (!timer) {\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\r\n\t\t\tdispatch(timerDeductTime({ timerId: timer.id, delay }))\r\n\r\n\t\t\tif (timer.remainTime - delay <= 0) {\r\n\t\t\t\tif (alarmPlayer && alarmPlayer.current) {\r\n\t\t\t\t\talarmPlayer.current.howler.play()\r\n\t\t\t\t}\r\n\r\n\t\t\t\t/**\r\n\t\t\t\t * if it's the last timer, check if the loop count reaches total\r\n\t\t\t\t * if yes, update the status to be stopped\r\n\t\t\t\t * else dispatch count++ and set next timer\r\n\t\t\t\t */\r\n\r\n\t\t\t\tif (activeTimerId === lastTimerId) {\r\n\t\t\t\t\t// if loop count has reached the end\r\n\t\t\t\t\tif (loopCurrent < loopTotal) {\r\n\t\t\t\t\t\tdispatch(timerSetCurrentLoop(loopCurrent + 1))\r\n\t\t\t\t\t\t// reset remain time of every timer\r\n\t\t\t\t\t\tdispatch(timerResetRemainTime())\r\n\t\t\t\t\t\tdispatch(timerSetNextTimer())\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tdispatch(timerStatusUpdated({ status: TimerStatus.STOPPED }))\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdispatch(timerSetNextTimer())\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\ttimerStatus === TimerStatus.RUNNING &&\r\n\t\t\tactiveTimerId &&\r\n\t\t\ttimer &&\r\n\t\t\ttimer.id === activeTimerId\r\n\t\t\t? delay\r\n\t\t\t: null\r\n\t)\r\n\r\n\treturn (\r\n\t\t<Box textAlign=\"center\" height=\"100%\" display=\"flex\" flexDirection=\"column\">\r\n\t\t\t<Typography variant=\"h4\" component=\"div\" style={{ marginTop: 10 }}>\r\n\t\t\t\tRound: {loopCurrent} / {loopTotal}\r\n\t\t\t</Typography>\r\n\t\t\t<Box\r\n\t\t\t\tdisplay=\"flex\"\r\n\t\t\t\tjustifyContent=\"center\"\r\n\t\t\t\tflexDirection=\"column\"\r\n\t\t\t\theight=\"100%\"\r\n\t\t\t>\r\n\t\t\t\t<Typography variant=\"h4\" component=\"div\" style={{ marginBottom: 10 }}>\r\n\t\t\t\t\t{timer ? timer.label : \"\"}\r\n\t\t\t\t</Typography>\r\n\r\n\t\t\t\t<Box\r\n\t\t\t\t\tdisplay=\"flex\"\r\n\t\t\t\t\tjustifyContent=\"center\"\r\n\t\t\t\t\talignItems=\"center\"\r\n\t\t\t\t\tclassName={classes.mainDisplay}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Typography\r\n\t\t\t\t\t\tvariant=\"h2\"\r\n\t\t\t\t\t\tcomponent=\"div\"\r\n\t\t\t\t\t\tclassName={`${classes.digits}`}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{showTimerDigits(timePerUnit.minute)}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Typography variant=\"h3\">:</Typography>\r\n\t\t\t\t\t<Typography\r\n\t\t\t\t\t\tvariant=\"h2\"\r\n\t\t\t\t\t\tcomponent=\"div\"\r\n\t\t\t\t\t\tclassName={`${classes.digits}`}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{showTimerDigits(timePerUnit.second)}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t{delay < 1000 && (\r\n\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\tvariant=\"h5\"\r\n\t\t\t\t\t\t\tclassName={`${classes.millisecond} ${classes.digits}`}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{showTimerDigits(timePerUnit.millisec)}\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Box>\r\n\t\t\t</Box>\r\n\t\t</Box>\r\n\t)\r\n}\r\n\r\nexport default TimerCountdown\r\n","import { useEffect, useRef } from \"react\"\r\n\r\ntype RefObject = () => void\r\n\r\nexport default function useInterval(\r\n\tcallback: () => void,\r\n\tdelay: number | null\r\n) {\r\n\tconst savedCallback = useRef<RefObject | null>(null)\r\n\r\n\t// Remember the latest callback.\r\n\tuseEffect(() => {\r\n\t\tsavedCallback.current = callback\r\n\t\tif (!savedCallback) {\r\n\t\t}\r\n\t}, [callback])\r\n\r\n\t// Set up the interval.\r\n\tuseEffect(() => {\r\n\t\tfunction tick() {\r\n\t\t\tif (savedCallback && savedCallback.current) {\r\n\t\t\t\tsavedCallback.current()\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (delay !== null) {\r\n\t\t\tlet id = setInterval(tick, delay)\r\n\t\t\treturn () => clearInterval(id)\r\n\t\t}\r\n\t}, [delay])\r\n}\r\n","export default __webpack_public_path__ + \"static/media/timesup.e69d4f91.mp3\";","import React, { useRef } from \"react\"\r\nimport TimerList from \"./TimerList\"\r\nimport TimerCountdown from \"./TimerCountdown\"\r\nimport { useAppSelector } from \"../../hooks/hooks\"\r\nimport { selectShowCountdown, selectTimerStatus } from \"./timersSlice\"\r\nimport TimerStatus from \"./TimerStatus\"\r\nimport timesUpSfx from \"../../audio/timesup.mp3\"\r\nimport ReactHowler from \"react-howler\"\r\nimport { Box, Container, makeStyles } from \"@material-ui/core\"\r\n\r\nconst useStyles = makeStyles({\r\n\tmainSection: {\r\n\t\toverflowY: \"scroll\",\r\n\t},\r\n})\r\n\r\ntype Props = {\r\n\theightOfMainSection: number\r\n}\r\n\r\nconst TimerMain = ({ heightOfMainSection }: Props) => {\r\n\tconst classes = useStyles()\r\n\r\n\tconst timerStatus = useAppSelector(selectTimerStatus)\r\n\tconst showCountdown = useAppSelector(selectShowCountdown)\r\n\tconst alarmPlayer = useRef<ReactHowler>(null)\r\n\r\n\tif (timerStatus === TimerStatus.RUNNING || showCountdown) {\r\n\t\treturn (\r\n\t\t\t<Container maxWidth=\"sm\" style={{ height: heightOfMainSection }}>\r\n\t\t\t\t<TimerCountdown alarmPlayer={alarmPlayer}></TimerCountdown>\r\n\t\t\t\t<ReactHowler\r\n\t\t\t\t\tsrc={timesUpSfx}\r\n\t\t\t\t\tplaying={false}\r\n\t\t\t\t\thtml5={true}\r\n\t\t\t\t\tref={alarmPlayer}\r\n\t\t\t\t/>\r\n\t\t\t</Container>\r\n\t\t)\r\n\t} else {\r\n\t\treturn (\r\n\t\t\t<Box\r\n\t\t\t\tstyle={{ height: heightOfMainSection }}\r\n\t\t\t\tclassName={classes.mainSection}\r\n\t\t\t>\r\n\t\t\t\t<Container maxWidth=\"sm\">\r\n\t\t\t\t\t<TimerList />\r\n\t\t\t\t</Container>\r\n\t\t\t</Box>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default TimerMain\r\n","import { createSlice } from \"@reduxjs/toolkit\"\r\nimport {\r\n\tdefaultMinuteIfNotSaved,\r\n\tdefaultSecondIfNotSaved,\r\n} from \"../../services/timerService\"\r\nimport { loadSettingsState } from \"../../services/localStorage\"\r\n\r\nimport { RootState } from \"../../types/redux\"\r\nimport { PayloadAction } from \"@reduxjs/toolkit\"\r\nimport SettingsStateType from \"../../types/Settings\"\r\n\r\nconst getInitialState = (): SettingsStateType => {\r\n\tconst loadedState = loadSettingsState()\r\n\r\n\tconst systemPrefersDark =\r\n\t\twindow.matchMedia &&\r\n\t\twindow.matchMedia(\"(prefers-color-scheme: dark)\").matches\r\n\r\n\tconst isDarkMode =\r\n\t\tloadedState && loadedState.darkMode !== null\r\n\t\t\t? loadedState.darkMode === true\r\n\t\t\t: systemPrefersDark\r\n\r\n\tlet state = {\r\n\t\tdarkMode: isDarkMode,\r\n\t\tdefaultTime: {\r\n\t\t\tminute: defaultMinuteIfNotSaved,\r\n\t\t\tsecond: defaultSecondIfNotSaved,\r\n\t\t},\r\n\t}\r\n\r\n\tif (loadedState && loadedState.darkMode !== null) {\r\n\t\t// darkMode\r\n\t\tstate = { ...state, darkMode: loadedState.darkMode }\r\n\t}\r\n\r\n\tif (loadedState && loadedState.defaultTime) {\r\n\t\t// default minute\r\n\t\tif (loadedState.defaultTime.minute !== null) {\r\n\t\t\tstate = {\r\n\t\t\t\t...state,\r\n\t\t\t\tdefaultTime: {\r\n\t\t\t\t\t...state.defaultTime,\r\n\t\t\t\t\tminute: loadedState.defaultTime.minute,\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (loadedState.defaultTime.second !== null) {\r\n\t\t\t// default second\r\n\t\t\tstate = {\r\n\t\t\t\t...state,\r\n\t\t\t\tdefaultTime: {\r\n\t\t\t\t\t...state.defaultTime,\r\n\t\t\t\t\tsecond: loadedState.defaultTime.second,\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn state\r\n}\r\n\r\nconst settingsSlice = createSlice({\r\n\tname: \"settings\",\r\n\tinitialState: getInitialState(),\r\n\treducers: {\r\n\t\ttoggleDarkMode(state) {\r\n\t\t\tstate.darkMode = !state.darkMode\r\n\t\t},\r\n\t\tsetDefaultTime(\r\n\t\t\tstate,\r\n\t\t\taction: PayloadAction<{ value: number; timeUnit: \"minute\" | \"second\" }>\r\n\t\t) {\r\n\t\t\tconst { value, timeUnit } = action.payload\r\n\r\n\t\t\tstate.defaultTime[timeUnit] = Number.isInteger(value) ? value : \"\"\r\n\t\t},\r\n\t},\r\n})\r\n\r\nexport default settingsSlice.reducer\r\n\r\nexport const { toggleDarkMode, setDefaultTime } = settingsSlice.actions\r\n\r\nexport const selectIsDarkMode = (state: RootState) => state.settings.darkMode\r\n\r\nexport const selectDefaultMinute = (state: RootState) =>\r\n\tstate.settings.defaultTime.minute\r\nexport const selectDefaultSecond = (state: RootState) =>\r\n\tstate.settings.defaultTime.second\r\n","import React, { useEffect } from \"react\"\r\nimport { useAppSelector, useAppDispatch } from \"../hooks/hooks\"\r\nimport {\r\n\ttimerStatusUpdated,\r\n\tselectActiveTimerId,\r\n\ttimerSetNextTimer,\r\n\tselectTimerStatus,\r\n\ttimerResetTimers,\r\n\ttimerSetShowCountdown,\r\n\tselectTimerLoopTotalCount,\r\n\ttimerSetTotalLoop,\r\n\ttimerToggledMute,\r\n\tselectTimerIsMuted,\r\n\ttimerAdded,\r\n\tselectShowCountdown,\r\n} from \"../features/timers/timersSlice\"\r\nimport {\r\n\tselectDefaultMinute,\r\n\tselectDefaultSecond,\r\n} from \"../features/settings/settingsSlice\"\r\nimport TimerStatus from \"../features/timers/TimerStatus\"\r\n\r\nimport {\r\n\tButton,\r\n\tIconButton,\r\n\tBox,\r\n\tContainer,\r\n\tPaper,\r\n\tFormControl,\r\n\tmakeStyles,\r\n\tTextField,\r\n} from \"@material-ui/core\"\r\nimport VolumeOffRoundedIcon from \"@material-ui/icons/VolumeOffRounded\"\r\nimport VolumeUpRoundedIcon from \"@material-ui/icons/VolumeUpRounded\"\r\nimport AddCircleSharpIcon from \"@material-ui/icons/AddCircleSharp\"\r\nimport SettingsIcon from \"@material-ui/icons/Settings\"\r\n\r\nimport { createTimer } from \"../services/timerService\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tformControl: {\r\n\t\twidth: 125,\r\n\t},\r\n\tcontrolPanelContainer: {\r\n\t\tposition: \"relative\",\r\n\t\tpadding: theme.spacing(1),\r\n\t\t[theme.breakpoints.up(\"sm\")]: {\r\n\t\t\tpadding: theme.spacing(3),\r\n\t\t},\r\n\t},\r\n\taddButton: {\r\n\t\tposition: \"absolute\",\r\n\t\ttop: 0,\r\n\t\tright: 0,\r\n\t\tzIndex: 2,\r\n\t\t[theme.breakpoints.up(\"sm\")]: {\r\n\t\t\tright: 50,\r\n\t\t},\r\n\t},\r\n\ttoolbar: {\r\n\t\tmarginTop: 16,\r\n\t},\r\n}))\r\n\r\ntype Props = {\r\n\tsetHeightOfControlPanel: React.Dispatch<React.SetStateAction<number>>\r\n\thandleModalStatus: (e: {} | React.ChangeEvent<Element>, open: boolean) => void\r\n}\r\n\r\nconst ControlPanel = ({\r\n\tsetHeightOfControlPanel,\r\n\thandleModalStatus,\r\n}: Props) => {\r\n\tconst classes = useStyles()\r\n\tconst dispatch = useAppDispatch()\r\n\r\n\tconst timerStatus = useAppSelector(selectTimerStatus)\r\n\tconst activeTimerId = useAppSelector(selectActiveTimerId)\r\n\tconst loopTotal = useAppSelector(selectTimerLoopTotalCount)\r\n\tconst isMuted = useAppSelector(selectTimerIsMuted)\r\n\tconst showCountdown = useAppSelector(selectShowCountdown)\r\n\tconst defaultMinute = useAppSelector(selectDefaultMinute)\r\n\tconst defaultSecond = useAppSelector(selectDefaultSecond)\r\n\r\n\tconst handleStart = () => {\r\n\t\tif (!activeTimerId) {\r\n\t\t\tdispatch(timerSetNextTimer())\r\n\t\t}\r\n\t\tconst newStatus =\r\n\t\t\ttimerStatus === TimerStatus.RUNNING\r\n\t\t\t\t? TimerStatus.PAUSED\r\n\t\t\t\t: TimerStatus.RUNNING\r\n\t\tdispatch(\r\n\t\t\ttimerStatusUpdated({\r\n\t\t\t\tstatus: newStatus,\r\n\t\t\t})\r\n\t\t)\r\n\t\tdispatch(timerSetShowCountdown({ showCountdown: true }))\r\n\t}\r\n\r\n\tconst handleReset = () => {\r\n\t\tdispatch(timerSetShowCountdown({ showCountdown: false }))\r\n\t\tdispatch(timerResetTimers())\r\n\t}\r\n\r\n\tconst handleToggleMusicMuted = () =>\r\n\t\tdispatch(timerToggledMute({ muteType: \"music\" }))\r\n\r\n\tconst handleLoopChanged = (\r\n\t\te: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\r\n\t) => {\r\n\t\tconst value = e.target.value as number | \"\"\r\n\t\tdispatch(timerSetTotalLoop(value))\r\n\t}\r\n\r\n\tconst handleAddTimer = () =>\r\n\t\tdispatch(\r\n\t\t\ttimerAdded(createTimer({ minute: defaultMinute, second: defaultSecond }))\r\n\t\t)\r\n\r\n\t// get the height of control panel to render the height of main section\r\n\tuseEffect(() => {\r\n\t\tconst controlPanelElem = document.getElementById(\"control-panel\")\r\n\t\tif (controlPanelElem) {\r\n\t\t\tconst height = controlPanelElem.clientHeight\r\n\t\t\tsetHeightOfControlPanel(height)\r\n\t\t}\r\n\t})\r\n\r\n\treturn (\r\n\t\t<Paper elevation={10} id=\"control-panel\">\r\n\t\t\t<Container maxWidth=\"md\" className={classes.controlPanelContainer}>\r\n\t\t\t\t<IconButton\r\n\t\t\t\t\tsize=\"medium\"\r\n\t\t\t\t\tonClick={handleAddTimer}\r\n\t\t\t\t\tdisabled={showCountdown}\r\n\t\t\t\t\tclassName={classes.addButton}\r\n\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<AddCircleSharpIcon />\r\n\t\t\t\t</IconButton>\r\n\r\n\t\t\t\t<Box display=\"flex\" justifyContent=\"center\">\r\n\t\t\t\t\t<Box m={1}>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tonClick={handleStart}\r\n\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\tsize=\"large\"\r\n\t\t\t\t\t\t\tdisabled={showCountdown && timerStatus === TimerStatus.STOPPED}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{timerStatus === TimerStatus.RUNNING ? \"Pause\" : \"Start\"}\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t<Box m={1}>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tonClick={handleReset}\r\n\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\tcolor=\"secondary\"\r\n\t\t\t\t\t\t\tsize=\"large\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tReset\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Box>\r\n\r\n\t\t\t\t<Box\r\n\t\t\t\t\tdisplay=\"flex\"\r\n\t\t\t\t\tjustifyContent=\"space-around\"\r\n\t\t\t\t\tclassName={classes.toolbar}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Box display=\"flex\" justifyContent=\"space-between\">\r\n\t\t\t\t\t\t<IconButton onClick={(e) => handleModalStatus(e, true)}>\r\n\t\t\t\t\t\t\t<SettingsIcon />\r\n\t\t\t\t\t\t</IconButton>\r\n\r\n\t\t\t\t\t\t<IconButton onClick={handleToggleMusicMuted}>\r\n\t\t\t\t\t\t\t{isMuted ? <VolumeOffRoundedIcon /> : <VolumeUpRoundedIcon />}\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t</Box>\r\n\r\n\t\t\t\t\t<FormControl className={classes.formControl}>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tid=\"loop\"\r\n\t\t\t\t\t\t\tlabel=\"No. of rounds\"\r\n\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\tInputLabelProps={{\r\n\t\t\t\t\t\t\t\tshrink: true,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\tvalue={loopTotal}\r\n\t\t\t\t\t\t\tinputProps={{ inputMode: \"numeric\" }}\r\n\t\t\t\t\t\t\tonChange={handleLoopChanged}\r\n\t\t\t\t\t\t\tdisabled={showCountdown}\r\n\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\terror={Number.isNaN(loopTotal) || loopTotal < 1}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</FormControl>\r\n\t\t\t\t</Box>\r\n\t\t\t</Container>\r\n\t\t</Paper>\r\n\t)\r\n}\r\n\r\nexport default ControlPanel\r\n","import React from \"react\"\r\nimport { useAppSelector, useAppDispatch } from \"../../hooks/hooks\"\r\nimport { selectTimerDelay, timerDelayUpdated } from \"../timers/timersSlice\"\r\nimport {\r\n\ttoggleDarkMode,\r\n\tsetDefaultTime,\r\n\tselectIsDarkMode,\r\n\tselectDefaultMinute,\r\n\tselectDefaultSecond,\r\n} from \"../settings/settingsSlice\"\r\nimport TimeInputField from \"../../components/TimeInputField\"\r\nimport {\r\n\tBox,\r\n\tDialog,\r\n\tDialogTitle,\r\n\tDialogContent,\r\n\tFormControl,\r\n\tFormControlLabel,\r\n\tGrid,\r\n\tInputLabel,\r\n\tSelect,\r\n\tSwitch,\r\n\tMenuItem,\r\n\tmakeStyles,\r\n\tTypography,\r\n} from \"@material-ui/core\"\r\nimport SettingsIcon from \"@material-ui/icons/Settings\"\r\nimport TimeUnit from \"../timers/TimeUnit\"\r\n\r\nconst useStyles = makeStyles({\r\n\tformControl: {\r\n\t\twidth: 125,\r\n\t},\r\n})\r\n\r\ntype Props = {\r\n\topen: boolean\r\n\thandleOpen: (e: React.ChangeEvent | {}, open: boolean) => void\r\n}\r\n\r\nconst Settings = ({ open, handleOpen }: Props) => {\r\n\tconst dispatch = useAppDispatch()\r\n\tconst classes = useStyles()\r\n\r\n\tconst delay = useAppSelector(selectTimerDelay)\r\n\tconst isDarkMode = useAppSelector(selectIsDarkMode)\r\n\tconst defaultMinute = useAppSelector(selectDefaultMinute)\r\n\tconst defaultSecond = useAppSelector(selectDefaultSecond)\r\n\r\n\tconst handleDarkModeToggle = () => dispatch(toggleDarkMode())\r\n\r\n\tconst handleDelayChange = (\r\n\t\te: React.ChangeEvent<{\r\n\t\t\tname?: string | undefined\r\n\t\t\tvalue: unknown\r\n\t\t}>\r\n\t) => {\r\n\t\tconst newDelay = e.target.value as number\r\n\t\tdispatch(timerDelayUpdated({ delay: newDelay }))\r\n\t}\r\n\r\n\tconst handleTimeChange = (params: {\r\n\t\tevent: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n\t\ttimeUnit: TimeUnit\r\n\t}) => {\r\n\t\tconst {\r\n\t\t\tevent: {\r\n\t\t\t\ttarget: { value },\r\n\t\t\t},\r\n\t\t\ttimeUnit,\r\n\t\t} = params\r\n\r\n\t\tdispatch(setDefaultTime({ value: parseInt(value), timeUnit }))\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Dialog\r\n\t\t\tonClose={() => handleOpen({}, false)}\r\n\t\t\taria-labelledby=\"settings-dialog-title\"\r\n\t\t\topen={open}\r\n\t\t\tmaxWidth=\"sm\"\r\n\t\t\tfullWidth={true}\r\n\t\t>\r\n\t\t\t<DialogTitle id=\"settings-dialog-title\">\r\n\t\t\t\t<Box display=\"flex\" alignItems=\"center\">\r\n\t\t\t\t\t<SettingsIcon />\r\n\t\t\t\t\t<Typography component=\"span\" style={{ marginLeft: 10 }}>\r\n\t\t\t\t\t\tSettings\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</Box>\r\n\t\t\t</DialogTitle>\r\n\t\t\t<DialogContent style={{ paddingBottom: 16 }}>\r\n\t\t\t\t<Grid container>\r\n\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t<FormControl className={classes.formControl}>\r\n\t\t\t\t\t\t\t<InputLabel>Refresh rate</InputLabel>\r\n\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\tid=\"updateFreq\"\r\n\t\t\t\t\t\t\t\tvalue={delay}\r\n\t\t\t\t\t\t\t\tonChange={(e) => handleDelayChange(e)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<MenuItem value={10}>10</MenuItem>\r\n\t\t\t\t\t\t\t\t<MenuItem value={100}>100</MenuItem>\r\n\t\t\t\t\t\t\t\t<MenuItem value={1000}>1000</MenuItem>\r\n\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\tcontrol={\r\n\t\t\t\t\t\t\t\t<Switch\r\n\t\t\t\t\t\t\t\t\tchecked={isDarkMode ?? false}\r\n\t\t\t\t\t\t\t\t\tonChange={handleDarkModeToggle}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tlabel=\"Dark Theme\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t<TimeInputField\r\n\t\t\t\t\t\t\tid=\"default-timer-minute\"\r\n\t\t\t\t\t\t\tlabel=\"Minute\"\r\n\t\t\t\t\t\t\thandleChange={handleTimeChange}\r\n\t\t\t\t\t\t\tvalue={defaultMinute}\r\n\t\t\t\t\t\t\ttimeUnit={TimeUnit.MINUTE}\r\n\t\t\t\t\t\t\tstyles={{ marginTop: 20, marginRight: 20 }}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<TimeInputField\r\n\t\t\t\t\t\t\tid=\"default-timer-minute\"\r\n\t\t\t\t\t\t\tlabel=\"Second\"\r\n\t\t\t\t\t\t\thandleChange={handleTimeChange}\r\n\t\t\t\t\t\t\tvalue={defaultSecond}\r\n\t\t\t\t\t\t\ttimeUnit={TimeUnit.SECOND}\r\n\t\t\t\t\t\t\tstyles={{ marginTop: 20 }}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</DialogContent>\r\n\t\t</Dialog>\r\n\t)\r\n}\r\n\r\nexport default Settings\r\n","export default __webpack_public_path__ + \"static/media/Muay_Thai_Sarama_ROUND_1.d86445b7.mp3\";","import React, { useEffect, useRef } from \"react\"\r\nimport TimerStatus from \"../features/timers/TimerStatus\"\r\nimport { useAppSelector } from \"../hooks/hooks\"\r\nimport {\r\n\tselectTimerStatus,\r\n\tselectTimerIsMuted,\r\n\tselectActiveTimerMusic,\r\n} from \"../features/timers/timersSlice\"\r\nimport ReactHowler from \"react-howler\"\r\nimport muayThaiBgMusic from \"../audio/Muay_Thai_Sarama_ROUND_1.mp3\"\r\n\r\nconst MusicPlayer = () => {\r\n\tconst timerStatus = useAppSelector(selectTimerStatus)\r\n\tconst isMuted = useAppSelector(selectTimerIsMuted)\r\n\tconst music = useAppSelector(selectActiveTimerMusic)\r\n\r\n\tconst musicPlayer = useRef<ReactHowler>(null)\r\n\r\n\tuseEffect(() => {\r\n\t\t// play the music from the beginning once timer is changed\r\n\t\tif (musicPlayer && musicPlayer.current) {\r\n\t\t\tmusicPlayer.current.seek(0)\r\n\t\t}\r\n\t})\r\n\r\n\treturn (\r\n\t\t<ReactHowler\r\n\t\t\tsrc={muayThaiBgMusic}\r\n\t\t\tplaying={timerStatus === TimerStatus.RUNNING && music !== \"\"}\r\n\t\t\tmute={isMuted}\r\n\t\t\tref={musicPlayer}\r\n\t\t\tloop={true}\r\n\t\t\thtml5={true}\r\n\t\t/>\r\n\t)\r\n}\r\n\r\nexport default MusicPlayer\r\n","import React, { useEffect, useState, useCallback } from \"react\"\r\nimport TimerMain from \"../features/timers/TimerMain\"\r\nimport ControlPanel from \"./ControlPanel\"\r\nimport Settings from \"../features/settings/Settings\"\r\nimport { Box, Paper, makeStyles } from \"@material-ui/core\"\r\nimport MusicPlayer from \"./MusicPlayer\"\r\n\r\nconst useStyles = makeStyles({\r\n\tapp: {\r\n\t\toverflow: \"hidden\",\r\n\t\theight: \"100%\",\r\n\t\tborderRadius: 0,\r\n\t},\r\n\tappBar: {\r\n\t\tposition: \"fixed\",\r\n\t\tleft: 0,\r\n\t\tbottom: 0,\r\n\t\tborderRadius: \"5px 5px 0 0\",\r\n\t\tzIndex: 1100,\r\n\t\tboxSizing: \"border-box\",\r\n\t\twidth: \"100%\",\r\n\t},\r\n})\r\n\r\nconst TimerApp = () => {\r\n\tconst classes = useStyles()\r\n\tconst [heightOfControlPanel, setHeightOfControlPanel] = useState(0)\r\n\tconst [heightOfMainSection, setHeightOfMainSection] = useState(0)\r\n\tconst [modalIsOpen, openModal] = useState(false)\r\n\r\n\tconst setHeight = () => {\r\n\t\tconst heightOfMainSection = window.innerHeight - heightOfControlPanel\r\n\t\t// console.log(\"set height is called\", window.innerHeight, heightOfMainSection)\r\n\t\tsetHeightOfMainSection(heightOfMainSection)\r\n\t}\r\n\r\n\tconst handleModalStatus = (\r\n\t\te: {} | React.ChangeEvent<Element>,\r\n\t\topen: boolean\r\n\t) => openModal(open)\r\n\r\n\tuseCallback(setHeight, [heightOfControlPanel])\r\n\r\n\tuseEffect(() => {\r\n\t\tsetHeight()\r\n\t\twindow.addEventListener(\"resize\", setHeight)\r\n\r\n\t\treturn () => {\r\n\t\t\twindow.removeEventListener(\"resize\", setHeight)\r\n\t\t}\r\n\t})\r\n\r\n\treturn (\r\n\t\t<Paper elevation={0} className={`App ${classes.app}`}>\r\n\t\t\t<Box>\r\n\t\t\t\t<TimerMain heightOfMainSection={heightOfMainSection} />\r\n\t\t\t</Box>\r\n\r\n\t\t\t<Box className={classes.appBar}>\r\n\t\t\t\t<ControlPanel\r\n\t\t\t\t\tsetHeightOfControlPanel={setHeightOfControlPanel}\r\n\t\t\t\t\thandleModalStatus={handleModalStatus}\r\n\t\t\t\t/>\r\n\t\t\t</Box>\r\n\r\n\t\t\t<MusicPlayer />\r\n\r\n\t\t\t<Settings open={modalIsOpen} handleOpen={handleModalStatus} />\r\n\t\t</Paper>\r\n\t)\r\n}\r\n\r\nexport default TimerApp\r\n","import React from \"react\"\r\nimport \"./styles/App.scss\"\r\nimport TimerApp from \"./components/TimerApp\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { selectIsDarkMode } from \"./features/settings/settingsSlice\"\r\nimport { ThemeProvider } from \"@material-ui/core\"\r\nimport { unstable_createMuiStrictModeTheme as createMuiTheme } from \"@material-ui/core/styles\"\r\nimport blue from \"@material-ui/core/colors/blue\"\r\n\r\nconst App = () => {\r\n\tconst isDarkMode = useSelector(selectIsDarkMode)\r\n\r\n\tconst theme = React.useMemo(\r\n\t\t() =>\r\n\t\t\tcreateMuiTheme({\r\n\t\t\t\tpalette: {\r\n\t\t\t\t\tprimary: {\r\n\t\t\t\t\t\tmain: blue[500],\r\n\t\t\t\t\t},\r\n\t\t\t\t\ttype: isDarkMode ? \"dark\" : \"light\",\r\n\t\t\t\t},\r\n\t\t\t}),\r\n\t\t[isDarkMode]\r\n\t)\r\n\r\n\treturn (\r\n\t\t<ThemeProvider theme={theme}>\r\n\t\t\t<TimerApp />\r\n\t\t</ThemeProvider>\r\n\t)\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n\twindow.location.hostname === \"localhost\" ||\r\n\t\t// [::1] is the IPv6 localhost address.\r\n\t\twindow.location.hostname === \"[::1]\" ||\r\n\t\t// 127.0.0.0/8 are considered localhost for IPv4.\r\n\t\twindow.location.hostname.match(\r\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n\t\t)\r\n)\r\n\r\nexport function register(config) {\r\n\tif (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n\t\t// The URL constructor is available in all browsers that support SW.\r\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\r\n\t\tif (publicUrl.origin !== window.location.origin) {\r\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\r\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\r\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\twindow.addEventListener(\"load\", () => {\r\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n\t\t\tif (isLocalhost) {\r\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\r\n\t\t\t\tcheckValidServiceWorker(swUrl, config)\r\n\r\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\r\n\t\t\t\t// service worker/PWA documentation.\r\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\r\n\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t\"This web app is being served cache-first by a service \" +\r\n\t\t\t\t\t\t\t\"worker. To learn more, visit https://cra.link/PWA\"\r\n\t\t\t\t\t)\r\n\t\t\t\t})\r\n\t\t\t} else {\r\n\t\t\t\t// Is not localhost. Just register service worker\r\n\t\t\t\tregisterValidSW(swUrl, config)\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n\tnavigator.serviceWorker\r\n\t\t.register(swUrl)\r\n\t\t.then((registration) => {\r\n\t\t\tregistration.onupdatefound = () => {\r\n\t\t\t\tconst installingWorker = registration.installing\r\n\t\t\t\tif (installingWorker == null) {\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\t\t\t\tinstallingWorker.onstatechange = () => {\r\n\t\t\t\t\tif (installingWorker.state === \"installed\") {\r\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\r\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\r\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\r\n\t\t\t\t\t\t\t// content until all client tabs are closed.\r\n\t\t\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t\t\t\"New content is available and will be used when all \" +\r\n\t\t\t\t\t\t\t\t\t\"tabs for this page are closed. See https://cra.link/PWA.\"\r\n\t\t\t\t\t\t\t)\r\n\r\n\t\t\t\t\t\t\t// Execute callback\r\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\r\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// At this point, everything has been precached.\r\n\t\t\t\t\t\t\t// It's the perfect time to display a\r\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\r\n\t\t\t\t\t\t\tconsole.log(\"Content is cached for offline use.\")\r\n\r\n\t\t\t\t\t\t\t// Execute callback\r\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\r\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch((error) => {\r\n\t\t\tconsole.error(\"Error during service worker registration:\", error)\r\n\t\t})\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n\t// Check if the service worker can be found. If it can't reload the page.\r\n\tfetch(swUrl, {\r\n\t\theaders: { \"Service-Worker\": \"script\" },\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\r\n\t\t\tconst contentType = response.headers.get(\"content-type\")\r\n\t\t\tif (\r\n\t\t\t\tresponse.status === 404 ||\r\n\t\t\t\t(contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n\t\t\t) {\r\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\r\n\t\t\t\tnavigator.serviceWorker.ready.then((registration) => {\r\n\t\t\t\t\tregistration.unregister().then(() => {\r\n\t\t\t\t\t\twindow.location.reload()\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t} else {\r\n\t\t\t\t// Service worker found. Proceed as normal.\r\n\t\t\t\tregisterValidSW(swUrl, config)\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch(() => {\r\n\t\t\tconsole.log(\r\n\t\t\t\t\"No internet connection found. App is running in offline mode.\"\r\n\t\t\t)\r\n\t\t})\r\n}\r\n\r\nexport function unregister() {\r\n\tif (\"serviceWorker\" in navigator) {\r\n\t\tnavigator.serviceWorker.ready\r\n\t\t\t.then((registration) => {\r\n\t\t\t\tregistration.unregister()\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tconsole.error(error.message)\r\n\t\t\t})\r\n\t}\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { Middleware } from \"redux\"\r\nimport { RootStateOrAny } from \"react-redux\"\r\n\r\nimport {\r\n\ttimerAdded,\r\n\ttimerDeleted,\r\n\ttimerSetLabel,\r\n\ttimerSetTime,\r\n\ttimerSetMusic,\r\n\ttimerDelayUpdated,\r\n\ttimerSetTotalLoop,\r\n} from \"../features/timers/timersSlice\"\r\nimport {\r\n\ttoggleDarkMode,\r\n\tsetDefaultTime,\r\n} from \"../features/settings/settingsSlice\"\r\n\r\nimport { saveState } from \"../services/localStorage\"\r\n\r\nconst timersActionsToReserve = [\r\n\ttimerAdded,\r\n\ttimerDeleted,\r\n\ttimerSetLabel,\r\n\ttimerSetTime,\r\n\ttimerSetMusic,\r\n\ttimerDelayUpdated,\r\n\ttimerSetTotalLoop,\r\n].map((action) => action.type)\r\n\r\nconst settingsActionsToReserve = [toggleDarkMode, setDefaultTime].map(\r\n\t(action) => action.type\r\n)\r\n\r\nconst reserver: Middleware<{}, RootStateOrAny> =\r\n\t(store) => (next) => (action) => {\r\n\t\tconst currentAction = action.type\r\n\r\n\t\tlet result = next(action)\r\n\r\n\t\tif (timersActionsToReserve.includes(currentAction)) {\r\n\t\t\tsaveState({\r\n\t\t\t\ttimers: store.getState().timers,\r\n\t\t\t})\r\n\t\t} else if (settingsActionsToReserve.includes(currentAction)) {\r\n\t\t\tsaveState({\r\n\t\t\t\tsettings: store.getState().settings,\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\treturn result\r\n\t}\r\n\r\nexport default reserver\r\n","import { configureStore } from \"@reduxjs/toolkit\"\r\nimport timersReducer from \"./features/timers/timersSlice\"\r\nimport settingsReducer from \"./features/settings/settingsSlice\"\r\nimport reserver from \"./middleware/stateReserver\"\r\n\r\nconst store = configureStore({\r\n\treducer: {\r\n\t\ttimers: timersReducer,\r\n\t\tsettings: settingsReducer,\r\n\t},\r\n\tmiddleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(reserver),\r\n})\r\n\r\nexport default store\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport \"./index.css\"\r\nimport App from \"./App\"\r\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\"\r\nimport reportWebVitals from \"./reportWebVitals\"\r\n\r\nimport store from \"./store\"\r\nimport { Provider } from \"react-redux\"\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<Provider store={store}>\r\n\t\t\t<App />\r\n\t\t</Provider>\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.register()\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n"],"sourceRoot":""}